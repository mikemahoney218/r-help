From no@p@m @end|ng |rom ||@@e@NA  Wed Jan  3 13:26:16 2024
From: no@p@m @end|ng |rom ||@@e@NA (Dr Eberhard Lisse)
Date: Wed, 3 Jan 2024 14:26:16 +0200
Subject: [R] 
 Help request: Parsing docx files for key words and appending to
 a spreadsheet
In-Reply-To: <99249107-9adb-a202-0739-59b0eff6525e@gmail.com>
References: <e2368e9b-b11b-89a3-34cd-a7cf51fa8288@gmail.com>
 <CAAxdm-5VwQZ+Cpb+mXZXGTkh5eoTFpgxKwf6D+ZMXosxgTjcBQ@mail.gmail.com>
 <CA+etgPnMiZ_ZcG41Z31ERSv1NJOrRa8bvR2=CjN+H5aCYpBmwQ@mail.gmail.com>
 <umn9v5$la8$1@ciao.gmane.io> <26efc752-9e23-c00c-3881-e04b94852945@gmail.com>
 <umnn2r$13pq$1@ciao.gmane.io>
 <99249107-9adb-a202-0739-59b0eff6525e@gmail.com>
Message-ID: <un3jpa$10vu$1@ciao.gmane.io>

If you do something like this

	for i in  $(pandoc --list-output-formats);
		do pandoc -f docx -t $i -o test.$i Now\ they\ want\ us\ to\ charge\
	our\ electric\ cars\ from\ litter\ bins.docx;
	done

you get approximately 65 formats, from which you can pick one which you can
write a little parser for. The dokuwiki one for example uses long lines
which
makes parsing easier.

el


On 2023-12-30 13:57 , Andy wrote:
> Good idea, El - thanks.
>
> The link is
> https://docs.google.com/document/d/1QwuaWZk6tYlWQXJ3WLczxC8Cda6zVERk/edit?usp=sharing&ouid=103065135255080058813&rtpof=true&sd=true
>
>  This is helpful.
>
> From the article, which is typical of Lexis+ output, I want to
> extract the following fields and append to a Calc/ Excel spreadsheet.
> Given the volume of articles I have to work through, if this can be
> iterative and semi-automatic, that would be a god send and I might be
> able to do some actual research on the articles before I reach my
> pensionable age. :-)
>
> Title Newspaper Date Section and page number Length Byline Subject
> (only if the threshold of coverage for a specific subject is
>> =50% is reached (e.g. Greenwashing (51%)) - if not, enter 'nil' and
>>
> move onto the next article in the folder
>
> This is the ambition. I am clearly a long way short of that though.
>
> Many thanks. Andy


From j@ork|n @end|ng |rom @om@um@ry|@nd@edu  Thu Jan  4 13:21:39 2024
From: j@ork|n @end|ng |rom @om@um@ry|@nd@edu (Sorkin, John)
Date: Thu, 4 Jan 2024 12:21:39 +0000
Subject: [R] Obtaining a value of pie in a zero inflated model (fm-zinb2)
Message-ID: <DM6PR03MB5049A6587CD8AB9A83A0FE02E2672@DM6PR03MB5049.namprd03.prod.outlook.com>

I am running a zero inflated regression using the zeroinfl function similar to the model below:
  
 fm_zinb2 <- zeroinfl(art ~ . | ., data = bioChemists, dist = "poisson")
summary(fm_zinb2)

I have three questions:

1) How can I obtain a value for the parameter pie, which is the fraction of the population that is in the zero inflated model vs the fraction in the count model? 

2) For any particular subject, how can I determine if the subject is in the portion of the population that contributes a zero count because the subject is in the group of subjects who have structural zero responses vs. the subject being in the portion of the population who can contribute a zero or a non-zero response?

3) zero inflated models can be solved using closed form solutions, or using iterative methods. Which method is used by fm_zinb2?

Thank you,
John

John David Sorkin M.D., Ph.D.
Professor of Medicine, University of Maryland School of Medicine;

Associate Director for Biostatistics and Informatics, Baltimore VA Medical Center Geriatrics Research, Education, and Clinical Center;?

PI?Biostatistics and Informatics Core, University of Maryland School of Medicine Claude D. Pepper Older Americans Independence Center;

Senior Statistician University of Maryland Center for Vascular Research;

Division of Gerontology and Paliative Care,
10 North Greene Street
GRECC (BT/18/GR)
Baltimore, MD 21201-1524
Cell phone 443-418-5382




From ph@edru@v @end|ng |rom gm@||@com  Thu Jan  4 13:59:59 2024
From: ph@edru@v @end|ng |rom gm@||@com (Andy)
Date: Thu, 4 Jan 2024 12:59:59 +0000
Subject: [R] 
 Help request: Parsing docx files for key words and appending to
 a spreadsheet
In-Reply-To: <589890e3-3124-9ea5-1bdb-733005900d3f@gmail.com>
References: <e2368e9b-b11b-89a3-34cd-a7cf51fa8288@gmail.com>
 <2921616F-A02E-4C00-89B3-3E0A6FE077B3@noaa.gov>
 <956d7fcc-e643-0bc4-b438-e13a903bbbbf@gmail.com>
 <20231229235900.2a21ecd5@Tarkus>
 <CA+etgPmSrnsyUNcn0uAiA2ssHj7-XVGvG-omvtckaxBOEK_D0Q@mail.gmail.com>
 <6e613a8d-dd70-d9b7-3f25-c230b453b9b4@gmail.com>
 <CAGgJW7542CpC=+YysfGDFDCc-aT4q1o9b_ffRFfAjJ0j90eJBg@mail.gmail.com>
 <1a74c1cd-02f8-890d-3521-7a3143334a9f@gmail.com>
 <589890e3-3124-9ea5-1bdb-733005900d3f@gmail.com>
Message-ID: <b233190f-cc1e-d334-784c-5d403ab6e212@gmail.com>

Hi folks

Thanks for your help and suggestions - very much appreciated.

I now have some working code, using this file I uploaded for public 
access: 
https://docs.google.com/document/d/1QwuaWZk6tYlWQXJ3WLczxC8Cda6zVERk/edit?usp=sharing&ouid=103065135255080058813&rtpof=true&sd=true 


The small code segment that now works is as follows:

###########

# Load libraries
library(textreadr)
library(tcltk)
library(tidyverse)
#library(officer)
#library(stringr) #for splitting and trimming raw data
#library(tidyr) #for converting to wide format

# I'd like to keep this as it enables more control over the selected 
directories
filepath <- setwd(tk_choose.dir())

# The following correctly lists the names of all 9 files in my test 
directory
files <- list.files(filepath, ".docx")
files
length(files)

# Ideally, I'd like to skip this step by being able to automatically 
read in the name of each file, but one step at a time:
filename <- "Now they want us to charge our electric cars from litter 
bins.docx"

# This produces the file content as output when run, and identifies the 
fields that I want to extract.
read_docx(filename) %>%
 ? str_split(",") %>%
 ? unlist() %>%
 ? str_trim()

###########

What I'd like to try and accomplish next is to extract the data from 
selected fields and append to a spreadsheet (Calc or Excel) under 
specific columns, or if it is easier to write a CSV which I can then use 
later.

The fields I want to extract are illustrated with reference to the above 
file, viz.:

The title: "Now they want us to charge our electric cars from litter bins"
The name of the newspaper: "Mail on Sunday (London)"
The publication date: "September 24, 2023" (in date format, preferably 
separated into month and year (day is not important))
The section: "NEWS"
The page number(s): "16" (as numeric)
The length: "515" (as numeric)
The author: "Anna Mikhailova"
The subject: from the Subject section, but this is to match a value e.g. 
GREENWASHING >= 50% (here this value is 51% so would be included). A 
match moves onto select the highest value under the section "Industry" 
(here it is ELECTRIC MOBILITY (91%)) and appends this text and % value. 
If no match with 'Greenwashing', then appends 'Null' and moves onto the 
next file in the directory.

###########

The theory I am working with is if I can figure out how to extract these 
fields and append correctly, then the rest should just be wrapping this 
up in a for loop.

However, I am struggling to get my head around the extraction and append 
part. If I can get it to work for one of these fields, I suspect that I 
can repeat the basic syntax to extract and append the remaining fields.

Therefore, if someone can either suggest a syntax or point me to a 
useful tutorial, that would be splendid.

Thank you in anticipation.

Best wishes
Andy

<snip>


From cry@n @end|ng |rom b|ngh@mton@edu  Thu Jan  4 15:38:06 2024
From: cry@n @end|ng |rom b|ngh@mton@edu (Christopher W. Ryan)
Date: Thu, 4 Jan 2024 09:38:06 -0500
Subject: [R] 
 Obtaining a value of pie in a zero inflated model (fm-zinb2)
In-Reply-To: <DM6PR03MB5049A6587CD8AB9A83A0FE02E2672@DM6PR03MB5049.namprd03.prod.outlook.com>
References: <DM6PR03MB5049A6587CD8AB9A83A0FE02E2672@DM6PR03MB5049.namprd03.prod.outlook.com>
Message-ID: <02c6fe89-ccae-6c7c-c61e-f79cffad4358@binghamton.edu>

Are you referring to the zeroinfl() function in the countreg package? If
so, I think

predict(fm_zinb2, type = "zero", newdata = some.new.data)

will give you pi for each combination of covariate values that you
provide in some.new.data

where pi is the probability to observe a zero from the point mass component.

As to your second question, I'm not sure that's possible, for any
*particular, individual* subject. Others will undoubtedly know better
than I.

--Chris Ryan

Sorkin, John wrote:
> I am running a zero inflated regression using the zeroinfl function similar to the model below:
>   
>  fm_zinb2 <- zeroinfl(art ~ . | ., data = bioChemists, dist = "poisson")
> summary(fm_zinb2)
> 
> I have three questions:
> 
> 1) How can I obtain a value for the parameter pie, which is the fraction of the population that is in the zero inflated model vs the fraction in the count model? 
> 
> 2) For any particular subject, how can I determine if the subject is in the portion of the population that contributes a zero count because the subject is in the group of subjects who have structural zero responses vs. the subject being in the portion of the population who can contribute a zero or a non-zero response?
> 
> 3) zero inflated models can be solved using closed form solutions, or using iterative methods. Which method is used by fm_zinb2?
> 
> Thank you,
> John
> 
> John David Sorkin M.D., Ph.D.
> Professor of Medicine, University of Maryland School of Medicine;
> 
> Associate Director for Biostatistics and Informatics, Baltimore VA Medical Center Geriatrics Research, Education, and Clinical Center;?
> 
> PI?Biostatistics and Informatics Core, University of Maryland School of Medicine Claude D. Pepper Older Americans Independence Center;
> 
> Senior Statistician University of Maryland Center for Vascular Research;
> 
> Division of Gerontology and Paliative Care,
> 10 North Greene Street
> GRECC (BT/18/GR)
> Baltimore, MD 21201-1524
> Cell phone 443-418-5382
> 
> 
> 
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>


From j@ork|n @end|ng |rom @om@um@ry|@nd@edu  Sat Jan  6 04:17:58 2024
From: j@ork|n @end|ng |rom @om@um@ry|@nd@edu (Sorkin, John)
Date: Sat, 6 Jan 2024 03:17:58 +0000
Subject: [R] Amelia. Imputation of time-series data
Message-ID: <DM6PR03MB50495751D572168AACAECC72E2652@DM6PR03MB5049.namprd03.prod.outlook.com>

Colleagues,

I have started working with Amelia, with the aim of imputing missing data for time-series data. 

Although I have succeeded in getting Amelia to perform the imputation, I have not found any documentation describing how Amelia imputes time-series data. I have read the basic Amelia documentation, but it does not address how time-series data are imputed. The documentation describes general imputation where there is no serial auto correlation of repeated observations from the same subject. Does Amelia incorporate the serial autocorrelation in the imputation procedure? Can someone direct me to documentation that explains the imputation method? 

Thank you,
John


John David Sorkin M.D., Ph.D.
Professor of Medicine, University of Maryland School of Medicine;

Associate Director for Biostatistics and Informatics, Baltimore VA Medical Center Geriatrics Research, Education, and Clinical Center;?

PI?Biostatistics and Informatics Core, University of Maryland School of Medicine Claude D. Pepper Older Americans Independence Center;

Senior Statistician University of Maryland Center for Vascular Research;

Division of Gerontology and Paliative Care,
10 North Greene Street
GRECC (BT/18/GR)
Baltimore, MD 21201-1524
Cell phone 443-418-5382




From ph@edru@v @end|ng |rom gm@||@com  Sat Jan  6 10:47:03 2024
From: ph@edru@v @end|ng |rom gm@||@com (Andy)
Date: Sat, 6 Jan 2024 09:47:03 +0000
Subject: [R] 
 Help request: Parsing docx files for key words and appending to
 a spreadsheet
In-Reply-To: <SA1PR09MB7792A37BA7D15B486708C69FA8662@SA1PR09MB7792.namprd09.prod.outlook.com>
References: <mailman.370760.1.1704452402.37863.r-help@r-project.org>
 <SA1PR09MB7792A37BA7D15B486708C69FA8662@SA1PR09MB7792.namprd09.prod.outlook.com>
Message-ID: <672e10cd-12ee-d53e-1aad-6efdec8b3e0c@gmail.com>

Hi Tim

This is brilliant - thank you!!

I've had to tweak the basePath line a bit (I am on a Linux machine), but 
having done that, the code works as intended. This is a truly helpful 
contribution that gives me ideas about how to work it through for the 
missing fields, which is one of the major sticking points I kept bumping 
up against.

Thank you so much for this.

All the best
Andy

On 05/01/2024 13:59, Howard, Tim G (DEC) wrote:
> Here's a simplified version of how I would do it, using `textreadr` but otherwise base functions. I haven't done it
> all, but have a few examples of finding the correct row then extracting the right data.
> I made a duplicate of the file you provided, so this loops through the two identical files, extracts a few parts,
> then sticks those parts in a data frame.
>
> #####
> library(textreadr)
>
> # recommend not using setwd(), but instead just include the
> # path as follows
> basePath <- file.path("C:","temp")
> files <- list.files(path=basePath, pattern = "docx$")
>
> length(files)
> # 2
>
> # initialize a list to put the data in
> myList <- vector(mode = "list", length = length(files))
>
> for(i in 1:length(files)){
>    fileDat <- read_docx(file.path(basePath, files[[i]]))
>    # get the data you want, here one line per item to make it clearer
>    # assume consistency among articles
>    ttl <- fileDat[[1]]
>    src <- fileDat[[2]]
>    dt <- fileDat[[3]]
>    aut <- fileDat[grepl("Byline:",fileDat)]
>    aut <- trimws(sub("Byline:","",aut), whitespace = "[\\h\\v]")
>    pg <- fileDat[grepl("Pg.",fileDat)]
>    pg <- as.integer(sub(".*Pg. ([[:digit:]]+)","\\1",pg))
>    len <- fileDat[grepl("Length:", fileDat)]
>    len <- as.integer(sub("Length:.{1}([[:digit:]]+) .*","\\1",len))
>    myList[[i]] <- data.frame("title"=ttl,
>                     "source"=src,
>                     "date"=dt,
>                     "author"=aut,
>                     "page"=pg,
>                     "length"=len)
> }
>
> # roll up the list to a data frame. Many ways to do this.
> myDF <- do.call("rbind",myList)
>
> #####
>
> Hope that helps.
> Tim
>
>
>
>> ------------------------------
>>
>> Date: Thu, 4 Jan 2024 12:59:59 +0000
>> From: Andy <phaedrusv at gmail.com>
>> To: r-help at r-project.org
>> Subject: Re: [R]  Help request: Parsing docx files for key words and
>>          appending to a spreadsheet
>> Message-ID: <b233190f-cc1e-d334-784c-5d403ab6e212 at gmail.com>
>> Content-Type: text/plain; charset="utf-8"; Format="flowed"
>>
>> Hi folks
>>
>> Thanks for your help and suggestions - very much appreciated.
>>
>> I now have some working code, using this file I uploaded for public
>> access:
>> https://docs/.
>> google.com%2Fdocument%2Fd%2F1QwuaWZk6tYlWQXJ3WLczxC8Cda6zVER
>> k%2Fedit%3Fusp%3Dsharing%26ouid%3D103065135255080058813%26rtpof%
>> 3Dtrue%26sd%3Dtrue&data=05%7C02%7Ctim.howard%40dec.ny.gov%7C8f2
>> 952a3ae474d4da14908dc0ddd95fd%7Cf46cb8ea79004d108ceb80e8c1c81ee7
>> %7C0%7C0%7C638400492578674983%7CUnknown%7CTWFpbGZsb3d8eyJWIj
>> oiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3
>> 000%7C%7C%7C&sdata=%2BpYrk6cJA%2BDUn9szLbd2Y7R%2F30UNY2TFSJN
>> HcwkHa9Y%3D&reserved=0
>>
>>
>> The small code segment that now works is as follows:
>>
>> ###########
>>
>> # Load libraries
>> library(textreadr)
>> library(tcltk)
>> library(tidyverse)
>> #library(officer)
>> #library(stringr) #for splitting and trimming raw data
>> #library(tidyr) #for converting to wide format
>>
>> # I'd like to keep this as it enables more control over the selected directories
>> filepath <- setwd(tk_choose.dir())
>>
>> # The following correctly lists the names of all 9 files in my test directory files
>> <- list.files(filepath, ".docx") files
>> length(files)
>>
>> # Ideally, I'd like to skip this step by being able to automatically read in the
>> name of each file, but one step at a time:
>> filename <- "Now they want us to charge our electric cars from litter
>> bins.docx"
>>
>> # This produces the file content as output when run, and identifies the fields
>> that I want to extract.
>> read_docx(filename) %>%
>>     str_split(",") %>%
>>     unlist() %>%
>>     str_trim()
>>
>> ###########
>>
>> What I'd like to try and accomplish next is to extract the data from selected
>> fields and append to a spreadsheet (Calc or Excel) under specific columns, or
>> if it is easier to write a CSV which I can then use later.
>>
>> The fields I want to extract are illustrated with reference to the above file,
>> viz.:
>>
>> The title: "Now they want us to charge our electric cars from litter bins"
>> The name of the newspaper: "Mail on Sunday (London)"
>> The publication date: "September 24, 2023" (in date format, preferably
>> separated into month and year (day is not important)) The section: "NEWS"
>> The page number(s): "16" (as numeric)
>> The length: "515" (as numeric)
>> The author: "Anna Mikhailova"
>> The subject: from the Subject section, but this is to match a value e.g.
>> GREENWASHING >= 50% (here this value is 51% so would be included). A
>> match moves onto select the highest value under the section "Industry"
>> (here it is ELECTRIC MOBILITY (91%)) and appends this text and % value.
>> If no match with 'Greenwashing', then appends 'Null' and moves onto the
>> next file in the directory.
>>
>> ###########
>>
>> The theory I am working with is if I can figure out how to extract these fields
>> and append correctly, then the rest should just be wrapping this up in a for
>> loop.
>>
>> However, I am struggling to get my head around the extraction and append
>> part. If I can get it to work for one of these fields, I suspect that I can repeat
>> the basic syntax to extract and append the remaining fields.
>>
>> Therefore, if someone can either suggest a syntax or point me to a useful
>> tutorial, that would be splendid.
>>
>> Thank you in anticipation.
>>
>> Best wishes
>> Andy
>>
>> <snip>
>>
>>
>>
>>
>> ------------------------------
>>
>> Message: 3
>> Date: Thu, 4 Jan 2024 09:38:06 -0500
>> From: "Christopher W. Ryan" <cryan at binghamton.edu>
>> To: "Sorkin, John" <jsorkin at som.umaryland.edu>, "r-help at r-project.org
>>          (r-help at r-project.org)" <r-help at r-project.org>
>> Subject: Re: [R]  Obtaining a value of pie in a zero inflated model
>>          (fm-zinb2)
>> Message-ID: <02c6fe89-ccae-6c7c-c61e-f79cffad4358 at binghamton.edu>
>> Content-Type: text/plain; charset="utf-8"
>>
>> Are you referring to the zeroinfl() function in the countreg package? If so, I
>> think
>>
>> predict(fm_zinb2, type = "zero", newdata = some.new.data)
>>
>> will give you pi for each combination of covariate values that you provide in
>> some.new.data
>>
>> where pi is the probability to observe a zero from the point mass
>> component.
>>
>> As to your second question, I'm not sure that's possible, for any *particular,
>> individual* subject. Others will undoubtedly know better than I.
>>
>> --Chris Ryan
>>
>> Sorkin, John wrote:
>>> I am running a zero inflated regression using the zeroinfl function similar to
>> the model below:
>>>   fm_zinb2 <- zeroinfl(art ~ . | ., data = bioChemists, dist =
>>> "poisson")
>>> summary(fm_zinb2)
>>>
>>> I have three questions:
>>>
>>> 1) How can I obtain a value for the parameter pie, which is the fraction of
>> the population that is in the zero inflated model vs the fraction in the count
>> model?
>>> 2) For any particular subject, how can I determine if the subject is in the
>> portion of the population that contributes a zero count because the subject
>> is in the group of subjects who have structural zero responses vs. the subject
>> being in the portion of the population who can contribute a zero or a non-
>> zero response?
>>> 3) zero inflated models can be solved using closed form solutions, or using
>> iterative methods. Which method is used by fm_zinb2?
>>> Thank you,
>>> John
>>>
>>> John David Sorkin M.D., Ph.D.
>>> Professor of Medicine, University of Maryland School of Medicine;
>>>
>>> Associate Director for Biostatistics and Informatics, Baltimore VA
>>> Medical Center Geriatrics Research, Education, and Clinical Center;
>>>
>>> PI Biostatistics and Informatics Core, University of Maryland School
>>> of Medicine Claude D. Pepper Older Americans Independence Center;
>>>
>>> Senior Statistician University of Maryland Center for Vascular
>>> Research;
>>>
>>> Division of Gerontology and Paliative Care,
>>> 10 North Greene Street
>>> GRECC (BT/18/GR)
>>> Baltimore, MD 21201-1524
>>> Cell phone 443-418-5382
>>>
>>>
>>>
>>> ______________________________________________
>>> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>>> https://stat/
>>> .ethz.ch%2Fmailman%2Flistinfo%2Fr-
>> help&data=05%7C02%7Ctim.howard%40dec
>> .ny.gov%7C8f2952a3ae474d4da14908dc0ddd95fd%7Cf46cb8ea79004d108ceb
>> 80e8c
>> 1c81ee7%7C0%7C0%7C638400492578674983%7CUnknown%7CTWFpbGZsb3d
>> 8eyJWIjoiM
>> C4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000
>> %7C%7C
>> %7C&sdata=Z17L8H5Lv6Q6e9FHxDJauhNSwsL53Qsvh5YQiH8ztmY%3D&reser
>> ved=0
>>> PLEASE do read the posting guide
>>>
>> http://www.r/
>>> -project.org%2Fposting-
>> guide.html&data=05%7C02%7Ctim.howard%40dec.ny.g
>> ov%7C8f2952a3ae474d4da14908dc0ddd95fd%7Cf46cb8ea79004d108ceb80e8c
>> 1c81e
>> e7%7C0%7C0%7C638400492578674983%7CUnknown%7CTWFpbGZsb3d8eyJ
>> WIjoiMC4wLj
>> AwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%
>> 7C%7C&s
>> data=4PSWzIOvJoU%2FvrXXwwquhha8yyEUzC8z7PgdIpXrlGs%3D&reserved
>> =0
>>> and provide commented, minimal, self-contained, reproducible code.
>>>
>>
>>
>>
>> ------------------------------
>>
>> Subject: Digest Footer
>>
>> _______________________________________________
>> R-help at r-project.org mailing list
>> https://stat.e/
>> thz.ch%2Fmailman%2Flistinfo%2Fr-
>> help&data=05%7C02%7Ctim.howard%40dec.ny.gov%7C8f2952a3ae474d4da1
>> 4908dc0ddd95fd%7Cf46cb8ea79004d108ceb80e8c1c81ee7%7C0%7C0%7C638
>> 400492578674983%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAi
>> LCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&s
>> data=Z17L8H5Lv6Q6e9FHxDJauhNSwsL53Qsvh5YQiH8ztmY%3D&reserved=0
>> PLEASE do read the posting guide
>> http://www.r/
>> -project.org%2Fposting-
>> guide.html&data=05%7C02%7Ctim.howard%40dec.ny.gov%7C8f2952a3ae474
>> d4da14908dc0ddd95fd%7Cf46cb8ea79004d108ceb80e8c1c81ee7%7C0%7C0%
>> 7C638400492578674983%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAw
>> MDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%
>> 7C&sdata=4PSWzIOvJoU%2FvrXXwwquhha8yyEUzC8z7PgdIpXrlGs%3D&rese
>> rved=0
>> and provide commented, minimal, self-contained, reproducible code.
>>
>>
>> ------------------------------
>>
>> End of R-help Digest, Vol 251, Issue 2
>> **************************************


From bbo|ker @end|ng |rom gm@||@com  Mon Jan  8 03:04:15 2024
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Sun, 7 Jan 2024 21:04:15 -0500
Subject: [R] 
 Obtaining a value of pie in a zero inflated model (fm-zinb2)
In-Reply-To: <02c6fe89-ccae-6c7c-c61e-f79cffad4358@binghamton.edu>
References: <DM6PR03MB5049A6587CD8AB9A83A0FE02E2672@DM6PR03MB5049.namprd03.prod.outlook.com>
 <02c6fe89-ccae-6c7c-c61e-f79cffad4358@binghamton.edu>
Message-ID: <e50e05bb-b340-416f-b6bf-ad2cd2d51099@gmail.com>

    A little more.

   As Christopher Ryan points out, as long as the zero-inflation model 
is non-trivial (i.e. more complex than a single intercept for the whole 
population), there's a pi(i) for every observation i (you could 
certainly average the pi(i) values if you wanted, or compute pi for an 
averaged set of covariates).

library(pscl)
fm_zinb2 <- zeroinfl(art ~ . | ., data = bioChemists, dist = "poisson")

pi_i <- predict(fm_zinb2, type = "zero")
head(pi_i)
##          1          2          3          4          5          6
## 0.13392803 0.21936320 0.21973454 0.24697313 0.01890023 0.34281196


To get the conditional probability that a zero observation is a 
structural or a sampling zero, compute the probability of a sampling 
zero (exp(-mu[i]) for a Poisson model) and use Bayes' rule, assuming 
equal prior probs

## probability of _sampling_ zero

psampz <- exp(-predict(fm_zinb2, type = "count"))
head(psampz)
##          1          2          3          4          5          6
## 0.09507376 0.18361241 0.18688646 0.14774602 0.08992667 0.27235498

pz <- 1 - (1-pi_i)*(1-psampz)  ## prob of zero of either type
##         1         2         3         4         5         6
## 0.2162687 0.3626978 0.3655556 0.3582299 0.1071273 0.5218004

psampz/pz
head(psampz)/head(pz)
##         1         2         3         4         5         6
## 0.4396093 0.5062408 0.5112395 0.4124336 0.8394378 0.5219524

    3. I'm not aware of a closed-form solution for zero-inflation models 
as long as the count and/or structural-zero components depend on 
covariates?  In any case, looking inside zeroinfl() you can see that it 
calls optim() [using BFGS by default, see ?pscl::zeroinfl.control]

   cheers
    Ben Bolker


On 2024-01-04 9:38 a.m., Christopher W. Ryan via R-help wrote:
> Are you referring to the zeroinfl() function in the countreg package? If
> so, I think
> 
> predict(fm_zinb2, type = "zero", newdata = some.new.data)
> 
> will give you pi for each combination of covariate values that you
> provide in some.new.data
> 
> where pi is the probability to observe a zero from the point mass component.
> 
> As to your second question, I'm not sure that's possible, for any
> *particular, individual* subject. Others will undoubtedly know better
> than I.
> 
> --Chris Ryan
> 
> Sorkin, John wrote:
>> I am running a zero inflated regression using the zeroinfl function similar to the model below:
>>    
>>   fm_zinb2 <- zeroinfl(art ~ . | ., data = bioChemists, dist = "poisson")
>> summary(fm_zinb2)
>>
>> I have three questions:
>>
>> 1) How can I obtain a value for the parameter pie, which is the fraction of the population that is in the zero inflated model vs the fraction in the count model?
>>
>> 2) For any particular subject, how can I determine if the subject is in the portion of the population that contributes a zero count because the subject is in the group of subjects who have structural zero responses vs. the subject being in the portion of the population who can contribute a zero or a non-zero response?
>>
>> 3) zero inflated models can be solved using closed form solutions, or using iterative methods. Which method is used by fm_zinb2?
>>
>> Thank you,
>> John
>>
>> John David Sorkin M.D., Ph.D.
>> Professor of Medicine, University of Maryland School of Medicine;
>>
>> Associate Director for Biostatistics and Informatics, Baltimore VA Medical Center Geriatrics Research, Education, and Clinical Center;
>>
>> PI?Biostatistics and Informatics Core, University of Maryland School of Medicine Claude D. Pepper Older Americans Independence Center;
>>
>> Senior Statistician University of Maryland Center for Vascular Research;
>>
>> Division of Gerontology and Paliative Care,
>> 10 North Greene Street
>> GRECC (BT/18/GR)
>> Baltimore, MD 21201-1524
>> Cell phone 443-418-5382
>>
>>
>>
>> ______________________________________________
>> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>> https://stat.ethz.ch/mailman/listinfo/r-help
>> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
>> and provide commented, minimal, self-contained, reproducible code.
>>
> 
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.


