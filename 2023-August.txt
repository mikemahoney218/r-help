From p@u|bern@|07 @end|ng |rom gm@||@com  Tue Aug  1 15:57:49 2023
From: p@u|bern@|07 @end|ng |rom gm@||@com (Paul Bernal)
Date: Tue, 1 Aug 2023 08:57:49 -0500
Subject: [R] Plotting Fitted vs Observed Values in Logistic Regression Model
Message-ID: <CAMOcQfNC_0yD3hZejgtpMHqFT6GyfJXnhVcUgopiFPDZuPS+9g@mail.gmail.com>

Dear friends,

I hope  this email finds you all well. This is the dataset I am working
with:
dput(random_mod12_data2)
structure(list(Index = c(1L, 5L, 11L, 3L, 2L, 8L, 9L, 4L), x = c(5,
13, 25, 9, 7, 19, 21, 11), n = c(500, 500, 500, 500, 500, 500,
500, 500), r = c(100, 211, 391, 147, 122, 310, 343, 176), ratio = c(0.2,
0.422, 0.782, 0.294, 0.244, 0.62, 0.686, 0.352)), row.names = c(NA,
-8L), class = "data.frame")

A brief description of the dataset:
Index: is just a column that shows the ID of each observation (row)
x: is a column which gives information on the discount rate of the coupon
n: is the sample or number of observations
r: is the count of redeemed coupons
ratio: is just the ratio of redeemed coupons to n (total number of
observations)

#Fitting a logistic regression model to response variable y for problem 13.4
logistic_regmod2 <- glm(formula = ratio~x, family = binomial(logit), data =
random_mod12_data2)

I would like to plot the value of r (in the y-axis) vs x (the different
discount rates) and then superimpose the logistic regression fitted values
all in the same plot.

How could I accomplish this?

Any help and/or guidance will be greatly appreciated.

Kind regards,
Paul

	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Tue Aug  1 16:06:57 2023
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Tue, 1 Aug 2023 10:06:57 -0400
Subject: [R] 
 Plotting Fitted vs Observed Values in Logistic Regression Model
In-Reply-To: <CAMOcQfNC_0yD3hZejgtpMHqFT6GyfJXnhVcUgopiFPDZuPS+9g@mail.gmail.com>
References: <CAMOcQfNC_0yD3hZejgtpMHqFT6GyfJXnhVcUgopiFPDZuPS+9g@mail.gmail.com>
Message-ID: <da6e16e2-bb3d-10ff-6a72-c806bc0d0e65@gmail.com>

logistic_regmod2 <- glm(formula = ratio~x, family = binomial(logit), data =
random_mod12_data2, weights =n)

plot(ratio ~ x, data = random_mod12_data2)

pframe <- data.frame(x = sort(random_mod12_data2$x))
pframe$ratio <- predict(logistic_regmod2, newdata = pframe, type = 
"response")
with(pframe, lines(x, ratio))



On 2023-08-01 9:57 a.m., Paul Bernal wrote:
> Dear friends,
> 
> I hope  this email finds you all well. This is the dataset I am working
> with:
> dput(random_mod12_data2)
> structure(list(Index = c(1L, 5L, 11L, 3L, 2L, 8L, 9L, 4L), x = c(5,
> 13, 25, 9, 7, 19, 21, 11), n = c(500, 500, 500, 500, 500, 500,
> 500, 500), r = c(100, 211, 391, 147, 122, 310, 343, 176), ratio = c(0.2,
> 0.422, 0.782, 0.294, 0.244, 0.62, 0.686, 0.352)), row.names = c(NA,
> -8L), class = "data.frame")
> 
> A brief description of the dataset:
> Index: is just a column that shows the ID of each observation (row)
> x: is a column which gives information on the discount rate of the coupon
> n: is the sample or number of observations
> r: is the count of redeemed coupons
> ratio: is just the ratio of redeemed coupons to n (total number of
> observations)
> 
> #Fitting a logistic regression model to response variable y for problem 13.4
> logistic_regmod2 <- glm(formula = ratio~x, family = binomial(logit), data =
> random_mod12_data2)
> 
> I would like to plot the value of r (in the y-axis) vs x (the different
> discount rates) and then superimpose the logistic regression fitted values
> all in the same plot.
> 
> How could I accomplish this?
> 
> Any help and/or guidance will be greatly appreciated.
> 
> Kind regards,
> Paul
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.

-- 
Dr. Benjamin Bolker
Professor, Mathematics & Statistics and Biology, McMaster University
Director, School of Computational Science and Engineering
(Acting) Graduate chair, Mathematics & Statistics
 > E-mail is sent at my convenience; I don't expect replies outside of 
working hours.


From ru|pb@rr@d@@ @end|ng |rom @@po@pt  Wed Aug  2 15:50:17 2023
From: ru|pb@rr@d@@ @end|ng |rom @@po@pt (Rui Barradas)
Date: Wed, 2 Aug 2023 14:50:17 +0100
Subject: [R] 
 Plotting Fitted vs Observed Values in Logistic Regression Model
In-Reply-To: <CAMOcQfNC_0yD3hZejgtpMHqFT6GyfJXnhVcUgopiFPDZuPS+9g@mail.gmail.com>
References: <CAMOcQfNC_0yD3hZejgtpMHqFT6GyfJXnhVcUgopiFPDZuPS+9g@mail.gmail.com>
Message-ID: <39b5dd66-5539-6af9-1a13-cfb6a88e32ab@sapo.pt>

?s 14:57 de 01/08/2023, Paul Bernal escreveu:
> Dear friends,
> 
> I hope  this email finds you all well. This is the dataset I am working
> with:
> dput(random_mod12_data2)
> structure(list(Index = c(1L, 5L, 11L, 3L, 2L, 8L, 9L, 4L), x = c(5,
> 13, 25, 9, 7, 19, 21, 11), n = c(500, 500, 500, 500, 500, 500,
> 500, 500), r = c(100, 211, 391, 147, 122, 310, 343, 176), ratio = c(0.2,
> 0.422, 0.782, 0.294, 0.244, 0.62, 0.686, 0.352)), row.names = c(NA,
> -8L), class = "data.frame")
> 
> A brief description of the dataset:
> Index: is just a column that shows the ID of each observation (row)
> x: is a column which gives information on the discount rate of the coupon
> n: is the sample or number of observations
> r: is the count of redeemed coupons
> ratio: is just the ratio of redeemed coupons to n (total number of
> observations)
> 
> #Fitting a logistic regression model to response variable y for problem 13.4
> logistic_regmod2 <- glm(formula = ratio~x, family = binomial(logit), data =
> random_mod12_data2)
> 
> I would like to plot the value of r (in the y-axis) vs x (the different
> discount rates) and then superimpose the logistic regression fitted values
> all in the same plot.
> 
> How could I accomplish this?
> 
> Any help and/or guidance will be greatly appreciated.
> 
> Kind regards,
> Paul
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
Hello,

Here is another way with ggplot2.
It doesn't give you the fitted values but it plots the fitted line.


library(ggplot2)

ggplot(random_mod12_data2, aes(x, ratio)) +
   geom_point() +
   stat_smooth(
     formula = y ~ x,
     method = glm,
     method.args = list(family = binomial),
     se = FALSE
   )


Hope this helps,

Rui Barradas


From n|ckmwr@y @end|ng |rom gm@||@com  Wed Aug  2 19:10:41 2023
From: n|ckmwr@y @end|ng |rom gm@||@com (Nick Wray)
Date: Wed, 2 Aug 2023 18:10:41 +0100
Subject: [R] Choosing colours for lines in ggplot2
Message-ID: <CABxY9BMwYCr09zfbzfeRMo8TPF6xLJwBRpv1LJ6JpJebHtcdkQ@mail.gmail.com>

Hello - I am trying to plot flows in a number of rivers within the same
plot, and need to colour the lines differently, using a colour-blind
palette.


Code beneath works but has colours assigned by the program I have made some
simple dummy data:
## code 1
cb8<- c("#000000", "#E69F00", "#56B4E9", "#009E73","#F0E442", "#0072B2",
"#D55E00", "#CC79A7")  ## this is the colour-blind palette
 set.seed(020823)
 df<-as.data.frame(cbind(rep(1980:1991,2),c(10*runif(12),10*runif(12)),c(rep(1,12),rep(2,12))))
 colnames(df)<-c("Year","Flow","Stat")
 df
 ggplot(df,aes(Year,Flow,group=Stat,colour=Stat))+
   coord_cartesian(ylim = c(0, 10)) +
   geom_line()+
   geom_point()
 ## this works

## BUT:
## code 2
col.2<-cb8[4:5]
 ggplot(df,aes(Year,Flow,group=Stat,colour=Stat))+
   coord_cartesian(ylim = c(0, 10)) +
   geom_line()+
   geom_point()+
 scale_color_manual(values =cb8[4:5])+
   theme_bw()
 ## this gives error message Error: Continuous value supplied to discrete
scale

## However this example using code from the net does work so I don't
understand why my ## second code doesn't work.
## code 3
 df.1 <- data.frame(store=c('A', 'A', 'A', 'B', 'B', 'B', 'C', 'C', 'C'),
                  week=c(1, 2, 3, 1, 2, 3, 1, 2, 3),
                  sales=c(9, 12, 15, 7, 9, 14, 10, 16, 19))
 ggplot(df.1, aes(x=week, y=sales, group=store, color=store)) +
   geom_line(size=2) +
   #scale_color_manual(values=c('orange', 'pink', 'red'))
   scale_color_manual(values=cb8[4:6])

Can anyone help? Thanks Nick Wray

	[[alternative HTML version deleted]]


From ru|pb@rr@d@@ @end|ng |rom @@po@pt  Wed Aug  2 20:26:34 2023
From: ru|pb@rr@d@@ @end|ng |rom @@po@pt (Rui Barradas)
Date: Wed, 2 Aug 2023 19:26:34 +0100
Subject: [R] Choosing colours for lines in ggplot2
In-Reply-To: <CABxY9BMwYCr09zfbzfeRMo8TPF6xLJwBRpv1LJ6JpJebHtcdkQ@mail.gmail.com>
References: <CABxY9BMwYCr09zfbzfeRMo8TPF6xLJwBRpv1LJ6JpJebHtcdkQ@mail.gmail.com>
Message-ID: <b536355c-961a-f43e-c0cc-7a4f887ca2b2@sapo.pt>

?s 18:10 de 02/08/2023, Nick Wray escreveu:
> Hello - I am trying to plot flows in a number of rivers within the same
> plot, and need to colour the lines differently, using a colour-blind
> palette.
> 
> 
> Code beneath works but has colours assigned by the program I have made some
> simple dummy data:
> ## code 1
> cb8<- c("#000000", "#E69F00", "#56B4E9", "#009E73","#F0E442", "#0072B2",
> "#D55E00", "#CC79A7")  ## this is the colour-blind palette
>   set.seed(020823)
>   df<-as.data.frame(cbind(rep(1980:1991,2),c(10*runif(12),10*runif(12)),c(rep(1,12),rep(2,12))))
>   colnames(df)<-c("Year","Flow","Stat")
>   df
>   ggplot(df,aes(Year,Flow,group=Stat,colour=Stat))+
>     coord_cartesian(ylim = c(0, 10)) +
>     geom_line()+
>     geom_point()
>   ## this works
> 
> ## BUT:
> ## code 2
> col.2<-cb8[4:5]
>   ggplot(df,aes(Year,Flow,group=Stat,colour=Stat))+
>     coord_cartesian(ylim = c(0, 10)) +
>     geom_line()+
>     geom_point()+
>   scale_color_manual(values =cb8[4:5])+
>     theme_bw()
>   ## this gives error message Error: Continuous value supplied to discrete
> scale
> 
> ## However this example using code from the net does work so I don't
> understand why my ## second code doesn't work.
> ## code 3
>   df.1 <- data.frame(store=c('A', 'A', 'A', 'B', 'B', 'B', 'C', 'C', 'C'),
>                    week=c(1, 2, 3, 1, 2, 3, 1, 2, 3),
>                    sales=c(9, 12, 15, 7, 9, 14, 10, 16, 19))
>   ggplot(df.1, aes(x=week, y=sales, group=store, color=store)) +
>     geom_line(size=2) +
>     #scale_color_manual(values=c('orange', 'pink', 'red'))
>     scale_color_manual(values=cb8[4:6])
> 
> Can anyone help? Thanks Nick Wray
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
Hello,

Your Stat column is numeric, therefore, ggplot sees it as continuous.
To make it work, coerce to factor. Here are two ways.


## 1st way, Stat coerce to factor in the ggplot code
## this means you will have to set the legend name
## manually in scale_color_manual
## code 2, now it works
col.2<-cb8[4:5]
ggplot(df, aes(Year,Flow, group = factor(Stat), colour = factor(Stat)))+
   coord_cartesian(ylim = c(0, 10)) +
   geom_line()+
   geom_point()+
   scale_color_manual(name = "Stat", values = cb8[4:5])+
   theme_bw()


## 2nd way, since you are using ggplot2, a tidyverse package,
## coerce to factor in a pipe before the ggplot call
## this is done with dplyr::mutate and R's native pipe operator
## (could also be magritttr's pipe)
## I have left name = "Stat" like above though it's no
## longer needed
df |>
   dplyr::mutate(Stat = factor(Stat)) |>
   ggplot(aes(Year, Flow, group = Stat, colour = Stat))+
   coord_cartesian(ylim = c(0, 10)) +
   geom_line()+
   geom_point()+
   scale_color_manual(name = "Stat", values = cb8[4:5])+
   theme_bw()



Hope this helps,

Rui Barradas


