From m@rong|u@|u|g| @end|ng |rom gm@||@com  Thu Dec  1 12:25:40 2022
From: m@rong|u@|u|g| @end|ng |rom gm@||@com (Luigi Marongiu)
Date: Thu, 1 Dec 2022 12:25:40 +0100
Subject: [R] Select dataframe row containing a digit
In-Reply-To: <20221201085928.18573b32@rolf-Latitude-E7470>
References: <CAMk+s2SbBEZVU6ey_Ua3vzmwdtfNnatfYRXJ0_ecV-hpBKfdPw@mail.gmail.com>
 <20221201085928.18573b32@rolf-Latitude-E7470>
Message-ID: <CAMk+s2RSzB+R+KZmvokU=B0ikUan42e-4e1S1kCxrT_QyEZ=rg@mail.gmail.com>

Thank you, those are all viable solutions.
Regards
Luigi

On Wed, Nov 30, 2022 at 8:59 PM Rolf Turner <r.turner at auckland.ac.nz> wrote:
>
>
> On Wed, 30 Nov 2022 13:40:50 +0100
> Luigi Marongiu <marongiu.luigi at gmail.com> wrote:
>
> > Hello,
> > I have a data frame where some lines containing strings including
> > digits. How do I select those rows and change their values?
> >
> > In essence, I have a data frame with different values assigned to the
> > column "val". I am formatting everything to either "POS" and "NEG",
> > but values entered as number should get the value "NUM".
> > How do I change such values?
> >
>
> What I do in such circumstances:
>
> suppressWarnings(X$val[!is.na(as.numeric(X$val))] <- "NUM")
>
> The "suppressWarnings()" bit is just included due to my OCD.
>
> This avoids fooling about with regular expressions, which always
> requires a huge amount of trial and error, and a great diminishment of
> the amount of hair on one's head (as a result of tearing out).
>
> Note that I have changed the name of your data frame from "df" to "X",
> since df() is a built-in R function (density of the F-distribution).
>
> See fortunes::fortune("might clash").
>
> cheers,
>
> Rolf Turner
>
> --
> Honorary Research Fellow
> Department of Statistics
> University of Auckland
> Phone: +64-9-373-7599 ext. 88276
>


-- 
Best regards,
Luigi


From r@ywong @end|ng |rom t@mu@edu  Fri Dec  2 04:55:35 2022
From: r@ywong @end|ng |rom t@mu@edu (Raymond Wong)
Date: Thu, 1 Dec 2022 21:55:35 -0600
Subject: [R] 2023 John M. Chambers Software Award
In-Reply-To: <f8a848c6-7ed0-4196-9cdc-8040b69c9ada@Spark>
References: <f8a848c6-7ed0-4196-9cdc-8040b69c9ada@Spark>
Message-ID: <39017c8b-eab3-4fb8-aaad-cc934ac10578@Spark>

Dear R-help listers,

I would like to let you know that submission window of the John M. Chambers Software Award is now open. The submission deadline is December 15, 2022.

The Statistical Computing Section of the American Statistical Association announces the competition for the John M. Chambers Statistical Software Award. In 1998 the Association for Computing Machinery (ACM) presented the ACM Software System Award to John Chambers for the design and development of S. Dr. Chambers generously donated his award to the Statistical Computing Section to endow an annual prize for statistical software written by, or in collaboration with, an undergraduate or graduate student.

Please visit http://asa.stat.uconn.edu for more information.

Best regards,

Sincerely,

Raymond Wong

Awards Chair
ASA Section on Statistical Computing
ASA Section on Statistical Graphics

	[[alternative HTML version deleted]]


From ev@n@cooch @end|ng |rom gm@||@com  Fri Dec  2 18:18:56 2022
From: ev@n@cooch @end|ng |rom gm@||@com (Evan Cooch)
Date: Fri, 2 Dec 2022 12:18:56 -0500
Subject: [R] interval between specific characters in a string...
Message-ID: <4d5418e3-0c41-43c0-e124-d735dbd707a4@gmail.com>

Was wondering if there is an 'efficient/elegant' way to do the following 
(without tidyverse). Take a string

abaaabbaaaaabaaab

Its easy enough to count the number of times the character 'b' shows up 
in the string, but...what I'm looking for is outputing the 'intervals' 
between occurrences of 'b' (starting the counter at the beginning of the 
string). So, for the preceding example, 'b' shows up in positions

2, 6, 7, 13, 17

So, the interval data would be: 2, 4, 1, 6, 4

My main approach has been to simply output positions (say, something 
like unlist(gregexpr('b', target_string))), and 'do the math' between 
successive positions. Can anyone suggest a more elegant approach?

Thanks in advance...


From @kw@|mmo @end|ng |rom gm@||@com  Sat Dec  3 01:01:18 2022
From: @kw@|mmo @end|ng |rom gm@||@com (Andrew Simmons)
Date: Fri, 2 Dec 2022 19:01:18 -0500
Subject: [R] interval between specific characters in a string...
In-Reply-To: <4d5418e3-0c41-43c0-e124-d735dbd707a4@gmail.com>
References: <4d5418e3-0c41-43c0-e124-d735dbd707a4@gmail.com>
Message-ID: <CAPcHnpSRXU0RLOER+8Jxsxi-LumpK43sr5X-yXAMxuvcqBdKkA@mail.gmail.com>

try

gregexpr('b+', target_string)

which looks for one or more b characters, then get the attribute
"match.length"

On Fri, Dec 2, 2022, 18:56 Evan Cooch <evan.cooch at gmail.com> wrote:

> Was wondering if there is an 'efficient/elegant' way to do the following
> (without tidyverse). Take a string
>
> abaaabbaaaaabaaab
>
> Its easy enough to count the number of times the character 'b' shows up
> in the string, but...what I'm looking for is outputing the 'intervals'
> between occurrences of 'b' (starting the counter at the beginning of the
> string). So, for the preceding example, 'b' shows up in positions
>
> 2, 6, 7, 13, 17
>
> So, the interval data would be: 2, 4, 1, 6, 4
>
> My main approach has been to simply output positions (say, something
> like unlist(gregexpr('b', target_string))), and 'do the math' between
> successive positions. Can anyone suggest a more elegant approach?
>
> Thanks in advance...
>
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide
> http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>

	[[alternative HTML version deleted]]


From mtmorg@n@b|oc @end|ng |rom gm@||@com  Sat Dec  3 01:39:20 2022
From: mtmorg@n@b|oc @end|ng |rom gm@||@com (Martin Morgan)
Date: Sat, 3 Dec 2022 00:39:20 +0000
Subject: [R] interval between specific characters in a string...
In-Reply-To: <4d5418e3-0c41-43c0-e124-d735dbd707a4@gmail.com>
References: <4d5418e3-0c41-43c0-e124-d735dbd707a4@gmail.com>
Message-ID: <BY5PR04MB6627BD017DA84DD29C08794DF9169@BY5PR04MB6627.namprd04.prod.outlook.com>

You could split the string into letters and figure out which ones are ?b?

which(strsplit(x, "")[[1]] == "b")

and then find the difference between each position, ?anchoring? at position 0

> diff(c(0, which(strsplit(x, "")[[1]] == "b")))
[1] 2 4 1 6 4

From: R-help <r-help-bounces at r-project.org> on behalf of Evan Cooch <evan.cooch at gmail.com>
Date: Friday, December 2, 2022 at 6:56 PM
To: r-help at r-project.org <r-help at r-project.org>
Subject: [R] interval between specific characters in a string...
Was wondering if there is an 'efficient/elegant' way to do the following
(without tidyverse). Take a string

abaaabbaaaaabaaab

Its easy enough to count the number of times the character 'b' shows up
in the string, but...what I'm looking for is outputing the 'intervals'
between occurrences of 'b' (starting the counter at the beginning of the
string). So, for the preceding example, 'b' shows up in positions

2, 6, 7, 13, 17

So, the interval data would be: 2, 4, 1, 6, 4

My main approach has been to simply output positions (say, something
like unlist(gregexpr('b', target_string))), and 'do the math' between
successive positions. Can anyone suggest a more elegant approach?

Thanks in advance...

______________________________________________
R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

	[[alternative HTML version deleted]]


From @h@rt @end|ng |rom d|m@uch||e@c|  Sat Dec  3 02:54:15 2022
From: @h@rt @end|ng |rom d|m@uch||e@c| (Andrew Hart)
Date: Fri, 2 Dec 2022 22:54:15 -0300
Subject: [R] interval between specific characters in a string...
In-Reply-To: <4d5418e3-0c41-43c0-e124-d735dbd707a4@gmail.com>
References: <4d5418e3-0c41-43c0-e124-d735dbd707a4@gmail.com>
Message-ID: <c4927d63-5f39-693c-a123-7edfca1c5b78@dim.uchile.cl>

Here's a function that can get the interval sizes for you.

getStringSegmentLengths <- function(s, delim, ...) {
   nchar(unlist(strsplit(s, delim, ...))) + 1L
}

It uses strsplit to return a list of all the segments of the string 
separated by delim. delim can be a regular expression and with ..., you 
can pass all the extra options to strsplit in order to specify how to 
break up the string.
It then uses unlist to convert the list output of strsplit to a 
character vector. nchar then gives the lengths of all the elements of 
the character vector and finally a 1 is added to each of these in order 
to obtain the correct interval sizes.

Hth,
Andrew.

On 2/12/2022 14:18, Evan Cooch wrote:
> Was wondering if there is an 'efficient/elegant' way to do the following 
> (without tidyverse). Take a string
> 
> abaaabbaaaaabaaab
> 
> Its easy enough to count the number of times the character 'b' shows up 
> in the string, but...what I'm looking for is outputing the 'intervals' 
> between occurrences of 'b' (starting the counter at the beginning of the 
> string). So, for the preceding example, 'b' shows up in positions
> 
> 2, 6, 7, 13, 17
> 
> So, the interval data would be: 2, 4, 1, 6, 4
> 
> My main approach has been to simply output positions (say, something 
> like unlist(gregexpr('b', target_string))), and 'do the math' between 
> successive positions. Can anyone suggest a more elegant approach?
> 
> Thanks in advance...
> 
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide 
> http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>


From @vi@e@gross m@iii@g oii gm@ii@com  Sat Dec  3 05:01:44 2022
From: @vi@e@gross m@iii@g oii gm@ii@com (@vi@e@gross m@iii@g oii gm@ii@com)
Date: Fri, 2 Dec 2022 23:01:44 -0500
Subject: [R] interval between specific characters in a string...
In-Reply-To: <4d5418e3-0c41-43c0-e124-d735dbd707a4@gmail.com>
References: <4d5418e3-0c41-43c0-e124-d735dbd707a4@gmail.com>
Message-ID: <00de01d906cb$f57abe10$e0703a30$@gmail.com>

Evan, there are oodles of ways to do many things in R, and mcu of what the
tidyverse supplies can often be done as easily, or easier, outside it.

Before presenting a solution, I need to make sure I am answering the same
question or problem you intend.

Here is the string you have as an example:

st <- "abaaabbaaaaabaaab"

Is the string a string testing for single characters called "b" with any
other characters being either just "a" or at least non-"b" and of any length
but at least a few?

If so, ONE METHOD is to convert the string to a vector for reasons that will
become clear. For oddball reasons, this is a way to do it:

> unlist(strsplit(st,""))
[1] "a" "b" "a" "a" "a" "b" "b" "a" "a" "a" "a" "a" "b" "a" "a" "a" "b"

The result is a vector you can examine to see if they are equal to "b" or
not as a TRUE/FALSE vector:

> unlist(strsplit(st,"")) == "b"
[1] FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE
TRUE FALSE FALSE FALSE
[17]  TRUE

Now you can ask for the indices which are TRUE, meaning at what offset from
the beginning are there instances of the letter "b":

> which(unlist(strsplit(st,"")) == "b")
[1]  2  6  7 13 17

This shows the second the integer offsets for the letter "b" are the second,
sixth and so on to seventeenth. Again, if I understood you, you want a
measure of how far apart instances of "b" are with adjacent ones being 1
apart. Again, many methods but I chose one where I sort of slid over the
above values by sliding in a zero from the front and removing the last
entry. 

So save that in a variable  first:

indices <- which(unlist(strsplit(st,"")) == "b")
indices_shifted <- c(0, head(indices, -1))

The two contain:

> indices
[1]  2  6  7 13 17
> indices_shifted
[1]  0  2  6  7 13
> indices - indices_shifted 
[1] 2 4 1 6 4

The above is the same as your intended result.

If you want to be cautious, handle edge cases like not having any "b" or an
empty string.

Here is the consolidated code:

st <- "abaaabbaaaaabaaab"
indices <- which(unlist(strsplit(st,"")) == "b")
indices_shifted <- c(0, head(indices, -1))
result <- indices - indices_shifted

There are many other ways to do this and of course some are more
straightforward and some more complex.

Consider a loop using a vector version of the string where each time you see
a b", you remember the last index you saw it and put out the number
representing the gap.

Fairly low tech.


-----Original Message-----
From: R-help <r-help-bounces at r-project.org> On Behalf Of Evan Cooch
Sent: Friday, December 2, 2022 12:19 PM
To: r-help at r-project.org
Subject: [R] interval between specific characters in a string...

Was wondering if there is an 'efficient/elegant' way to do the following
(without tidyverse). Take a string

abaaabbaaaaabaaab

Its easy enough to count the number of times the character 'b' shows up in
the string, but...what I'm looking for is outputing the 'intervals' 
between occurrences of 'b' (starting the counter at the beginning of the
string). So, for the preceding example, 'b' shows up in positions

2, 6, 7, 13, 17

So, the interval data would be: 2, 4, 1, 6, 4

My main approach has been to simply output positions (say, something like
unlist(gregexpr('b', target_string))), and 'do the math' between successive
positions. Can anyone suggest a more elegant approach?

Thanks in advance...

______________________________________________
R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.


From ru|pb@rr@d@@ @end|ng |rom @@po@pt  Sat Dec  3 09:48:36 2022
From: ru|pb@rr@d@@ @end|ng |rom @@po@pt (Rui Barradas)
Date: Sat, 3 Dec 2022 08:48:36 +0000
Subject: [R] interval between specific characters in a string...
In-Reply-To: <4d5418e3-0c41-43c0-e124-d735dbd707a4@gmail.com>
References: <4d5418e3-0c41-43c0-e124-d735dbd707a4@gmail.com>
Message-ID: <ac1bb065-45bb-5bd7-f03a-32c62ca8c9b5@sapo.pt>

?s 17:18 de 02/12/2022, Evan Cooch escreveu:
> Was wondering if there is an 'efficient/elegant' way to do the following 
> (without tidyverse). Take a string
> 
> abaaabbaaaaabaaab
> 
> Its easy enough to count the number of times the character 'b' shows up 
> in the string, but...what I'm looking for is outputing the 'intervals' 
> between occurrences of 'b' (starting the counter at the beginning of the 
> string). So, for the preceding example, 'b' shows up in positions
> 
> 2, 6, 7, 13, 17
> 
> So, the interval data would be: 2, 4, 1, 6, 4
> 
> My main approach has been to simply output positions (say, something 
> like unlist(gregexpr('b', target_string))), and 'do the math' between 
> successive positions. Can anyone suggest a more elegant approach?
> 
> Thanks in advance...
> 
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide 
> http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
Hello,

I don't find your solution inelegant, it's even easy to write it as a 
one-line function.


char_interval <- function(x, s) {
   lapply(gregexpr(x, s), \(y) c(head(y, 1), diff(y)))
}

target_string <-"abaaabbaaaaabaaab"
char_interval('b', target_string)
#> [[1]]
#> [1] 2 4 1 6 4


Hope this helps,

Rui Barradas


From bgunter@4567 @end|ng |rom gm@||@com  Sat Dec  3 16:21:50 2022
From: bgunter@4567 @end|ng |rom gm@||@com (Bert Gunter)
Date: Sat, 3 Dec 2022 07:21:50 -0800
Subject: [R] interval between specific characters in a string...
In-Reply-To: <ac1bb065-45bb-5bd7-f03a-32c62ca8c9b5@sapo.pt>
References: <4d5418e3-0c41-43c0-e124-d735dbd707a4@gmail.com>
 <ac1bb065-45bb-5bd7-f03a-32c62ca8c9b5@sapo.pt>
Message-ID: <CAGxFJbQvd9FqWB6iAw=7d19APR+XO6sdphWqdWk9xoHh=WiBEg@mail.gmail.com>

Perhaps it is worth pointing out that looping constructs like lapply() can
be avoided and the procedure vectorized by mimicking Martin Morgan's
solution:

## s is the string to be searched.
diff(c(0,grep('b',strsplit(s,'')[[1]])))

However, Martin's solution is simpler and likely even faster as the regex
engine is unneeded:

diff(c(0, which(strsplit(s, "")[[1]] == "b"))) ## completely vectorized

This seems much preferable to me.

-- Bert





On Sat, Dec 3, 2022 at 12:49 AM Rui Barradas <ruipbarradas at sapo.pt> wrote:

> ?s 17:18 de 02/12/2022, Evan Cooch escreveu:
> > Was wondering if there is an 'efficient/elegant' way to do the following
> > (without tidyverse). Take a string
> >
> > abaaabbaaaaabaaab
> >
> > Its easy enough to count the number of times the character 'b' shows up
> > in the string, but...what I'm looking for is outputing the 'intervals'
> > between occurrences of 'b' (starting the counter at the beginning of the
> > string). So, for the preceding example, 'b' shows up in positions
> >
> > 2, 6, 7, 13, 17
> >
> > So, the interval data would be: 2, 4, 1, 6, 4
> >
> > My main approach has been to simply output positions (say, something
> > like unlist(gregexpr('b', target_string))), and 'do the math' between
> > successive positions. Can anyone suggest a more elegant approach?
> >
> > Thanks in advance...
> >
> > ______________________________________________
> > R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> > https://stat.ethz.ch/mailman/listinfo/r-help
> > PLEASE do read the posting guide
> > http://www.R-project.org/posting-guide.html
> > and provide commented, minimal, self-contained, reproducible code.
> Hello,
>
> I don't find your solution inelegant, it's even easy to write it as a
> one-line function.
>
>
> char_interval <- function(x, s) {
>    lapply(gregexpr(x, s), \(y) c(head(y, 1), diff(y)))
> }
>
> target_string <-"abaaabbaaaaabaaab"
> char_interval('b', target_string)
> #> [[1]]
> #> [1] 2 4 1 6 4
>
>
> Hope this helps,
>
> Rui Barradas
>
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide
> http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>

	[[alternative HTML version deleted]]


From hp@ge@@on@g|thub @end|ng |rom gm@||@com  Sun Dec  4 00:49:35 2022
From: hp@ge@@on@g|thub @end|ng |rom gm@||@com (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Sat, 3 Dec 2022 15:49:35 -0800
Subject: [R] interval between specific characters in a string...
In-Reply-To: <CAGxFJbQvd9FqWB6iAw=7d19APR+XO6sdphWqdWk9xoHh=WiBEg@mail.gmail.com>
References: <4d5418e3-0c41-43c0-e124-d735dbd707a4@gmail.com>
 <ac1bb065-45bb-5bd7-f03a-32c62ca8c9b5@sapo.pt>
 <CAGxFJbQvd9FqWB6iAw=7d19APR+XO6sdphWqdWk9xoHh=WiBEg@mail.gmail.com>
Message-ID: <d0882e87-3920-1abb-0880-f00dea2411a2@gmail.com>

On 03/12/2022 07:21, Bert Gunter wrote:
> Perhaps it is worth pointing out that looping constructs like lapply() can
> be avoided and the procedure vectorized by mimicking Martin Morgan's
> solution:
>
> ## s is the string to be searched.
> diff(c(0,grep('b',strsplit(s,'')[[1]])))
>
> However, Martin's solution is simpler and likely even faster as the regex
> engine is unneeded:
>
> diff(c(0, which(strsplit(s, "")[[1]] == "b"))) ## completely vectorized
>
> This seems much preferable to me.

Of all the proposed solutions, Andrew Hart's solution seems the most 
efficient:

 ? big_string <- strrep("abaaabbaaaaabaaabaaaaaaaaaaaaaaaaaaab", 500000)

 ? system.time(nchar(strsplit(big_string, split="b", fixed=TRUE)[[1]]) + 1)
 ? #? ? user? system elapsed
 ? # ? 0.736?? 0.028?? 0.764

 ? system.time(diff(c(0, which(strsplit(big_string, "", fixed=TRUE)[[1]] 
== "b"))))
 ? #? ? user? system elapsed
 ? #? 2.100?? 0.356?? 2.455

The bigger the string, the bigger the gap in performance.

Also, the bigger the average gap between 2 successive b's, the bigger 
the gap in performance.

Finally: always use fixed=TRUE in strsplit() if you don't need to use 
the regex engine.

Cheers,

H.


> -- Bert
>
>
>
>
>
> On Sat, Dec 3, 2022 at 12:49 AM Rui Barradas <ruipbarradas at sapo.pt> wrote:
>
>> ?s 17:18 de 02/12/2022, Evan Cooch escreveu:
>>> Was wondering if there is an 'efficient/elegant' way to do the following
>>> (without tidyverse). Take a string
>>>
>>> abaaabbaaaaabaaab
>>>
>>> Its easy enough to count the number of times the character 'b' shows up
>>> in the string, but...what I'm looking for is outputing the 'intervals'
>>> between occurrences of 'b' (starting the counter at the beginning of the
>>> string). So, for the preceding example, 'b' shows up in positions
>>>
>>> 2, 6, 7, 13, 17
>>>
>>> So, the interval data would be: 2, 4, 1, 6, 4
>>>
>>> My main approach has been to simply output positions (say, something
>>> like unlist(gregexpr('b', target_string))), and 'do the math' between
>>> successive positions. Can anyone suggest a more elegant approach?
>>>
>>> Thanks in advance...
>>>
>>> ______________________________________________
>>> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>>> https://stat.ethz.ch/mailman/listinfo/r-help
>>> PLEASE do read the posting guide
>>> http://www.R-project.org/posting-guide.html
>>> and provide commented, minimal, self-contained, reproducible code.
>> Hello,
>>
>> I don't find your solution inelegant, it's even easy to write it as a
>> one-line function.
>>
>>
>> char_interval <- function(x, s) {
>>     lapply(gregexpr(x, s), \(y) c(head(y, 1), diff(y)))
>> }
>>
>> target_string <-"abaaabbaaaaabaaab"
>> char_interval('b', target_string)
>> #> [[1]]
>> #> [1] 2 4 1 6 4
>>
>>
>> Hope this helps,
>>
>> Rui Barradas
>>
>> ______________________________________________
>> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>> https://stat.ethz.ch/mailman/listinfo/r-help
>> PLEASE do read the posting guide
>> http://www.R-project.org/posting-guide.html
>> and provide commented, minimal, self-contained, reproducible code.
>>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.

-- 
Herv? Pag?s

Bioconductor Core Team
hpages.on.github at gmail.com


From @vi@e@gross m@iii@g oii gm@ii@com  Sun Dec  4 01:21:48 2022
From: @vi@e@gross m@iii@g oii gm@ii@com (@vi@e@gross m@iii@g oii gm@ii@com)
Date: Sat, 3 Dec 2022 19:21:48 -0500
Subject: [R] interval between specific characters in a string...
In-Reply-To: <d0882e87-3920-1abb-0880-f00dea2411a2@gmail.com>
References: <4d5418e3-0c41-43c0-e124-d735dbd707a4@gmail.com>
 <ac1bb065-45bb-5bd7-f03a-32c62ca8c9b5@sapo.pt>
 <CAGxFJbQvd9FqWB6iAw=7d19APR+XO6sdphWqdWk9xoHh=WiBEg@mail.gmail.com>
 <d0882e87-3920-1abb-0880-f00dea2411a2@gmail.com>
Message-ID: <01ca01d90776$666cc500$33464f00$@gmail.com>

This may be a fairly dumb and often asked question about some functions like strsplit()  that return a list of things, often a list of ONE thing that be another list or a vector and needs to be made into something simpler..

The examples shown below have used various methods to convert the result to a vector but why is this not a built-in option for such a function to simplify the result either when possible or always?

Sure you can subset it with " [[1]]" or use unlist() or as.vector() to coerce it back to a vector. But when you have a very common idiom and a fact that many people waste lots of time figuring out they had a LIST containing a single vector and debug, maybe it would have made sense to have either a sister function like strsplit_v() that returns what is actually wanted or allow strsplit(whatever, output="vector") or something giving the same result.

Yes, I understand that when there is a workaround, it just complicates the base, but there could be a package that consistently does things like this to make the use of such functions easier.



-----Original Message-----
From: R-help <r-help-bounces at r-project.org> On Behalf Of Herv? Pag?s
Sent: Saturday, December 3, 2022 6:50 PM
To: Bert Gunter <bgunter.4567 at gmail.com>; Rui Barradas <ruipbarradas at sapo.pt>
Cc: r-help at r-project.org; Evan Cooch <evan.cooch at gmail.com>
Subject: Re: [R] interval between specific characters in a string...

On 03/12/2022 07:21, Bert Gunter wrote:
> Perhaps it is worth pointing out that looping constructs like lapply() 
> can be avoided and the procedure vectorized by mimicking Martin 
> Morgan's
> solution:
>
> ## s is the string to be searched.
> diff(c(0,grep('b',strsplit(s,'')[[1]])))
>
> However, Martin's solution is simpler and likely even faster as the 
> regex engine is unneeded:
>
> diff(c(0, which(strsplit(s, "")[[1]] == "b"))) ## completely 
> vectorized
>
> This seems much preferable to me.

Of all the proposed solutions, Andrew Hart's solution seems the most
efficient:

   big_string <- strrep("abaaabbaaaaabaaabaaaaaaaaaaaaaaaaaaab", 500000)

   system.time(nchar(strsplit(big_string, split="b", fixed=TRUE)[[1]]) + 1)
   #    user  system elapsed
   #   0.736   0.028   0.764

   system.time(diff(c(0, which(strsplit(big_string, "", fixed=TRUE)[[1]] == "b"))))
   #    user  system elapsed
   #  2.100   0.356   2.455

The bigger the string, the bigger the gap in performance.

Also, the bigger the average gap between 2 successive b's, the bigger the gap in performance.

Finally: always use fixed=TRUE in strsplit() if you don't need to use the regex engine.

Cheers,

H.


> -- Bert
>
>
>
>
>
> On Sat, Dec 3, 2022 at 12:49 AM Rui Barradas <ruipbarradas at sapo.pt> wrote:
>
>> ?s 17:18 de 02/12/2022, Evan Cooch escreveu:
>>> Was wondering if there is an 'efficient/elegant' way to do the 
>>> following (without tidyverse). Take a string
>>>
>>> abaaabbaaaaabaaab
>>>
>>> Its easy enough to count the number of times the character 'b' shows 
>>> up in the string, but...what I'm looking for is outputing the 'intervals'
>>> between occurrences of 'b' (starting the counter at the beginning of 
>>> the string). So, for the preceding example, 'b' shows up in 
>>> positions
>>>
>>> 2, 6, 7, 13, 17
>>>
>>> So, the interval data would be: 2, 4, 1, 6, 4
>>>
>>> My main approach has been to simply output positions (say, something 
>>> like unlist(gregexpr('b', target_string))), and 'do the math' 
>>> between successive positions. Can anyone suggest a more elegant approach?
>>>
>>> Thanks in advance...
>>>
>>> ______________________________________________
>>> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see 
>>> https://stat.ethz.ch/mailman/listinfo/r-help
>>> PLEASE do read the posting guide
>>> http://www.R-project.org/posting-guide.html
>>> and provide commented, minimal, self-contained, reproducible code.
>> Hello,
>>
>> I don't find your solution inelegant, it's even easy to write it as a 
>> one-line function.
>>
>>
>> char_interval <- function(x, s) {
>>     lapply(gregexpr(x, s), \(y) c(head(y, 1), diff(y))) }
>>
>> target_string <-"abaaabbaaaaabaaab"
>> char_interval('b', target_string)
>> #> [[1]]
>> #> [1] 2 4 1 6 4
>>
>>
>> Hope this helps,
>>
>> Rui Barradas
>>
>> ______________________________________________
>> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see 
>> https://stat.ethz.ch/mailman/listinfo/r-help
>> PLEASE do read the posting guide
>> http://www.R-project.org/posting-guide.html
>> and provide commented, minimal, self-contained, reproducible code.
>>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see 
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide 
> http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.

--
Herv? Pag?s

Bioconductor Core Team
hpages.on.github at gmail.com

______________________________________________
R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.


From bgunter@4567 @end|ng |rom gm@||@com  Sun Dec  4 03:33:05 2022
From: bgunter@4567 @end|ng |rom gm@||@com (Bert Gunter)
Date: Sat, 3 Dec 2022 18:33:05 -0800
Subject: [R] interval between specific characters in a string...
In-Reply-To: <d0882e87-3920-1abb-0880-f00dea2411a2@gmail.com>
References: <4d5418e3-0c41-43c0-e124-d735dbd707a4@gmail.com>
 <ac1bb065-45bb-5bd7-f03a-32c62ca8c9b5@sapo.pt>
 <CAGxFJbQvd9FqWB6iAw=7d19APR+XO6sdphWqdWk9xoHh=WiBEg@mail.gmail.com>
 <d0882e87-3920-1abb-0880-f00dea2411a2@gmail.com>
Message-ID: <CAGxFJbRnWC93Y5mGi5S1Q6F0BTAVbm3Rtihfz6-2f6-5=eJ_wA@mail.gmail.com>

Thanks. Very informative.
I certainly missed this.

-- Bert

On Sat, Dec 3, 2022 at 3:49 PM Herv? Pag?s <hpages.on.github at gmail.com>
wrote:

> On 03/12/2022 07:21, Bert Gunter wrote:
> > Perhaps it is worth pointing out that looping constructs like lapply()
> can
> > be avoided and the procedure vectorized by mimicking Martin Morgan's
> > solution:
> >
> > ## s is the string to be searched.
> > diff(c(0,grep('b',strsplit(s,'')[[1]])))
> >
> > However, Martin's solution is simpler and likely even faster as the regex
> > engine is unneeded:
> >
> > diff(c(0, which(strsplit(s, "")[[1]] == "b"))) ## completely vectorized
> >
> > This seems much preferable to me.
>
> Of all the proposed solutions, Andrew Hart's solution seems the most
> efficient:
>
>    big_string <- strrep("abaaabbaaaaabaaabaaaaaaaaaaaaaaaaaaab", 500000)
>
>    system.time(nchar(strsplit(big_string, split="b", fixed=TRUE)[[1]]) + 1)
>    #    user  system elapsed
>    #   0.736   0.028   0.764
>
>    system.time(diff(c(0, which(strsplit(big_string, "", fixed=TRUE)[[1]]
> == "b"))))
>    #    user  system elapsed
>    #  2.100   0.356   2.455
>
> The bigger the string, the bigger the gap in performance.
>
> Also, the bigger the average gap between 2 successive b's, the bigger
> the gap in performance.
>
> Finally: always use fixed=TRUE in strsplit() if you don't need to use
> the regex engine.
>
> Cheers,
>
> H.
>
>
> > -- Bert
> >
> >
> >
> >
> >
> > On Sat, Dec 3, 2022 at 12:49 AM Rui Barradas <ruipbarradas at sapo.pt>
> wrote:
> >
> >> ?s 17:18 de 02/12/2022, Evan Cooch escreveu:
> >>> Was wondering if there is an 'efficient/elegant' way to do the
> following
> >>> (without tidyverse). Take a string
> >>>
> >>> abaaabbaaaaabaaab
> >>>
> >>> Its easy enough to count the number of times the character 'b' shows up
> >>> in the string, but...what I'm looking for is outputing the 'intervals'
> >>> between occurrences of 'b' (starting the counter at the beginning of
> the
> >>> string). So, for the preceding example, 'b' shows up in positions
> >>>
> >>> 2, 6, 7, 13, 17
> >>>
> >>> So, the interval data would be: 2, 4, 1, 6, 4
> >>>
> >>> My main approach has been to simply output positions (say, something
> >>> like unlist(gregexpr('b', target_string))), and 'do the math' between
> >>> successive positions. Can anyone suggest a more elegant approach?
> >>>
> >>> Thanks in advance...
> >>>
> >>> ______________________________________________
> >>> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> >>> https://stat.ethz.ch/mailman/listinfo/r-help
> >>> PLEASE do read the posting guide
> >>> http://www.R-project.org/posting-guide.html
> >>> and provide commented, minimal, self-contained, reproducible code.
> >> Hello,
> >>
> >> I don't find your solution inelegant, it's even easy to write it as a
> >> one-line function.
> >>
> >>
> >> char_interval <- function(x, s) {
> >>     lapply(gregexpr(x, s), \(y) c(head(y, 1), diff(y)))
> >> }
> >>
> >> target_string <-"abaaabbaaaaabaaab"
> >> char_interval('b', target_string)
> >> #> [[1]]
> >> #> [1] 2 4 1 6 4
> >>
> >>
> >> Hope this helps,
> >>
> >> Rui Barradas
> >>
> >> ______________________________________________
> >> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> >> https://stat.ethz.ch/mailman/listinfo/r-help
> >> PLEASE do read the posting guide
> >> http://www.R-project.org/posting-guide.html
> >> and provide commented, minimal, self-contained, reproducible code.
> >>
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> > https://stat.ethz.ch/mailman/listinfo/r-help
> > PLEASE do read the posting guide
> http://www.R-project.org/posting-guide.html
> > and provide commented, minimal, self-contained, reproducible code.
>
> --
> Herv? Pag?s
>
> Bioconductor Core Team
> hpages.on.github at gmail.com
>
>

	[[alternative HTML version deleted]]


From h@w|ckh@m @end|ng |rom gm@||@com  Sun Dec  4 09:25:08 2022
From: h@w|ckh@m @end|ng |rom gm@||@com (Hadley Wickham)
Date: Sun, 4 Dec 2022 21:25:08 +1300
Subject: [R] interval between specific characters in a string...
In-Reply-To: <d0882e87-3920-1abb-0880-f00dea2411a2@gmail.com>
References: <4d5418e3-0c41-43c0-e124-d735dbd707a4@gmail.com>
 <ac1bb065-45bb-5bd7-f03a-32c62ca8c9b5@sapo.pt>
 <CAGxFJbQvd9FqWB6iAw=7d19APR+XO6sdphWqdWk9xoHh=WiBEg@mail.gmail.com>
 <d0882e87-3920-1abb-0880-f00dea2411a2@gmail.com>
Message-ID: <CABdHhvGz22ma5CgcBpJSVLL0NomqjONyz2jGxrQRSRO02iyZ3g@mail.gmail.com>

On Sun, Dec 4, 2022 at 12:50 PM Herv? Pag?s <hpages.on.github at gmail.com> wrote:
>
> On 03/12/2022 07:21, Bert Gunter wrote:
> > Perhaps it is worth pointing out that looping constructs like lapply() can
> > be avoided and the procedure vectorized by mimicking Martin Morgan's
> > solution:
> >
> > ## s is the string to be searched.
> > diff(c(0,grep('b',strsplit(s,'')[[1]])))
> >
> > However, Martin's solution is simpler and likely even faster as the regex
> > engine is unneeded:
> >
> > diff(c(0, which(strsplit(s, "")[[1]] == "b"))) ## completely vectorized
> >
> > This seems much preferable to me.
>
> Of all the proposed solutions, Andrew Hart's solution seems the most
> efficient:
>
>    big_string <- strrep("abaaabbaaaaabaaabaaaaaaaaaaaaaaaaaaab", 500000)
>
>    system.time(nchar(strsplit(big_string, split="b", fixed=TRUE)[[1]]) + 1)
>    #    user  system elapsed
>    #   0.736   0.028   0.764
>
>    system.time(diff(c(0, which(strsplit(big_string, "", fixed=TRUE)[[1]]
> == "b"))))
>    #    user  system elapsed
>    #  2.100   0.356   2.455
>
> The bigger the string, the bigger the gap in performance.
>
> Also, the bigger the average gap between 2 successive b's, the bigger
> the gap in performance.
>
> Finally: always use fixed=TRUE in strsplit() if you don't need to use
> the regex engine.

You can do a bit better if you are willing to use stringr:

library(stringr)
big_string <- strrep("abaaabbaaaaabaaabaaaaaaaaaaaaaaaaaaab", 500000)

system.time(nchar(strsplit(big_string, split="b", fixed=TRUE)[[1]]) + 1)
#>    user  system elapsed
#>   0.126   0.002   0.128

system.time(str_length(str_split(big_string, fixed("b"))[[1]]))
#>    user  system elapsed
#>   0.103   0.004   0.107

(And my timings also suggest that it's time for Herv? to get a new computer :P)

It feels like an approach that uses locations should be faster since
you wouldn't have to construct all the intermediate strings.

system.time(pos <- str_locate_all(big_string, fixed("b"))[[1]][,1])
#>    user  system elapsed
#>   0.075   0.004   0.080
# I suspect this could be optimised with a little thought making this approach
# faster overall
system.time(c(0, diff(pos))
#>    user  system elapsed
#>   0.022   0.006   0.027

Hadley

-- 
http://hadley.nz


From h@w|ckh@m @end|ng |rom gm@||@com  Sun Dec  4 09:25:46 2022
From: h@w|ckh@m @end|ng |rom gm@||@com (Hadley Wickham)
Date: Sun, 4 Dec 2022 21:25:46 +1300
Subject: [R] interval between specific characters in a string...
In-Reply-To: <01ca01d90776$666cc500$33464f00$@gmail.com>
References: <4d5418e3-0c41-43c0-e124-d735dbd707a4@gmail.com>
 <ac1bb065-45bb-5bd7-f03a-32c62ca8c9b5@sapo.pt>
 <CAGxFJbQvd9FqWB6iAw=7d19APR+XO6sdphWqdWk9xoHh=WiBEg@mail.gmail.com>
 <d0882e87-3920-1abb-0880-f00dea2411a2@gmail.com>
 <01ca01d90776$666cc500$33464f00$@gmail.com>
Message-ID: <CABdHhvH5w1k_t5rXnWywFmPoFDD5wF3FSqt2p1c9L7nWubea7w@mail.gmail.com>

On Sun, Dec 4, 2022 at 1:22 PM <avi.e.gross at gmail.com> wrote:
>
> This may be a fairly dumb and often asked question about some functions like strsplit()  that return a list of things, often a list of ONE thing that be another list or a vector and needs to be made into something simpler..
>
> The examples shown below have used various methods to convert the result to a vector but why is this not a built-in option for such a function to simplify the result either when possible or always?
>
> Sure you can subset it with " [[1]]" or use unlist() or as.vector() to coerce it back to a vector. But when you have a very common idiom and a fact that many people waste lots of time figuring out they had a LIST containing a single vector and debug, maybe it would have made sense to have either a sister function like strsplit_v() that returns what is actually wanted or allow strsplit(whatever, output="vector") or something giving the same result.
>
> Yes, I understand that when there is a workaround, it just complicates the base, but there could be a package that consistently does things like this to make the use of such functions easier.

The next version of stringr (currently being processed by CRAN)
provides str_split_1() for exactly this purpose.

Hadley

-- 
http://hadley.nz


From t@v|b@r @end|ng |rom gm@||@com  Sun Dec  4 10:38:56 2022
From: t@v|b@r @end|ng |rom gm@||@com (Micha Silver)
Date: Sun, 4 Dec 2022 11:38:56 +0200
Subject: [R] interval between specific characters in a string...
In-Reply-To: <CABdHhvH5w1k_t5rXnWywFmPoFDD5wF3FSqt2p1c9L7nWubea7w@mail.gmail.com>
References: <4d5418e3-0c41-43c0-e124-d735dbd707a4@gmail.com>
 <ac1bb065-45bb-5bd7-f03a-32c62ca8c9b5@sapo.pt>
 <CAGxFJbQvd9FqWB6iAw=7d19APR+XO6sdphWqdWk9xoHh=WiBEg@mail.gmail.com>
 <d0882e87-3920-1abb-0880-f00dea2411a2@gmail.com>
 <01ca01d90776$666cc500$33464f00$@gmail.com>
 <CABdHhvH5w1k_t5rXnWywFmPoFDD5wF3FSqt2p1c9L7nWubea7w@mail.gmail.com>
Message-ID: <0b8dde95-2279-71f6-c3d5-8ff59be943f9@gmail.com>


On 04/12/2022 10:25, Hadley Wickham wrote:
> On Sun, Dec 4, 2022 at 1:22 PM <avi.e.gross at gmail.com> wrote:
>> This may be a fairly dumb and often asked question about some functions like strsplit()  that return a list of things, often a list of ONE thing that be another list or a vector and needs to be made into something simpler..
>>
>> The examples shown below have used various methods to convert the result to a vector but why is this not a built-in option for such a function to simplify the result either when possible or always?
>>
>> Sure you can subset it with " [[1]]" or use unlist() or as.vector() to coerce it back to a vector. But when you have a very common idiom and a fact that many people waste lots of time figuring out they had a LIST containing a single vector and debug, maybe it would have made sense to have either a sister function like strsplit_v() that returns what is actually wanted or allow strsplit(whatever, output="vector") or something giving the same result.
>>
>> Yes, I understand that when there is a workaround, it just complicates the base, but there could be a package that consistently does things like this to make the use of such functions easier.
> The next version of stringr (currently being processed by CRAN)
> provides str_split_1() for exactly this purpose.


Thanks!

Well appreciated...


>
> Hadley
>
-- 
Micha Silver
Ben Gurion Univ.
Sde Boker, Remote Sensing Lab
cell: +972-523-665918


From hp@ge@@on@g|thub @end|ng |rom gm@||@com  Sun Dec  4 22:42:13 2022
From: hp@ge@@on@g|thub @end|ng |rom gm@||@com (=?UTF-8?B?SGVydsOpIFBhZ8Oocw==?=)
Date: Sun, 4 Dec 2022 13:42:13 -0800
Subject: [R] interval between specific characters in a string...
In-Reply-To: <CABdHhvGz22ma5CgcBpJSVLL0NomqjONyz2jGxrQRSRO02iyZ3g@mail.gmail.com>
References: <4d5418e3-0c41-43c0-e124-d735dbd707a4@gmail.com>
 <ac1bb065-45bb-5bd7-f03a-32c62ca8c9b5@sapo.pt>
 <CAGxFJbQvd9FqWB6iAw=7d19APR+XO6sdphWqdWk9xoHh=WiBEg@mail.gmail.com>
 <d0882e87-3920-1abb-0880-f00dea2411a2@gmail.com>
 <CABdHhvGz22ma5CgcBpJSVLL0NomqjONyz2jGxrQRSRO02iyZ3g@mail.gmail.com>
Message-ID: <7a2b3d38-4697-26a0-eca7-f6ec95f96c66@gmail.com>


On 04/12/2022 00:25, Hadley Wickham wrote:
> On Sun, Dec 4, 2022 at 12:50 PM Herv? Pag?s <hpages.on.github at gmail.com> wrote:
>> On 03/12/2022 07:21, Bert Gunter wrote:
>>> Perhaps it is worth pointing out that looping constructs like lapply() can
>>> be avoided and the procedure vectorized by mimicking Martin Morgan's
>>> solution:
>>>
>>> ## s is the string to be searched.
>>> diff(c(0,grep('b',strsplit(s,'')[[1]])))
>>>
>>> However, Martin's solution is simpler and likely even faster as the regex
>>> engine is unneeded:
>>>
>>> diff(c(0, which(strsplit(s, "")[[1]] == "b"))) ## completely vectorized
>>>
>>> This seems much preferable to me.
>> Of all the proposed solutions, Andrew Hart's solution seems the most
>> efficient:
>>
>>     big_string <- strrep("abaaabbaaaaabaaabaaaaaaaaaaaaaaaaaaab", 500000)
>>
>>     system.time(nchar(strsplit(big_string, split="b", fixed=TRUE)[[1]]) + 1)
>>     #    user  system elapsed
>>     #   0.736   0.028   0.764
>>
>>     system.time(diff(c(0, which(strsplit(big_string, "", fixed=TRUE)[[1]]
>> == "b"))))
>>     #    user  system elapsed
>>     #  2.100   0.356   2.455
>>
>> The bigger the string, the bigger the gap in performance.
>>
>> Also, the bigger the average gap between 2 successive b's, the bigger
>> the gap in performance.
>>
>> Finally: always use fixed=TRUE in strsplit() if you don't need to use
>> the regex engine.
> You can do a bit better if you are willing to use stringr:
>
> library(stringr)
> big_string <- strrep("abaaabbaaaaabaaabaaaaaaaaaaaaaaaaaaab", 500000)
>
> system.time(nchar(strsplit(big_string, split="b", fixed=TRUE)[[1]]) + 1)
> #>    user  system elapsed
> #>   0.126   0.002   0.128
>
> system.time(str_length(str_split(big_string, fixed("b"))[[1]]))
> #>    user  system elapsed
> #>   0.103   0.004   0.107
>
> (And my timings also suggest that it's time for Herv? to get a new computer :P)

LOL

Actually my timings were for

   big_string <- strrep("abaaabbaaaaabaaabaaaaaaaaaaaaaaaaaaab", 1500000)

but I mixed up things when I copy-pasted them in my email.

Even though I still need a new laptop and I'm in the process of getting 
a new one ;-)

H.

-- 
Herv? Pag?s

Bioconductor Core Team
hpages.on.github at gmail.com


From peter@|@ng|e|der @end|ng |rom gm@||@com  Mon Dec  5 14:28:16 2022
From: peter@|@ng|e|der @end|ng |rom gm@||@com (Peter Langfelder)
Date: Mon, 5 Dec 2022 21:28:16 +0800
Subject: [R] confusion about dev.prev()
Message-ID: <CA+hbrhXTs45XYk0J8hXOpq4iSmwnxZ_eWoC6yCNE8etgHyB7Mw@mail.gmail.com>

Hi all,

I'm either confused about dev.prev() or there's a bug in it. Open two
devices, plot a plot, call dev.prev() and plot again. I would expect
the second plot to appear in the first device, but that is not what
happens; both plots appear in the second device. Is this expected
behavior or a bug?
Example (in linux):

x11()
par(mfrow = c(1,2));
x11()
par(mfrow = c(1,2));
plot(1:10)
dev.prev()
plot(10:20)

This happens both in R-4.2.0 (patched) and R-devel from 2022-09-13
(sorry, don't have a newer one handy).

sessionInfo() from the R-devel session:

R Under development (unstable) (2022-09-13 r82849)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Fedora Linux 36 (Thirty Six)

Matrix products: default
BLAS:   /usr/local/lib64/R-devel/lib/libRblas.so
LAPACK: /usr/local/lib64/R-devel/lib/libRlapack.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
 [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] compiler_4.3.0


From kry|ov@r00t @end|ng |rom gm@||@com  Mon Dec  5 14:38:34 2022
From: kry|ov@r00t @end|ng |rom gm@||@com (Ivan Krylov)
Date: Mon, 5 Dec 2022 16:38:34 +0300
Subject: [R] confusion about dev.prev()
In-Reply-To: <CA+hbrhXTs45XYk0J8hXOpq4iSmwnxZ_eWoC6yCNE8etgHyB7Mw@mail.gmail.com>
References: <CA+hbrhXTs45XYk0J8hXOpq4iSmwnxZ_eWoC6yCNE8etgHyB7Mw@mail.gmail.com>
Message-ID: <20221205163834.0c8517ae@arachnoid>

? Mon, 5 Dec 2022 21:28:16 +0800
Peter Langfelder <peter.langfelder at gmail.com> ?????:

> Open two devices, plot a plot, call dev.prev() and plot again. I
> would expect the second plot to appear in the first device, but that
> is not what happens; both plots appear in the second device. 

Unfortunately, dev.prev() and dev.next() only return the number of the
respective device. You need dev.set() to actually make the change.

-- 
Best regards,
Ivan


From peter@|@ng|e|der @end|ng |rom gm@||@com  Mon Dec  5 14:40:13 2022
From: peter@|@ng|e|der @end|ng |rom gm@||@com (Peter Langfelder)
Date: Mon, 5 Dec 2022 21:40:13 +0800
Subject: [R] confusion about dev.prev()
In-Reply-To: <20221205163834.0c8517ae@arachnoid>
References: <CA+hbrhXTs45XYk0J8hXOpq4iSmwnxZ_eWoC6yCNE8etgHyB7Mw@mail.gmail.com>
 <20221205163834.0c8517ae@arachnoid>
Message-ID: <CA+hbrhUOcDixt+B8+bVBRpv+MfyePDS2Jjv48BgaQ_LMmEUpJg@mail.gmail.com>

Ah, thanks, got it. Misread the help again...

Peter

On Mon, Dec 5, 2022 at 9:38 PM Ivan Krylov <krylov.r00t at gmail.com> wrote:
>
> ? Mon, 5 Dec 2022 21:28:16 +0800
> Peter Langfelder <peter.langfelder at gmail.com> ?????:
>
> > Open two devices, plot a plot, call dev.prev() and plot again. I
> > would expect the second plot to appear in the first device, but that
> > is not what happens; both plots appear in the second device.
>
> Unfortunately, dev.prev() and dev.next() only return the number of the
> respective device. You need dev.set() to actually make the change.
>
> --
> Best regards,
> Ivan


From @@h||nv@rkey @end|ng |rom gm@||@com  Mon Dec  5 08:40:51 2022
From: @@h||nv@rkey @end|ng |rom gm@||@com (ASHLIN VARKEY)
Date: Mon, 5 Dec 2022 13:10:51 +0530
Subject: [R] query in loops
Message-ID: <CAKwZBoycX6gtAgmKZtgZ+5baKd=tMioep=fOUj_QYauo_EEJfA@mail.gmail.com>

Sir,
I want to write a loop in R to find the AIC factor. For its calculation, I
need to run an algorithm in the attached file. Here  'x' represents the
dataset and xi denotes the i-th observation after arranging it in ascending
order. Q(u) and q(u) represent the quantile function and quantile density
function respectively. For my distribution Q(u) and q(u) are given below.
Q(u)=-? log?(1-u)+(b-?)u+((r-b))/2 u^2
q(u)=b+u(r-b+?/(1-u)).
Can you please help me to correct this program based on the algorithm?
*R code*
x=c(0.047, 0.296, 0.540, 1.271, 0.115, 0.334, 0.570, 1.326, 0.121, 0.395,
0.641, 1.447, 0.132, 0.458, 0.644, 1.485, 0.164, 0.466, 0.696, 1.553,
0.197, 0.501, 0.841,1.581,
0.203,0.507, 0.863, 1.589, 3.743, 0.260, 0.529, 1.099, 2.178, 0.282, 0.534,
1.219, 2.343, 2.416, 2.444, 2.825, 2.830, 3.578, 3.658, 3.978, 4.033)
xi=sort(x)
xi
n=45
alpha=-1.014
b=.949
r=3.11
u=c()
D=c()
q=c()
Q=c()
for (i in 1:n) {
    u[i]=i/(n+1)
    Q[i]=-alpha*log(1-u[i])+(b-alpha)*u[i]+((r-b)/2)*(u[i]^2)
    q[i]=b+u[i]*(r-b+(alpha/(1-u[i])))
    D[i]=Q[i]-xi[i]
    if (D[i]<(10^-7)) {
      print (q[i])
    }
    else{
      u[i+1]=u[i]+((xi[i]-Q[i])/q[i])
    }
  }

From m@rong|u@|u|g| @end|ng |rom gm@||@com  Mon Dec  5 22:24:19 2022
From: m@rong|u@|u|g| @end|ng |rom gm@||@com (Luigi Marongiu)
Date: Mon, 5 Dec 2022 22:24:19 +0100
Subject: [R] How to draw chemical structures with R?
Message-ID: <CAMk+s2Q2gUOjVdQwjUHxirVLDpRL7ceGkOS0+sVf3yrVUtP=4A@mail.gmail.com>

Hello,'
I have seen from this link
https://cran.r-project.org/web/packages/rcdk/vignettes/using-rcdk.html
that there is a way to draw chemical structures using R via rcdk package.
I tried to draw a simple structure but I got an error. What is it
missing? What is the correct syntax?
Thanks

```
library(rcdk)
smile <- 'c1ccccc1CC(=O)C(N)CC1CCCCOC1'
mol <- parse.smiles(smile)[[1]]
view.molecule.2d(mol)
> Error in view.molecule.2d(mol) : java.lang.NoSuchMethodError: <init>
```


From jho|tm@n @end|ng |rom gm@||@com  Mon Dec  5 23:05:47 2022
From: jho|tm@n @end|ng |rom gm@||@com (jim holtman)
Date: Mon, 5 Dec 2022 14:05:47 -0800
Subject: [R] query in loops
In-Reply-To: <CAKwZBoycX6gtAgmKZtgZ+5baKd=tMioep=fOUj_QYauo_EEJfA@mail.gmail.com>
References: <CAKwZBoycX6gtAgmKZtgZ+5baKd=tMioep=fOUj_QYauo_EEJfA@mail.gmail.com>
Message-ID: <CAAxdm-6WbSS3mzwgqj-=3+MBQFxehmrYDSD1xotfiwpdTgOuOA@mail.gmail.com>

So what is the problem that you would like help in correcting?  The program
seems to run.

Thanks

Jim Holtman
*Data Munger Guru*


*What is the problem that you are trying to solve?Tell me what you want to
do, not how you want to do it.*


On Mon, Dec 5, 2022 at 12:59 PM ASHLIN VARKEY <ashlinvarkey at gmail.com>
wrote:

> Sir,
> I want to write a loop in R to find the AIC factor. For its calculation, I
> need to run an algorithm in the attached file. Here  'x' represents the
> dataset and xi denotes the i-th observation after arranging it in ascending
> order. Q(u) and q(u) represent the quantile function and quantile density
> function respectively. For my distribution Q(u) and q(u) are given below.
> Q(u)=-? log?(1-u)+(b-?)u+((r-b))/2 u^2
> q(u)=b+u(r-b+?/(1-u)).
> Can you please help me to correct this program based on the algorithm?
> *R code*
> x=c(0.047, 0.296, 0.540, 1.271, 0.115, 0.334, 0.570, 1.326, 0.121, 0.395,
> 0.641, 1.447, 0.132, 0.458, 0.644, 1.485, 0.164, 0.466, 0.696, 1.553,
> 0.197, 0.501, 0.841,1.581,
> 0.203,0.507, 0.863, 1.589, 3.743, 0.260, 0.529, 1.099, 2.178, 0.282, 0.534,
> 1.219, 2.343, 2.416, 2.444, 2.825, 2.830, 3.578, 3.658, 3.978, 4.033)
> xi=sort(x)
> xi
> n=45
> alpha=-1.014
> b=.949
> r=3.11
> u=c()
> D=c()
> q=c()
> Q=c()
> for (i in 1:n) {
>     u[i]=i/(n+1)
>     Q[i]=-alpha*log(1-u[i])+(b-alpha)*u[i]+((r-b)/2)*(u[i]^2)
>     q[i]=b+u[i]*(r-b+(alpha/(1-u[i])))
>     D[i]=Q[i]-xi[i]
>     if (D[i]<(10^-7)) {
>       print (q[i])
>     }
>     else{
>       u[i+1]=u[i]+((xi[i]-Q[i])/q[i])
>     }
>   }
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide
> http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>

	[[alternative HTML version deleted]]


From |mh_u@er@-group@ @end|ng |rom mo|conn@com  Tue Dec  6 03:11:13 2022
From: |mh_u@er@-group@ @end|ng |rom mo|conn@com (LMH)
Date: Mon, 5 Dec 2022 21:11:13 -0500
Subject: [R] How to draw chemical structures with R?
In-Reply-To: <CAMk+s2Q2gUOjVdQwjUHxirVLDpRL7ceGkOS0+sVf3yrVUtP=4A@mail.gmail.com>
References: <CAMk+s2Q2gUOjVdQwjUHxirVLDpRL7ceGkOS0+sVf3yrVUtP=4A@mail.gmail.com>
Message-ID: <b77332fa-74ed-b0e0-1113-7739010478d3@molconn.com>

Just my opinion, but I think you would be better off to draw the structures using a drawing program
like MarvinSketch (free, java based) and save the structure as a SMILES file, MOL file, or SDF. You
should be able to import any of those into R. A program like MarvinSketch will check the structure
for errors as you draw it and keep to standardized formats.

By the way, I see no error in the SMILEA string for the structure in your expamle so your error is
not in the drawing part of the process. Even so, I try to keep to well established tools for basic
tasks and Marvin as is well established as it gets.

I would look for an example of what you are trying and see if you can get the example to work.

LMH


Luigi Marongiu wrote:
> Hello,'
> I have seen from this link
> https://cran.r-project.org/web/packages/rcdk/vignettes/using-rcdk.html
> that there is a way to draw chemical structures using R via rcdk package.
> I tried to draw a simple structure but I got an error. What is it
> missing? What is the correct syntax?
> Thanks
> 
> ```
> library(rcdk)
> smile <- 'c1ccccc1CC(=O)C(N)CC1CCCCOC1'
> mol <- parse.smiles(smile)[[1]]
> view.molecule.2d(mol)
>> Error in view.molecule.2d(mol) : java.lang.NoSuchMethodError: <init>
> ```
> 
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>


From m@rong|u@|u|g| @end|ng |rom gm@||@com  Tue Dec  6 06:59:34 2022
From: m@rong|u@|u|g| @end|ng |rom gm@||@com (Luigi Marongiu)
Date: Tue, 6 Dec 2022 06:59:34 +0100
Subject: [R] How to draw chemical structures with R?
In-Reply-To: <b77332fa-74ed-b0e0-1113-7739010478d3@molconn.com>
References: <CAMk+s2Q2gUOjVdQwjUHxirVLDpRL7ceGkOS0+sVf3yrVUtP=4A@mail.gmail.com>
 <b77332fa-74ed-b0e0-1113-7739010478d3@molconn.com>
Message-ID: <CAMk+s2Sr5Bd+woqgA+FEii5drqUR-UQWV9w8YU93oodFrxv8QQ@mail.gmail.com>

Thanks for the tip! I think the problem is all Java-based, the SMILES
structure comes from the example in the template, it should work.
There is something missing in the execution...

On Tue, Dec 6, 2022 at 3:12 AM LMH <lmh_users-groups at molconn.com> wrote:
>
> Just my opinion, but I think you would be better off to draw the structures using a drawing program
> like MarvinSketch (free, java based) and save the structure as a SMILES file, MOL file, or SDF. You
> should be able to import any of those into R. A program like MarvinSketch will check the structure
> for errors as you draw it and keep to standardized formats.
>
> By the way, I see no error in the SMILEA string for the structure in your expamle so your error is
> not in the drawing part of the process. Even so, I try to keep to well established tools for basic
> tasks and Marvin as is well established as it gets.
>
> I would look for an example of what you are trying and see if you can get the example to work.
>
> LMH
>
>
> Luigi Marongiu wrote:
> > Hello,'
> > I have seen from this link
> > https://cran.r-project.org/web/packages/rcdk/vignettes/using-rcdk.html
> > that there is a way to draw chemical structures using R via rcdk package.
> > I tried to draw a simple structure but I got an error. What is it
> > missing? What is the correct syntax?
> > Thanks
> >
> > ```
> > library(rcdk)
> > smile <- 'c1ccccc1CC(=O)C(N)CC1CCCCOC1'
> > mol <- parse.smiles(smile)[[1]]
> > view.molecule.2d(mol)
> >> Error in view.molecule.2d(mol) : java.lang.NoSuchMethodError: <init>
> > ```
> >
> > ______________________________________________
> > R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> > https://stat.ethz.ch/mailman/listinfo/r-help
> > PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> > and provide commented, minimal, self-contained, reproducible code.
> >
>


-- 
Best regards,
Luigi


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Tue Dec  6 07:21:27 2022
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Mon, 05 Dec 2022 22:21:27 -0800
Subject: [R] How to draw chemical structures with R?
In-Reply-To: <CAMk+s2Sr5Bd+woqgA+FEii5drqUR-UQWV9w8YU93oodFrxv8QQ@mail.gmail.com>
References: <CAMk+s2Q2gUOjVdQwjUHxirVLDpRL7ceGkOS0+sVf3yrVUtP=4A@mail.gmail.com>
 <b77332fa-74ed-b0e0-1113-7739010478d3@molconn.com>
 <CAMk+s2Sr5Bd+woqgA+FEii5drqUR-UQWV9w8YU93oodFrxv8QQ@mail.gmail.com>
Message-ID: <564DF546-0CCF-4796-A96F-F4F6630B1DD6@dcn.davis.ca.us>

I have never seen this package mentioned on this list. You should contact the package maintainer.

On December 5, 2022 9:59:34 PM PST, Luigi Marongiu <marongiu.luigi at gmail.com> wrote:
>Thanks for the tip! I think the problem is all Java-based, the SMILES
>structure comes from the example in the template, it should work.
>There is something missing in the execution...
>
>On Tue, Dec 6, 2022 at 3:12 AM LMH <lmh_users-groups at molconn.com> wrote:
>>
>> Just my opinion, but I think you would be better off to draw the structures using a drawing program
>> like MarvinSketch (free, java based) and save the structure as a SMILES file, MOL file, or SDF. You
>> should be able to import any of those into R. A program like MarvinSketch will check the structure
>> for errors as you draw it and keep to standardized formats.
>>
>> By the way, I see no error in the SMILEA string for the structure in your expamle so your error is
>> not in the drawing part of the process. Even so, I try to keep to well established tools for basic
>> tasks and Marvin as is well established as it gets.
>>
>> I would look for an example of what you are trying and see if you can get the example to work.
>>
>> LMH
>>
>>
>> Luigi Marongiu wrote:
>> > Hello,'
>> > I have seen from this link
>> > https://cran.r-project.org/web/packages/rcdk/vignettes/using-rcdk.html
>> > that there is a way to draw chemical structures using R via rcdk package.
>> > I tried to draw a simple structure but I got an error. What is it
>> > missing? What is the correct syntax?
>> > Thanks
>> >
>> > ```
>> > library(rcdk)
>> > smile <- 'c1ccccc1CC(=O)C(N)CC1CCCCOC1'
>> > mol <- parse.smiles(smile)[[1]]
>> > view.molecule.2d(mol)
>> >> Error in view.molecule.2d(mol) : java.lang.NoSuchMethodError: <init>
>> > ```
>> >
>> > ______________________________________________
>> > R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>> > https://stat.ethz.ch/mailman/listinfo/r-help
>> > PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
>> > and provide commented, minimal, self-contained, reproducible code.
>> >
>>
>
>

-- 
Sent from my phone. Please excuse my brevity.


From m@rong|u@|u|g| @end|ng |rom gm@||@com  Tue Dec  6 07:26:08 2022
From: m@rong|u@|u|g| @end|ng |rom gm@||@com (Luigi Marongiu)
Date: Tue, 6 Dec 2022 07:26:08 +0100
Subject: [R] How to draw chemical structures with R?
In-Reply-To: <564DF546-0CCF-4796-A96F-F4F6630B1DD6@dcn.davis.ca.us>
References: <CAMk+s2Q2gUOjVdQwjUHxirVLDpRL7ceGkOS0+sVf3yrVUtP=4A@mail.gmail.com>
 <b77332fa-74ed-b0e0-1113-7739010478d3@molconn.com>
 <CAMk+s2Sr5Bd+woqgA+FEii5drqUR-UQWV9w8YU93oodFrxv8QQ@mail.gmail.com>
 <564DF546-0CCF-4796-A96F-F4F6630B1DD6@dcn.davis.ca.us>
Message-ID: <CAMk+s2QvZMXfJa--B_56OmeYre7zd3mBFgn00Q5ib3ppWE+kXg@mail.gmail.com>

Thanks, I will.

On Tue, Dec 6, 2022 at 7:21 AM Jeff Newmiller <jdnewmil at dcn.davis.ca.us> wrote:
>
> I have never seen this package mentioned on this list. You should contact the package maintainer.
>
> On December 5, 2022 9:59:34 PM PST, Luigi Marongiu <marongiu.luigi at gmail.com> wrote:
> >Thanks for the tip! I think the problem is all Java-based, the SMILES
> >structure comes from the example in the template, it should work.
> >There is something missing in the execution...
> >
> >On Tue, Dec 6, 2022 at 3:12 AM LMH <lmh_users-groups at molconn.com> wrote:
> >>
> >> Just my opinion, but I think you would be better off to draw the structures using a drawing program
> >> like MarvinSketch (free, java based) and save the structure as a SMILES file, MOL file, or SDF. You
> >> should be able to import any of those into R. A program like MarvinSketch will check the structure
> >> for errors as you draw it and keep to standardized formats.
> >>
> >> By the way, I see no error in the SMILEA string for the structure in your expamle so your error is
> >> not in the drawing part of the process. Even so, I try to keep to well established tools for basic
> >> tasks and Marvin as is well established as it gets.
> >>
> >> I would look for an example of what you are trying and see if you can get the example to work.
> >>
> >> LMH
> >>
> >>
> >> Luigi Marongiu wrote:
> >> > Hello,'
> >> > I have seen from this link
> >> > https://cran.r-project.org/web/packages/rcdk/vignettes/using-rcdk.html
> >> > that there is a way to draw chemical structures using R via rcdk package.
> >> > I tried to draw a simple structure but I got an error. What is it
> >> > missing? What is the correct syntax?
> >> > Thanks
> >> >
> >> > ```
> >> > library(rcdk)
> >> > smile <- 'c1ccccc1CC(=O)C(N)CC1CCCCOC1'
> >> > mol <- parse.smiles(smile)[[1]]
> >> > view.molecule.2d(mol)
> >> >> Error in view.molecule.2d(mol) : java.lang.NoSuchMethodError: <init>
> >> > ```
> >> >
> >> > ______________________________________________
> >> > R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> >> > https://stat.ethz.ch/mailman/listinfo/r-help
> >> > PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> >> > and provide commented, minimal, self-contained, reproducible code.
> >> >
> >>
> >
> >
>
> --
> Sent from my phone. Please excuse my brevity.



-- 
Best regards,
Luigi


From ||or|@n@@|h|er @end|ng |rom un|-u|m@de  Tue Dec  6 15:08:52 2022
From: ||or|@n@@|h|er @end|ng |rom un|-u|m@de (Florian Sihler)
Date: Tue, 6 Dec 2022 15:08:52 +0100
Subject: [R] Preexisting Work on Data- and Control-Flow Analysis
Message-ID: <2d07c25f-e0da-bc87-a030-f3c24efdf677@uni-ulm.de>

Hello R-Help Mailinglist,

I hope I've found the correct mailing list for my question (if not, 
please point me to the correct one).
For my master's thesis I plan on creating and implementing a 
program-slicing algorithm for R-Programs using (probably only static) 
data- and control-flow analysis.
While researching the problem I was unable to find any preexisting work 
on the matter.
Does anyone here know of any preexisting work on data- and control-flow 
analysis (or even program slicing) in the context of R-Programs?
I would be really glad for any pointer in the right direction (or 
reasons for why doing that would be a stupid idea).

Regarding my background: I am a computer science student and usually 
program in C++, Java, TypeScript, and Haskell.
Although I've worked with R for roughly a year now (mostly in my spare 
time), I am still getting used to some constructs.

Thank you,
Florian


From @k@h@y_e4 @end|ng |rom hotm@||@com  Tue Dec  6 19:19:05 2022
From: @k@h@y_e4 @end|ng |rom hotm@||@com (akshay kulkarni)
Date: Tue, 6 Dec 2022 18:19:05 +0000
Subject: [R] netstat in R in linux...
Message-ID: <PU4P216MB156855820697E85B1E72E7BAC81B9@PU4P216MB1568.KORP216.PROD.OUTLOOK.COM>

dear members,

I am using free_port() in netstat package in R. It is working in windows but not in linux. It is throwing an error in linux. ANy help please?

THanking you,
Yours sincerely
AKSHAY M KULKARNI

	[[alternative HTML version deleted]]


From henr|k@bengt@@on @end|ng |rom gm@||@com  Tue Dec  6 19:23:44 2022
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Tue, 6 Dec 2022 10:23:44 -0800
Subject: [R] netstat in R in linux...
In-Reply-To: <PU4P216MB156855820697E85B1E72E7BAC81B9@PU4P216MB1568.KORP216.PROD.OUTLOOK.COM>
References: <PU4P216MB156855820697E85B1E72E7BAC81B9@PU4P216MB1568.KORP216.PROD.OUTLOOK.COM>
Message-ID: <CAFDcVCSZp6evNZ41OAYur1NbNyYhrt+SDWodFaj_bntbG5iK0w@mail.gmail.com>

What's the error?!?

/Henrik

On Tue, Dec 6, 2022 at 10:19 AM akshay kulkarni <akshay_e4 at hotmail.com> wrote:
>
> dear members,
>
> I am using free_port() in netstat package in R. It is working in windows but not in linux. It is throwing an error in linux. ANy help please?
>
> THanking you,
> Yours sincerely
> AKSHAY M KULKARNI
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Tue Dec  6 19:32:08 2022
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Tue, 6 Dec 2022 19:32:08 +0100
Subject: [R] confusion about dev.prev()
In-Reply-To: <CA+hbrhUOcDixt+B8+bVBRpv+MfyePDS2Jjv48BgaQ_LMmEUpJg@mail.gmail.com>
References: <CA+hbrhXTs45XYk0J8hXOpq4iSmwnxZ_eWoC6yCNE8etgHyB7Mw@mail.gmail.com>
 <20221205163834.0c8517ae@arachnoid>
 <CA+hbrhUOcDixt+B8+bVBRpv+MfyePDS2Jjv48BgaQ_LMmEUpJg@mail.gmail.com>
Message-ID: <25487.35496.190761.552898@stat.math.ethz.ch>

>>>>> Peter Langfelder 
>>>>>     on Mon, 5 Dec 2022 21:40:13 +0800 writes:

    > Ah, thanks, got it. Misread the help again...

... I think we all had ... and then known for a while  and then
forgot again ...

If you see how to improve the help page, so this happens less, ..
we'd look at it to add the improvement there.

Martin

    > Peter

    > On Mon, Dec 5, 2022 at 9:38 PM Ivan Krylov <krylov.r00t at gmail.com> wrote:
    >> 
    >> ? Mon, 5 Dec 2022 21:28:16 +0800
    >> Peter Langfelder <peter.langfelder at gmail.com> ?????:
    >> 
    >> > Open two devices, plot a plot, call dev.prev() and plot again. I
    >> > would expect the second plot to appear in the first device, but that
    >> > is not what happens; both plots appear in the second device.
    >> 
    >> Unfortunately, dev.prev() and dev.next() only return the number of the
    >> respective device. You need dev.set() to actually make the change.
    >> 
    >> --
    >> Best regards,
    >> Ivan

    > ______________________________________________
    > R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
    > https://stat.ethz.ch/mailman/listinfo/r-help
    > PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
    > and provide commented, minimal, self-contained, reproducible code.


From @k@h@y_e4 @end|ng |rom hotm@||@com  Tue Dec  6 19:41:15 2022
From: @k@h@y_e4 @end|ng |rom hotm@||@com (akshay kulkarni)
Date: Tue, 6 Dec 2022 18:41:15 +0000
Subject: [R] netstat in R in linux...
In-Reply-To: <CAFDcVCSZp6evNZ41OAYur1NbNyYhrt+SDWodFaj_bntbG5iK0w@mail.gmail.com>
References: <PU4P216MB156855820697E85B1E72E7BAC81B9@PU4P216MB1568.KORP216.PROD.OUTLOOK.COM>
 <CAFDcVCSZp6evNZ41OAYur1NbNyYhrt+SDWodFaj_bntbG5iK0w@mail.gmail.com>
Message-ID: <PU4P216MB1568479E11D49AF24959EDA2C81B9@PU4P216MB1568.KORP216.PROD.OUTLOOK.COM>

Dear Henrik,
                        The error is:

> library(netstat)
> free_port()
sh: netstat: command not found
Error in system("netstat -n -a", intern = TRUE) :
  error in running command

Thanking you,
Yours sincerely
AKSHAY M KULKARNI
________________________________
From: Henrik Bengtsson <henrik.bengtsson at gmail.com>
Sent: Tuesday, December 6, 2022 11:53 PM
To: akshay kulkarni <akshay_e4 at hotmail.com>
Cc: R help Mailing list <r-help at r-project.org>
Subject: Re: [R] netstat in R in linux...

What's the error?!?

/Henrik

On Tue, Dec 6, 2022 at 10:19 AM akshay kulkarni <akshay_e4 at hotmail.com> wrote:
>
> dear members,
>
> I am using free_port() in netstat package in R. It is working in windows but not in linux. It is throwing an error in linux. ANy help please?
>
> THanking you,
> Yours sincerely
> AKSHAY M KULKARNI
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.

	[[alternative HTML version deleted]]


From henr|k@bengt@@on @end|ng |rom gm@||@com  Tue Dec  6 19:49:15 2022
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Tue, 6 Dec 2022 10:49:15 -0800
Subject: [R] netstat in R in linux...
In-Reply-To: <PU4P216MB1568479E11D49AF24959EDA2C81B9@PU4P216MB1568.KORP216.PROD.OUTLOOK.COM>
References: <PU4P216MB156855820697E85B1E72E7BAC81B9@PU4P216MB1568.KORP216.PROD.OUTLOOK.COM>
 <CAFDcVCSZp6evNZ41OAYur1NbNyYhrt+SDWodFaj_bntbG5iK0w@mail.gmail.com>
 <PU4P216MB1568479E11D49AF24959EDA2C81B9@PU4P216MB1568.KORP216.PROD.OUTLOOK.COM>
Message-ID: <CAFDcVCTGRORci+fgsB9ppbYmkRFZgKeuUHwU57tCC7SUnixnJw@mail.gmail.com>

Okay,

that means that the Linux machine where you run this on does not have
the 'netstat' software installed.  That is something that needs to be
installed outside of R.  For example, if it's Ubuntu, I think 'sudo
apt info net-tools' will do.

(Disclaimer: I'm the author)
A cross-platform alternative to netstat::free_port(), is
port4me::port4me(), which is also available from CRAN
(https://cran.r-project.org/package=port4me). It requires no external
tools, but R (>= 4.0.0).

/Henrik

On Tue, Dec 6, 2022 at 10:41 AM akshay kulkarni <akshay_e4 at hotmail.com> wrote:
>
> Dear Henrik,
>                         The error is:
>
> > library(netstat)
> > free_port()
> sh: netstat: command not found
> Error in system("netstat -n -a", intern = TRUE) :
>   error in running command
>
> Thanking you,
> Yours sincerely
> AKSHAY M KULKARNI
> ________________________________
> From: Henrik Bengtsson <henrik.bengtsson at gmail.com>
> Sent: Tuesday, December 6, 2022 11:53 PM
> To: akshay kulkarni <akshay_e4 at hotmail.com>
> Cc: R help Mailing list <r-help at r-project.org>
> Subject: Re: [R] netstat in R in linux...
>
> What's the error?!?
>
> /Henrik
>
> On Tue, Dec 6, 2022 at 10:19 AM akshay kulkarni <akshay_e4 at hotmail.com> wrote:
> >
> > dear members,
> >
> > I am using free_port() in netstat package in R. It is working in windows but not in linux. It is throwing an error in linux. ANy help please?
> >
> > THanking you,
> > Yours sincerely
> > AKSHAY M KULKARNI
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> > https://stat.ethz.ch/mailman/listinfo/r-help
> > PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> > and provide commented, minimal, self-contained, reproducible code.


From @k@h@y_e4 @end|ng |rom hotm@||@com  Tue Dec  6 20:00:15 2022
From: @k@h@y_e4 @end|ng |rom hotm@||@com (akshay kulkarni)
Date: Tue, 6 Dec 2022 19:00:15 +0000
Subject: [R] netstat in R in linux...
In-Reply-To: <CAFDcVCTGRORci+fgsB9ppbYmkRFZgKeuUHwU57tCC7SUnixnJw@mail.gmail.com>
References: <PU4P216MB156855820697E85B1E72E7BAC81B9@PU4P216MB1568.KORP216.PROD.OUTLOOK.COM>
 <CAFDcVCSZp6evNZ41OAYur1NbNyYhrt+SDWodFaj_bntbG5iK0w@mail.gmail.com>
 <PU4P216MB1568479E11D49AF24959EDA2C81B9@PU4P216MB1568.KORP216.PROD.OUTLOOK.COM>
 <CAFDcVCTGRORci+fgsB9ppbYmkRFZgKeuUHwU57tCC7SUnixnJw@mail.gmail.com>
Message-ID: <PU4P216MB156872F7954E380FBAD126DDC81B9@PU4P216MB1568.KORP216.PROD.OUTLOOK.COM>

Dear Henrik
                      It is working....thanks a lot! I had actually previously tried this:  sudo yum install netstat rather than sudo yum install net-tools

By the by, what advantages does port4me have as compared to netstat?

THanking you,
Yours sincerely,
AKSHAY M KULKARNI

________________________________
From: Henrik Bengtsson <henrik.bengtsson at gmail.com>
Sent: Wednesday, December 7, 2022 12:19 AM
To: akshay kulkarni <akshay_e4 at hotmail.com>
Cc: R help Mailing list <r-help at r-project.org>
Subject: Re: [R] netstat in R in linux...

Okay,

that means that the Linux machine where you run this on does not have
the 'netstat' software installed.  That is something that needs to be
installed outside of R.  For example, if it's Ubuntu, I think 'sudo
apt info net-tools' will do.

(Disclaimer: I'm the author)
A cross-platform alternative to netstat::free_port(), is
port4me::port4me(), which is also available from CRAN
(https://cran.r-project.org/package=port4me). It requires no external
tools, but R (>= 4.0.0).

/Henrik

On Tue, Dec 6, 2022 at 10:41 AM akshay kulkarni <akshay_e4 at hotmail.com> wrote:
>
> Dear Henrik,
>                         The error is:
>
> > library(netstat)
> > free_port()
> sh: netstat: command not found
> Error in system("netstat -n -a", intern = TRUE) :
>   error in running command
>
> Thanking you,
> Yours sincerely
> AKSHAY M KULKARNI
> ________________________________
> From: Henrik Bengtsson <henrik.bengtsson at gmail.com>
> Sent: Tuesday, December 6, 2022 11:53 PM
> To: akshay kulkarni <akshay_e4 at hotmail.com>
> Cc: R help Mailing list <r-help at r-project.org>
> Subject: Re: [R] netstat in R in linux...
>
> What's the error?!?
>
> /Henrik
>
> On Tue, Dec 6, 2022 at 10:19 AM akshay kulkarni <akshay_e4 at hotmail.com> wrote:
> >
> > dear members,
> >
> > I am using free_port() in netstat package in R. It is working in windows but not in linux. It is throwing an error in linux. ANy help please?
> >
> > THanking you,
> > Yours sincerely
> > AKSHAY M KULKARNI
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> > https://stat.ethz.ch/mailman/listinfo/r-help
> > PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> > and provide commented, minimal, self-contained, reproducible code.

	[[alternative HTML version deleted]]


From henr|k@bengt@@on @end|ng |rom gm@||@com  Tue Dec  6 20:14:18 2022
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Tue, 6 Dec 2022 11:14:18 -0800
Subject: [R] netstat in R in linux...
In-Reply-To: <PU4P216MB156872F7954E380FBAD126DDC81B9@PU4P216MB1568.KORP216.PROD.OUTLOOK.COM>
References: <PU4P216MB156855820697E85B1E72E7BAC81B9@PU4P216MB1568.KORP216.PROD.OUTLOOK.COM>
 <CAFDcVCSZp6evNZ41OAYur1NbNyYhrt+SDWodFaj_bntbG5iK0w@mail.gmail.com>
 <PU4P216MB1568479E11D49AF24959EDA2C81B9@PU4P216MB1568.KORP216.PROD.OUTLOOK.COM>
 <CAFDcVCTGRORci+fgsB9ppbYmkRFZgKeuUHwU57tCC7SUnixnJw@mail.gmail.com>
 <PU4P216MB156872F7954E380FBAD126DDC81B9@PU4P216MB1568.KORP216.PROD.OUTLOOK.COM>
Message-ID: <CAFDcVCT0qryUgvjLgtjNB6kS_jj8WTLnXkeF6Sut0mKqEMz78w@mail.gmail.com>

> By the by, what advantages does port4me have as compared to netstat?

As I said in my previous email, it doesn't require external tools, so
it's more likely to work out of the box for more people. But that
wasn't the main reason for this package. For the full motivation
behind port4me, see the vignette
<https://cran.r-project.org/web/packages/port4me/vignettes/port4me-overview.html>.

/Henrik

On Tue, Dec 6, 2022 at 11:00 AM akshay kulkarni <akshay_e4 at hotmail.com> wrote:
>
> Dear Henrik
>                       It is working....thanks a lot! I had actually previously tried this:  sudo yum install netstat rather than sudo yum install net-tools
>
> By the by, what advantages does port4me have as compared to netstat?
>
> THanking you,
> Yours sincerely,
> AKSHAY M KULKARNI
>
> ________________________________
> From: Henrik Bengtsson <henrik.bengtsson at gmail.com>
> Sent: Wednesday, December 7, 2022 12:19 AM
> To: akshay kulkarni <akshay_e4 at hotmail.com>
> Cc: R help Mailing list <r-help at r-project.org>
> Subject: Re: [R] netstat in R in linux...
>
> Okay,
>
> that means that the Linux machine where you run this on does not have
> the 'netstat' software installed.  That is something that needs to be
> installed outside of R.  For example, if it's Ubuntu, I think 'sudo
> apt info net-tools' will do.
>
> (Disclaimer: I'm the author)
> A cross-platform alternative to netstat::free_port(), is
> port4me::port4me(), which is also available from CRAN
> (https://cran.r-project.org/package=port4me). It requires no external
> tools, but R (>= 4.0.0).
>
> /Henrik
>
> On Tue, Dec 6, 2022 at 10:41 AM akshay kulkarni <akshay_e4 at hotmail.com> wrote:
> >
> > Dear Henrik,
> >                         The error is:
> >
> > > library(netstat)
> > > free_port()
> > sh: netstat: command not found
> > Error in system("netstat -n -a", intern = TRUE) :
> >   error in running command
> >
> > Thanking you,
> > Yours sincerely
> > AKSHAY M KULKARNI
> > ________________________________
> > From: Henrik Bengtsson <henrik.bengtsson at gmail.com>
> > Sent: Tuesday, December 6, 2022 11:53 PM
> > To: akshay kulkarni <akshay_e4 at hotmail.com>
> > Cc: R help Mailing list <r-help at r-project.org>
> > Subject: Re: [R] netstat in R in linux...
> >
> > What's the error?!?
> >
> > /Henrik
> >
> > On Tue, Dec 6, 2022 at 10:19 AM akshay kulkarni <akshay_e4 at hotmail.com> wrote:
> > >
> > > dear members,
> > >
> > > I am using free_port() in netstat package in R. It is working in windows but not in linux. It is throwing an error in linux. ANy help please?
> > >
> > > THanking you,
> > > Yours sincerely
> > > AKSHAY M KULKARNI
> > >
> > >         [[alternative HTML version deleted]]
> > >
> > > ______________________________________________
> > > R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> > > https://stat.ethz.ch/mailman/listinfo/r-help
> > > PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> > > and provide commented, minimal, self-contained, reproducible code.


From @k@h@y_e4 @end|ng |rom hotm@||@com  Tue Dec  6 20:16:43 2022
From: @k@h@y_e4 @end|ng |rom hotm@||@com (akshay kulkarni)
Date: Tue, 6 Dec 2022 19:16:43 +0000
Subject: [R] netstat in R in linux...
In-Reply-To: <CAFDcVCT0qryUgvjLgtjNB6kS_jj8WTLnXkeF6Sut0mKqEMz78w@mail.gmail.com>
References: <PU4P216MB156855820697E85B1E72E7BAC81B9@PU4P216MB1568.KORP216.PROD.OUTLOOK.COM>
 <CAFDcVCSZp6evNZ41OAYur1NbNyYhrt+SDWodFaj_bntbG5iK0w@mail.gmail.com>
 <PU4P216MB1568479E11D49AF24959EDA2C81B9@PU4P216MB1568.KORP216.PROD.OUTLOOK.COM>
 <CAFDcVCTGRORci+fgsB9ppbYmkRFZgKeuUHwU57tCC7SUnixnJw@mail.gmail.com>
 <PU4P216MB156872F7954E380FBAD126DDC81B9@PU4P216MB1568.KORP216.PROD.OUTLOOK.COM>
 <CAFDcVCT0qryUgvjLgtjNB6kS_jj8WTLnXkeF6Sut0mKqEMz78w@mail.gmail.com>
Message-ID: <PU4P216MB156846C44C2005475586CDFFC81B9@PU4P216MB1568.KORP216.PROD.OUTLOOK.COM>

Dear Henrik,
                       OK thanks a lot..

thanking you,
Yours sincerely,
AKSHAY M KULKARNI
________________________________
From: Henrik Bengtsson <henrik.bengtsson at gmail.com>
Sent: Wednesday, December 7, 2022 12:44 AM
To: akshay kulkarni <akshay_e4 at hotmail.com>
Cc: R help Mailing list <r-help at r-project.org>
Subject: Re: [R] netstat in R in linux...

> By the by, what advantages does port4me have as compared to netstat?

As I said in my previous email, it doesn't require external tools, so
it's more likely to work out of the box for more people. But that
wasn't the main reason for this package. For the full motivation
behind port4me, see the vignette
<https://cran.r-project.org/web/packages/port4me/vignettes/port4me-overview.html>.

/Henrik

On Tue, Dec 6, 2022 at 11:00 AM akshay kulkarni <akshay_e4 at hotmail.com> wrote:
>
> Dear Henrik
>                       It is working....thanks a lot! I had actually previously tried this:  sudo yum install netstat rather than sudo yum install net-tools
>
> By the by, what advantages does port4me have as compared to netstat?
>
> THanking you,
> Yours sincerely,
> AKSHAY M KULKARNI
>
> ________________________________
> From: Henrik Bengtsson <henrik.bengtsson at gmail.com>
> Sent: Wednesday, December 7, 2022 12:19 AM
> To: akshay kulkarni <akshay_e4 at hotmail.com>
> Cc: R help Mailing list <r-help at r-project.org>
> Subject: Re: [R] netstat in R in linux...
>
> Okay,
>
> that means that the Linux machine where you run this on does not have
> the 'netstat' software installed.  That is something that needs to be
> installed outside of R.  For example, if it's Ubuntu, I think 'sudo
> apt info net-tools' will do.
>
> (Disclaimer: I'm the author)
> A cross-platform alternative to netstat::free_port(), is
> port4me::port4me(), which is also available from CRAN
> (https://cran.r-project.org/package=port4me). It requires no external
> tools, but R (>= 4.0.0).
>
> /Henrik
>
> On Tue, Dec 6, 2022 at 10:41 AM akshay kulkarni <akshay_e4 at hotmail.com> wrote:
> >
> > Dear Henrik,
> >                         The error is:
> >
> > > library(netstat)
> > > free_port()
> > sh: netstat: command not found
> > Error in system("netstat -n -a", intern = TRUE) :
> >   error in running command
> >
> > Thanking you,
> > Yours sincerely
> > AKSHAY M KULKARNI
> > ________________________________
> > From: Henrik Bengtsson <henrik.bengtsson at gmail.com>
> > Sent: Tuesday, December 6, 2022 11:53 PM
> > To: akshay kulkarni <akshay_e4 at hotmail.com>
> > Cc: R help Mailing list <r-help at r-project.org>
> > Subject: Re: [R] netstat in R in linux...
> >
> > What's the error?!?
> >
> > /Henrik
> >
> > On Tue, Dec 6, 2022 at 10:19 AM akshay kulkarni <akshay_e4 at hotmail.com> wrote:
> > >
> > > dear members,
> > >
> > > I am using free_port() in netstat package in R. It is working in windows but not in linux. It is throwing an error in linux. ANy help please?
> > >
> > > THanking you,
> > > Yours sincerely
> > > AKSHAY M KULKARNI
> > >
> > >         [[alternative HTML version deleted]]
> > >
> > > ______________________________________________
> > > R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> > > https://stat.ethz.ch/mailman/listinfo/r-help
> > > PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> > > and provide commented, minimal, self-contained, reproducible code.

	[[alternative HTML version deleted]]


