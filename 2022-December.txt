From m@rong|u@|u|g| @end|ng |rom gm@||@com  Thu Dec  1 12:25:40 2022
From: m@rong|u@|u|g| @end|ng |rom gm@||@com (Luigi Marongiu)
Date: Thu, 1 Dec 2022 12:25:40 +0100
Subject: [R] Select dataframe row containing a digit
In-Reply-To: <20221201085928.18573b32@rolf-Latitude-E7470>
References: <CAMk+s2SbBEZVU6ey_Ua3vzmwdtfNnatfYRXJ0_ecV-hpBKfdPw@mail.gmail.com>
 <20221201085928.18573b32@rolf-Latitude-E7470>
Message-ID: <CAMk+s2RSzB+R+KZmvokU=B0ikUan42e-4e1S1kCxrT_QyEZ=rg@mail.gmail.com>

Thank you, those are all viable solutions.
Regards
Luigi

On Wed, Nov 30, 2022 at 8:59 PM Rolf Turner <r.turner at auckland.ac.nz> wrote:
>
>
> On Wed, 30 Nov 2022 13:40:50 +0100
> Luigi Marongiu <marongiu.luigi at gmail.com> wrote:
>
> > Hello,
> > I have a data frame where some lines containing strings including
> > digits. How do I select those rows and change their values?
> >
> > In essence, I have a data frame with different values assigned to the
> > column "val". I am formatting everything to either "POS" and "NEG",
> > but values entered as number should get the value "NUM".
> > How do I change such values?
> >
>
> What I do in such circumstances:
>
> suppressWarnings(X$val[!is.na(as.numeric(X$val))] <- "NUM")
>
> The "suppressWarnings()" bit is just included due to my OCD.
>
> This avoids fooling about with regular expressions, which always
> requires a huge amount of trial and error, and a great diminishment of
> the amount of hair on one's head (as a result of tearing out).
>
> Note that I have changed the name of your data frame from "df" to "X",
> since df() is a built-in R function (density of the F-distribution).
>
> See fortunes::fortune("might clash").
>
> cheers,
>
> Rolf Turner
>
> --
> Honorary Research Fellow
> Department of Statistics
> University of Auckland
> Phone: +64-9-373-7599 ext. 88276
>


-- 
Best regards,
Luigi


From r@ywong @end|ng |rom t@mu@edu  Fri Dec  2 04:55:35 2022
From: r@ywong @end|ng |rom t@mu@edu (Raymond Wong)
Date: Thu, 1 Dec 2022 21:55:35 -0600
Subject: [R] 2023 John M. Chambers Software Award
In-Reply-To: <f8a848c6-7ed0-4196-9cdc-8040b69c9ada@Spark>
References: <f8a848c6-7ed0-4196-9cdc-8040b69c9ada@Spark>
Message-ID: <39017c8b-eab3-4fb8-aaad-cc934ac10578@Spark>

Dear R-help listers,

I would like to let you know that submission window of the John M. Chambers Software Award is now open. The submission deadline is December 15, 2022.

The Statistical Computing Section of the American Statistical Association announces the competition for the John M. Chambers Statistical Software Award. In 1998 the Association for Computing Machinery (ACM) presented the ACM Software System Award to John Chambers for the design and development of S. Dr. Chambers generously donated his award to the Statistical Computing Section to endow an annual prize for statistical software written by, or in collaboration with, an undergraduate or graduate student.

Please visit http://asa.stat.uconn.edu for more information.

Best regards,

Sincerely,

Raymond Wong

Awards Chair
ASA Section on Statistical Computing
ASA Section on Statistical Graphics

	[[alternative HTML version deleted]]


From ev@n@cooch @end|ng |rom gm@||@com  Fri Dec  2 18:18:56 2022
From: ev@n@cooch @end|ng |rom gm@||@com (Evan Cooch)
Date: Fri, 2 Dec 2022 12:18:56 -0500
Subject: [R] interval between specific characters in a string...
Message-ID: <4d5418e3-0c41-43c0-e124-d735dbd707a4@gmail.com>

Was wondering if there is an 'efficient/elegant' way to do the following 
(without tidyverse). Take a string

abaaabbaaaaabaaab

Its easy enough to count the number of times the character 'b' shows up 
in the string, but...what I'm looking for is outputing the 'intervals' 
between occurrences of 'b' (starting the counter at the beginning of the 
string). So, for the preceding example, 'b' shows up in positions

2, 6, 7, 13, 17

So, the interval data would be: 2, 4, 1, 6, 4

My main approach has been to simply output positions (say, something 
like unlist(gregexpr('b', target_string))), and 'do the math' between 
successive positions. Can anyone suggest a more elegant approach?

Thanks in advance...


From @kw@|mmo @end|ng |rom gm@||@com  Sat Dec  3 01:01:18 2022
From: @kw@|mmo @end|ng |rom gm@||@com (Andrew Simmons)
Date: Fri, 2 Dec 2022 19:01:18 -0500
Subject: [R] interval between specific characters in a string...
In-Reply-To: <4d5418e3-0c41-43c0-e124-d735dbd707a4@gmail.com>
References: <4d5418e3-0c41-43c0-e124-d735dbd707a4@gmail.com>
Message-ID: <CAPcHnpSRXU0RLOER+8Jxsxi-LumpK43sr5X-yXAMxuvcqBdKkA@mail.gmail.com>

try

gregexpr('b+', target_string)

which looks for one or more b characters, then get the attribute
"match.length"

On Fri, Dec 2, 2022, 18:56 Evan Cooch <evan.cooch at gmail.com> wrote:

> Was wondering if there is an 'efficient/elegant' way to do the following
> (without tidyverse). Take a string
>
> abaaabbaaaaabaaab
>
> Its easy enough to count the number of times the character 'b' shows up
> in the string, but...what I'm looking for is outputing the 'intervals'
> between occurrences of 'b' (starting the counter at the beginning of the
> string). So, for the preceding example, 'b' shows up in positions
>
> 2, 6, 7, 13, 17
>
> So, the interval data would be: 2, 4, 1, 6, 4
>
> My main approach has been to simply output positions (say, something
> like unlist(gregexpr('b', target_string))), and 'do the math' between
> successive positions. Can anyone suggest a more elegant approach?
>
> Thanks in advance...
>
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide
> http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>

	[[alternative HTML version deleted]]


From mtmorg@n@b|oc @end|ng |rom gm@||@com  Sat Dec  3 01:39:20 2022
From: mtmorg@n@b|oc @end|ng |rom gm@||@com (Martin Morgan)
Date: Sat, 3 Dec 2022 00:39:20 +0000
Subject: [R] interval between specific characters in a string...
In-Reply-To: <4d5418e3-0c41-43c0-e124-d735dbd707a4@gmail.com>
References: <4d5418e3-0c41-43c0-e124-d735dbd707a4@gmail.com>
Message-ID: <BY5PR04MB6627BD017DA84DD29C08794DF9169@BY5PR04MB6627.namprd04.prod.outlook.com>

You could split the string into letters and figure out which ones are ?b?

which(strsplit(x, "")[[1]] == "b")

and then find the difference between each position, ?anchoring? at position 0

> diff(c(0, which(strsplit(x, "")[[1]] == "b")))
[1] 2 4 1 6 4

From: R-help <r-help-bounces at r-project.org> on behalf of Evan Cooch <evan.cooch at gmail.com>
Date: Friday, December 2, 2022 at 6:56 PM
To: r-help at r-project.org <r-help at r-project.org>
Subject: [R] interval between specific characters in a string...
Was wondering if there is an 'efficient/elegant' way to do the following
(without tidyverse). Take a string

abaaabbaaaaabaaab

Its easy enough to count the number of times the character 'b' shows up
in the string, but...what I'm looking for is outputing the 'intervals'
between occurrences of 'b' (starting the counter at the beginning of the
string). So, for the preceding example, 'b' shows up in positions

2, 6, 7, 13, 17

So, the interval data would be: 2, 4, 1, 6, 4

My main approach has been to simply output positions (say, something
like unlist(gregexpr('b', target_string))), and 'do the math' between
successive positions. Can anyone suggest a more elegant approach?

Thanks in advance...

______________________________________________
R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.

	[[alternative HTML version deleted]]


From @h@rt @end|ng |rom d|m@uch||e@c|  Sat Dec  3 02:54:15 2022
From: @h@rt @end|ng |rom d|m@uch||e@c| (Andrew Hart)
Date: Fri, 2 Dec 2022 22:54:15 -0300
Subject: [R] interval between specific characters in a string...
In-Reply-To: <4d5418e3-0c41-43c0-e124-d735dbd707a4@gmail.com>
References: <4d5418e3-0c41-43c0-e124-d735dbd707a4@gmail.com>
Message-ID: <c4927d63-5f39-693c-a123-7edfca1c5b78@dim.uchile.cl>

Here's a function that can get the interval sizes for you.

getStringSegmentLengths <- function(s, delim, ...) {
   nchar(unlist(strsplit(s, delim, ...))) + 1L
}

It uses strsplit to return a list of all the segments of the string 
separated by delim. delim can be a regular expression and with ..., you 
can pass all the extra options to strsplit in order to specify how to 
break up the string.
It then uses unlist to convert the list output of strsplit to a 
character vector. nchar then gives the lengths of all the elements of 
the character vector and finally a 1 is added to each of these in order 
to obtain the correct interval sizes.

Hth,
Andrew.

On 2/12/2022 14:18, Evan Cooch wrote:
> Was wondering if there is an 'efficient/elegant' way to do the following 
> (without tidyverse). Take a string
> 
> abaaabbaaaaabaaab
> 
> Its easy enough to count the number of times the character 'b' shows up 
> in the string, but...what I'm looking for is outputing the 'intervals' 
> between occurrences of 'b' (starting the counter at the beginning of the 
> string). So, for the preceding example, 'b' shows up in positions
> 
> 2, 6, 7, 13, 17
> 
> So, the interval data would be: 2, 4, 1, 6, 4
> 
> My main approach has been to simply output positions (say, something 
> like unlist(gregexpr('b', target_string))), and 'do the math' between 
> successive positions. Can anyone suggest a more elegant approach?
> 
> Thanks in advance...
> 
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide 
> http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>


