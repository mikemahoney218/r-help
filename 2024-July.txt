From j@ork|n @end|ng |rom @om@um@ry|@nd@edu  Mon Jul  1 17:54:21 2024
From: j@ork|n @end|ng |rom @om@um@ry|@nd@edu (Sorkin, John)
Date: Mon, 1 Jul 2024 15:54:21 +0000
Subject: [R] Create matrix with variable number of columns AND CREATE NAMES
 FOR THE COLUMNS
Message-ID: <DM6PR03MB50491491431A5556461E7BABE2D32@DM6PR03MB5049.namprd03.prod.outlook.com>

#I am trying to write code that will create a matrix with a variable number of columns where the #number of columns is 1+Grps
#I can do this:
NSims <- 4
Grps <- 5
DiffMeans <- matrix(nrow=NSims,ncol=1+Grps)
DiffMeans

#I have a problem when I try to name the columns of the matrix. I want the first column to be NSims, #and the other columns to be something like Value1, Value2, . . . Valuen where N=Grps

# I wrote a function to build a list of length Grps
createValuelist <- function(num_elements) {
  for (i in 1:num_elements) {
    cat("Item", i, "\n", sep = "")
  }
}
createValuelist(Grps)

# When I try to assign column names I receive an error:
#Error in dimnames(DiffMeans) <- list(NULL, c("NSim", createValuelist(Grps))) : 
# length of 'dimnames' [2] not equal to array extent
dimnames(DiffMeans) <- list(NULL,c("NSim",createValuelist(Grps)))
DiffMeans

# Thank you for your help!


John David Sorkin M.D., Ph.D.
Professor of Medicine, University of Maryland School of Medicine;
Associate Director for Biostatistics and Informatics, Baltimore VA Medical Center Geriatrics Research, Education, and Clinical Center;?
PI?Biostatistics and Informatics Core, University of Maryland School of Medicine Claude D. Pepper Older Americans Independence Center;
Senior Statistician University of Maryland Center for Vascular Research;

Division of Gerontology and Paliative Care,
10 North Greene Street
GRECC (BT/18/GR)
Baltimore, MD 21201-1524
Cell phone 443-418-5382




From tebert @end|ng |rom u||@edu  Mon Jul  1 19:43:36 2024
From: tebert @end|ng |rom u||@edu (Ebert,Timothy Aaron)
Date: Mon, 1 Jul 2024 17:43:36 +0000
Subject: [R] 
 Create matrix with variable number of columns AND CREATE NAMES
 FOR THE COLUMNS
In-Reply-To: <DM6PR03MB50491491431A5556461E7BABE2D32@DM6PR03MB5049.namprd03.prod.outlook.com>
References: <DM6PR03MB50491491431A5556461E7BABE2D32@DM6PR03MB5049.namprd03.prod.outlook.com>
Message-ID: <CH3PR22MB45142BD4D2792E8AEAB11AF4CFD32@CH3PR22MB4514.namprd22.prod.outlook.com>

NSims <- 4
Grps <- 5
DiffMeans <- matrix(nrow=NSims,ncol=1+Grps)
DiffMeans

#I have a problem when I try to name the columns of the matrix. I want the first column to be NSims, #and the other columns to be something like Value1, Value2, . . . Valuen where N=Grps
Colnames <- as.vector("NSims")
num_elements <- ncol(DiffMeans)
for (i in 2:num_elements) {
  Colnames[i] <- paste0("Item",i)
}
colnames(DiffMeans) <- Colnames

You need the vector "Colnames" to have the same number of elements as columns in DiffMeans.
Colnames in created with the first element in place because that will not change.
The loop starts with the second element so that the first element is not overwritten by the for loop.


As a function it might look something like this:
# Name columns is a function that will take a matrix and two strings.
# The first string is the name of the first column.
# The second string is the base part of column names.
#     The function adds a number after the base part.
name_cols <- function(matrix, name1, name2){
  colnames <- as.vector(name1)
  num_elements <- ncol(DiffMeans)
  # I wrote a function to build a list of length Grps createValuelist <- function(num_elements) {
  for (i in 2:num_elements) {
    colnames[i] <- paste0(name2,i)
  }
}

colnames(DiffMeans) <- name_cols(DiffNames,"Book", "Cola")

You can now make the names anything you want for any specific use.
You could add some error checking like making sure the first parameter is a matrix and the other two parmeters are appropriate strings.
If the function will only be called once or twice it might be simpler to not use a function.


Tim
-----Original Message-----
From: R-help <r-help-bounces at r-project.org> On Behalf Of Sorkin, John
Sent: Monday, July 1, 2024 11:54 AM
To: r-help at r-project.org (r-help at r-project.org) <r-help at r-project.org>
Subject: [R] Create matrix with variable number of columns AND CREATE NAMES FOR THE COLUMNS

[External Email]

#I am trying to write code that will create a matrix with a variable number of columns where the #number of columns is 1+Grps #I can do this:
NSims <- 4
Grps <- 5
DiffMeans <- matrix(nrow=NSims,ncol=1+Grps) DiffMeans

#I have a problem when I try to name the columns of the matrix. I want the first column to be NSims, #and the other columns to be something like Value1, Value2, . . . Valuen where N=Grps

# I wrote a function to build a list of length Grps createValuelist <- function(num_elements) {
  for (i in 1:num_elements) {
    cat("Item", i, "\n", sep = "")
  }
}
createValuelist(Grps)

# When I try to assign column names I receive an error:
#Error in dimnames(DiffMeans) <- list(NULL, c("NSim", createValuelist(Grps))) :
# length of 'dimnames' [2] not equal to array extent
dimnames(DiffMeans) <- list(NULL,c("NSim",createValuelist(Grps)))
DiffMeans

# Thank you for your help!


John David Sorkin M.D., Ph.D.
Professor of Medicine, University of Maryland School of Medicine; Associate Director for Biostatistics and Informatics, Baltimore VA Medical Center Geriatrics Research, Education, and Clinical Center; PI Biostatistics and Informatics Core, University of Maryland School of Medicine Claude D. Pepper Older Americans Independence Center; Senior Statistician University of Maryland Center for Vascular Research;

Division of Gerontology and Paliative Care,
10 North Greene Street
GRECC (BT/18/GR)
Baltimore, MD 21201-1524
Cell phone 443-418-5382



______________________________________________
R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
https://stat.ethz.ch/mailman/listinfo/r-help
PLEASE do read the posting guide http://www.r-project.org/posting-guide.html
and provide commented, minimal, self-contained, reproducible code.


From ru|pb@rr@d@@ @end|ng |rom @@po@pt  Mon Jul  1 19:56:23 2024
From: ru|pb@rr@d@@ @end|ng |rom @@po@pt (Rui Barradas)
Date: Mon, 1 Jul 2024 18:56:23 +0100
Subject: [R] 
 Create matrix with variable number of columns AND CREATE NAMES
 FOR THE COLUMNS
In-Reply-To: <DM6PR03MB50491491431A5556461E7BABE2D32@DM6PR03MB5049.namprd03.prod.outlook.com>
References: <DM6PR03MB50491491431A5556461E7BABE2D32@DM6PR03MB5049.namprd03.prod.outlook.com>
Message-ID: <78bf05fa-7f80-413e-aa6d-0c0f785c0c49@sapo.pt>

?s 16:54 de 01/07/2024, Sorkin, John escreveu:
> #I am trying to write code that will create a matrix with a variable number of columns where the #number of columns is 1+Grps
> #I can do this:
> NSims <- 4
> Grps <- 5
> DiffMeans <- matrix(nrow=NSims,ncol=1+Grps)
> DiffMeans
> 
> #I have a problem when I try to name the columns of the matrix. I want the first column to be NSims, #and the other columns to be something like Value1, Value2, . . . Valuen where N=Grps
> 
> # I wrote a function to build a list of length Grps
> createValuelist <- function(num_elements) {
>    for (i in 1:num_elements) {
>      cat("Item", i, "\n", sep = "")
>    }
> }
> createValuelist(Grps)
> 
> # When I try to assign column names I receive an error:
> #Error in dimnames(DiffMeans) <- list(NULL, c("NSim", createValuelist(Grps))) :
> # length of 'dimnames' [2] not equal to array extent
> dimnames(DiffMeans) <- list(NULL,c("NSim",createValuelist(Grps)))
> DiffMeans
> 
> # Thank you for your help!
> 
> 
> John David Sorkin M.D., Ph.D.
> Professor of Medicine, University of Maryland School of Medicine;
> Associate Director for Biostatistics and Informatics, Baltimore VA Medical Center Geriatrics Research, Education, and Clinical Center;
> PI?Biostatistics and Informatics Core, University of Maryland School of Medicine Claude D. Pepper Older Americans Independence Center;
> Senior Statistician University of Maryland Center for Vascular Research;
> 
> Division of Gerontology and Paliative Care,
> 10 North Greene Street
> GRECC (BT/18/GR)
> Baltimore, MD 21201-1524
> Cell phone 443-418-5382
> 
> 
> 
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
Hello,

Something like this?



names_cols <- function(x, First = "NSims", Prefix = "Value") {
   nms <- c(First, sprintf("%s%d", Prefix, seq_len(ncol(x) - 1L)))
   colnames(x) <- nms
   x
}

NSims <- 4
Grps <- 5
DiffMeans <- matrix(nrow=NSims,ncol=1+Grps)
names_cols(DiffMeans)
#>      NSims Value1 Value2 Value3 Value4 Value5
#> [1,]    NA     NA     NA     NA     NA     NA
#> [2,]    NA     NA     NA     NA     NA     NA
#> [3,]    NA     NA     NA     NA     NA     NA
#> [4,]    NA     NA     NA     NA     NA     NA



Hope this helps,

Rui Barradas


-- 
Este e-mail foi analisado pelo software antiv?rus AVG para verificar a presen?a de v?rus.
www.avg.com


From ru|pb@rr@d@@ @end|ng |rom @@po@pt  Mon Jul  1 20:05:32 2024
From: ru|pb@rr@d@@ @end|ng |rom @@po@pt (Rui Barradas)
Date: Mon, 1 Jul 2024 19:05:32 +0100
Subject: [R] 
 Create matrix with variable number of columns AND CREATE NAMES
 FOR THE COLUMNS
In-Reply-To: <DM6PR03MB50491491431A5556461E7BABE2D32@DM6PR03MB5049.namprd03.prod.outlook.com>
References: <DM6PR03MB50491491431A5556461E7BABE2D32@DM6PR03MB5049.namprd03.prod.outlook.com>
Message-ID: <cbf9861a-2d11-4fb9-86c4-db6387b71af1@sapo.pt>

?s 16:54 de 01/07/2024, Sorkin, John escreveu:
> #I am trying to write code that will create a matrix with a variable number of columns where the #number of columns is 1+Grps
> #I can do this:
> NSims <- 4
> Grps <- 5
> DiffMeans <- matrix(nrow=NSims,ncol=1+Grps)
> DiffMeans
> 
> #I have a problem when I try to name the columns of the matrix. I want the first column to be NSims, #and the other columns to be something like Value1, Value2, . . . Valuen where N=Grps
> 
> # I wrote a function to build a list of length Grps
> createValuelist <- function(num_elements) {
>    for (i in 1:num_elements) {
>      cat("Item", i, "\n", sep = "")
>    }
> }
> createValuelist(Grps)
> 
> # When I try to assign column names I receive an error:
> #Error in dimnames(DiffMeans) <- list(NULL, c("NSim", createValuelist(Grps))) :
> # length of 'dimnames' [2] not equal to array extent
> dimnames(DiffMeans) <- list(NULL,c("NSim",createValuelist(Grps)))
> DiffMeans
> 
> # Thank you for your help!
> 
> 
> John David Sorkin M.D., Ph.D.
> Professor of Medicine, University of Maryland School of Medicine;
> Associate Director for Biostatistics and Informatics, Baltimore VA Medical Center Geriatrics Research, Education, and Clinical Center;
> PI?Biostatistics and Informatics Core, University of Maryland School of Medicine Claude D. Pepper Older Americans Independence Center;
> Senior Statistician University of Maryland Center for Vascular Research;
> 
> Division of Gerontology and Paliative Care,
> 10 North Greene Street
> GRECC (BT/18/GR)
> Baltimore, MD 21201-1524
> Cell phone 443-418-5382
> 
> 
> 
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
Hello,

Sorry for my first answer, I thought you only wanted to name the matrix 
columns. After reading the OP again, this time actually reading it, I 
realized you also want to create the matrix. This is even in the 
question title line :(.



create_matrix <- function(nsims, ngrps, First = "NSims", Prefix = "Value") {
   # could also be paste0(Prefix, seq_len(ngrps))
   grp_names <- sprintf("%s%d", Prefix, seq_len(ngrps))
   nms <- c(First, grp_names)
   matrix(nrow = nsims, ncol = 1L + ngrps, dimnames = list(NULL, nms))
}

NSims <- 4
Grps <- 5
create_matrix(NSims, Grps)
#>      NSims Value1 Value2 Value3 Value4 Value5
#> [1,]    NA     NA     NA     NA     NA     NA
#> [2,]    NA     NA     NA     NA     NA     NA
#> [3,]    NA     NA     NA     NA     NA     NA
#> [4,]    NA     NA     NA     NA     NA     NA



Hope this helps,

Rui Barradas


-- 
Este e-mail foi analisado pelo software antiv?rus AVG para verificar a presen?a de v?rus.
www.avg.com


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Mon Jul  1 20:50:09 2024
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Mon, 01 Jul 2024 11:50:09 -0700
Subject: [R] 
 Create matrix with variable number of columns AND CREATE NAMES
 FOR THE COLUMNS
In-Reply-To: <DM6PR03MB50491491431A5556461E7BABE2D32@DM6PR03MB5049.namprd03.prod.outlook.com>
References: <DM6PR03MB50491491431A5556461E7BABE2D32@DM6PR03MB5049.namprd03.prod.outlook.com>
Message-ID: <F4ADB92D-420E-41C8-9EBB-119C1CCC397E@dcn.davis.ca.us>

I think you should reconsider your goal. Matrices must have all elements of the same type, and in this case you seem to be trying to mix a number of something (integer) with mean values (double). This would normally be stored together in a data frame or separately in a vector for counts and a matrix for means.

If you are just thinking about data presentation, a data frame would be a better choice than a single matrix.

On July 1, 2024 8:54:21 AM PDT, "Sorkin, John" <jsorkin at som.umaryland.edu> wrote:
>#I am trying to write code that will create a matrix with a variable number of columns where the #number of columns is 1+Grps
>#I can do this:
>NSims <- 4
>Grps <- 5
>DiffMeans <- matrix(nrow=NSims,ncol=1+Grps)
>DiffMeans
>
>#I have a problem when I try to name the columns of the matrix. I want the first column to be NSims, #and the other columns to be something like Value1, Value2, . . . Valuen where N=Grps
>
># I wrote a function to build a list of length Grps
>createValuelist <- function(num_elements) {
>  for (i in 1:num_elements) {
>    cat("Item", i, "\n", sep = "")
>  }
>}
>createValuelist(Grps)
>
># When I try to assign column names I receive an error:
>#Error in dimnames(DiffMeans) <- list(NULL, c("NSim", createValuelist(Grps))) : 
># length of 'dimnames' [2] not equal to array extent
>dimnames(DiffMeans) <- list(NULL,c("NSim",createValuelist(Grps)))
>DiffMeans
>
># Thank you for your help!
>
>
>John David Sorkin M.D., Ph.D.
>Professor of Medicine, University of Maryland School of Medicine;
>Associate Director for Biostatistics and Informatics, Baltimore VA Medical Center Geriatrics Research, Education, and Clinical Center;?
>PI?Biostatistics and Informatics Core, University of Maryland School of Medicine Claude D. Pepper Older Americans Independence Center;
>Senior Statistician University of Maryland Center for Vascular Research;
>
>Division of Gerontology and Paliative Care,
>10 North Greene Street
>GRECC (BT/18/GR)
>Baltimore, MD 21201-1524
>Cell phone 443-418-5382
>
>
>
>______________________________________________
>R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>https://stat.ethz.ch/mailman/listinfo/r-help
>PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
>and provide commented, minimal, self-contained, reproducible code.

-- 
Sent from my phone. Please excuse my brevity.


From tuech|er @end|ng |rom gmx@@t  Mon Jul  1 20:55:07 2024
From: tuech|er @end|ng |rom gmx@@t (Heinz Tuechler)
Date: Mon, 1 Jul 2024 20:55:07 +0200
Subject: [R] 
 Create matrix with variable number of columns AND CREATE NAMES
 FOR THE COLUMNS
In-Reply-To: <DM6PR03MB50491491431A5556461E7BABE2D32@DM6PR03MB5049.namprd03.prod.outlook.com>
References: <DM6PR03MB50491491431A5556461E7BABE2D32@DM6PR03MB5049.namprd03.prod.outlook.com>
Message-ID: <13d92624-cdc5-9cf2-60a5-f76285d93723@gmx.at>

Sorkin, John wrote/hat geschrieben on/am 01.07.2024 17:54:
> #I am trying to write code that will create a matrix with a variable number of columns where the #number of columns is 1+Grps
> #I can do this:
> NSims <- 4
> Grps <- 5
> DiffMeans <- matrix(nrow=NSims,ncol=1+Grps)
> DiffMeans
>
> #I have a problem when I try to name the columns of the matrix. I want the first column to be NSims, #and the other columns to be something like Value1, Value2, . . . Valuen where N=Grps
>
> # I wrote a function to build a list of length Grps
> createValuelist <- function(num_elements) {
>   for (i in 1:num_elements) {
>     cat("Item", i, "\n", sep = "")
>   }
> }
> createValuelist(Grps)
>
> # When I try to assign column names I receive an error:
> #Error in dimnames(DiffMeans) <- list(NULL, c("NSim", createValuelist(Grps))) :
> # length of 'dimnames' [2] not equal to array extent
> dimnames(DiffMeans) <- list(NULL,c("NSim",createValuelist(Grps)))
> DiffMeans
>
> # Thank you for your help!
>
>
> John David Sorkin M.D., Ph.D.
> Professor of Medicine, University of Maryland School of Medicine;
> Associate Director for Biostatistics and Informatics, Baltimore VA Medical Center Geriatrics Research, Education, and Clinical Center;
> PI Biostatistics and Informatics Core, University of Maryland School of Medicine Claude D. Pepper Older Americans Independence Center;
> Senior Statistician University of Maryland Center for Vascular Research;
>
> Division of Gerontology and Paliative Care,
> 10 North Greene Street
> GRECC (BT/18/GR)
> Baltimore, MD 21201-1524
> Cell phone 443-418-5382
>
maybe:
NSims <- 4
Grps <- 5
DiffMeans <-
     matrix(nrow=NSims,ncol=1+Grps,
            dimnames=list(NULL, c('Nsimn', paste('Item', 1:Grps, sep=''))))
DiffMeans

best,
Heinz

>
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>


From @@uer @end|ng |rom |mb|@un|-he|de|berg@de  Mon Jul  1 15:33:43 2024
From: @@uer @end|ng |rom |mb|@un|-he|de|berg@de (Sauer, Lukas Daniel)
Date: Mon, 1 Jul 2024 13:33:43 +0000
Subject: [R] summaryRprof: Unexpected unit for memory profiling
Message-ID: <0ead849446304c87ac70ee9cdc492976@imbi.uni-heidelberg.de>

Hello,

I am profiling memory usage using utils::Rprof() and subsequently summarizing the profile using utils::summaryRprof(). According to the documentation ?summaryRprof, the option `memory = "both"` reports "memory consumption in Mb in addition to the timings", i.e. the unit is megabytes. However, looking at the source code (https://github.com/wch/r-source/blob/18652de8890d89563b923ff58b45ccb04d9955fe/src/library/utils/R/summRprof.R#L170) suggests that memory is reported in mebibytes (division by 1048576 and not by 100000). This is in line with the following minimal example:

use_mb <- function(){a <- runif(1000000)}
use_mib <- function(){b <- runif(1024^2)}
Rprof("Rprof.out", memory.profiling=TRUE)
use_mb()
use_mib()
Rprof(NULL)
summaryRprof("Rprof.out", memory="both")

Do not source this code, but execute it line by line. This example returns the output:

$by.self
        self.time self.pct total.time total.pct mem.total
"runif"      0.04      100       0.04       100      15.6

$by.total
          total.time total.pct mem.total self.time self.pct
"runif"         0.04       100      15.6      0.04      100
"use_mb"        0.02        50       7.6      0.00        0
"use_mib"       0.02        50       8.0      0.00        0

$sample.interval
[1] 0.02

$sampling.time
[1] 0.04

The example was run under:

R version 4.4.0 (2024-04-24 ucrt)
Platform: x86_64-w64-mingw32/x64
Running under: Windows 11 x64 (build 22631)

If the unit were megabytes, I would expect mem.total to be 16.4, 8.0, and 8.4 -- but rather it is 15.6, 7.6, and 8.0. Do you agree that this behavior is unexpected or did I overlook something? If yes, I will file a bug report and suggest that the documentation is changed to "memory consumption in MiB in addition to the timings".

Best regards,

Lukas D Sauer
Biometrician
Institute of Medical Biometry

Heidelberg University Hospital | Im Neuenheimer Feld 130.3 | D-69120 Heidelberg
Tel. +49 6221 56-35036 | Fax. +49 6221 56-4195 | E-Mail: sauer at imbi.uni-heidelberg.de
biometrie.uni-heidelberg.de | twitter.com/imbi_heidelberg


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Tue Jul  2 09:05:53 2024
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Tue, 02 Jul 2024 00:05:53 -0700
Subject: [R] summaryRprof: Unexpected unit for memory profiling
In-Reply-To: <0ead849446304c87ac70ee9cdc492976@imbi.uni-heidelberg.de>
References: <0ead849446304c87ac70ee9cdc492976@imbi.uni-heidelberg.de>
Message-ID: <EBF51C4A-6225-419C-B7B7-2EA1B7BB6E09@dcn.davis.ca.us>

There was a time when people pretty much ignored the distinction between MB and MiB in computer applications, and using the binary version was usually assumed because, well, this _is_ memory we are measuring. I think this is a leftover from that time.

On July 1, 2024 6:33:43 AM PDT, "Sauer, Lukas Daniel" <sauer at imbi.uni-heidelberg.de> wrote:
>Hello,
>
>I am profiling memory usage using utils::Rprof() and subsequently summarizing the profile using utils::summaryRprof(). According to the documentation ?summaryRprof, the option `memory = "both"` reports "memory consumption in Mb in addition to the timings", i.e. the unit is megabytes. However, looking at the source code (https://github.com/wch/r-source/blob/18652de8890d89563b923ff58b45ccb04d9955fe/src/library/utils/R/summRprof.R#L170) suggests that memory is reported in mebibytes (division by 1048576 and not by 100000). This is in line with the following minimal example:
>
>use_mb <- function(){a <- runif(1000000)}
>use_mib <- function(){b <- runif(1024^2)}
>Rprof("Rprof.out", memory.profiling=TRUE)
>use_mb()
>use_mib()
>Rprof(NULL)
>summaryRprof("Rprof.out", memory="both")
>
>Do not source this code, but execute it line by line. This example returns the output:
>
>$by.self
>        self.time self.pct total.time total.pct mem.total
>"runif"      0.04      100       0.04       100      15.6
>
>$by.total
>          total.time total.pct mem.total self.time self.pct
>"runif"         0.04       100      15.6      0.04      100
>"use_mb"        0.02        50       7.6      0.00        0
>"use_mib"       0.02        50       8.0      0.00        0
>
>$sample.interval
>[1] 0.02
>
>$sampling.time
>[1] 0.04
>
>The example was run under:
>
>R version 4.4.0 (2024-04-24 ucrt)
>Platform: x86_64-w64-mingw32/x64
>Running under: Windows 11 x64 (build 22631)
>
>If the unit were megabytes, I would expect mem.total to be 16.4, 8.0, and 8.4 -- but rather it is 15.6, 7.6, and 8.0. Do you agree that this behavior is unexpected or did I overlook something? If yes, I will file a bug report and suggest that the documentation is changed to "memory consumption in MiB in addition to the timings".
>
>Best regards,
>
>Lukas D Sauer
>Biometrician
>Institute of Medical Biometry
>
>Heidelberg University Hospital | Im Neuenheimer Feld 130.3 | D-69120 Heidelberg
>Tel. +49 6221 56-35036 | Fax. +49 6221 56-4195 | E-Mail: sauer at imbi.uni-heidelberg.de
>biometrie.uni-heidelberg.de | twitter.com/imbi_heidelberg
>
>______________________________________________
>R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>https://stat.ethz.ch/mailman/listinfo/r-help
>PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
>and provide commented, minimal, self-contained, reproducible code.

-- 
Sent from my phone. Please excuse my brevity.


From tr|ng @end|ng |rom gvdnet@dk  Wed Jul  3 10:13:59 2024
From: tr|ng @end|ng |rom gvdnet@dk (Troels Ring)
Date: Wed, 3 Jul 2024 10:13:59 +0200
Subject: [R] simple problem with unquoting argument
Message-ID: <5bd7164c-315e-458b-913a-164dfd336d4b@gvdnet.dk>

Hi? friends - I'm in problems finding out how to unquote - I have a 
series of vectors named adds1....adds11 and need to e.g. find the sum of 
each of them

So I try

SS <- c()

for (i in 1:11) {

e <- paste("adds",i,sep="")

SS[i]? <- sum(xx(e)) }

Now e looks right - but I have been unable to find out how to get the 
string e converted to the proper argument for sum()? - i.e. what? is 
function xx?

All best wishes
Troels Ring, Aalborg, Denmark


From ru|pb@rr@d@@ @end|ng |rom @@po@pt  Wed Jul  3 10:24:21 2024
From: ru|pb@rr@d@@ @end|ng |rom @@po@pt (Rui Barradas)
Date: Wed, 3 Jul 2024 09:24:21 +0100
Subject: [R] simple problem with unquoting argument
In-Reply-To: <5bd7164c-315e-458b-913a-164dfd336d4b@gvdnet.dk>
References: <5bd7164c-315e-458b-913a-164dfd336d4b@gvdnet.dk>
Message-ID: <26ef9ed0-e712-4847-8c09-c6fbd17a31c6@sapo.pt>

?s 09:13 de 03/07/2024, Troels Ring escreveu:
> Hi? friends - I'm in problems finding out how to unquote - I have a 
> series of vectors named adds1....adds11 and need to e.g. find the sum of 
> each of them
> 
> So I try
> 
> SS <- c()
> 
> for (i in 1:11) {
> 
> e <- paste("adds",i,sep="")
> 
> SS[i]? <- sum(xx(e)) }
> 
> Now e looks right - but I have been unable to find out how to get the 
> string e converted to the proper argument for sum()? - i.e. what? is 
> function xx?
> 
> All best wishes
> Troels Ring, Aalborg, Denmark
> 
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide 
> http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
Hello,

Function xx is ?get or mget (same help page).
You can get the vectors adds all in one instruction with mget or one at 
a time with get.


adds1 <- 1:10
adds2 <- 2:10
adds3 <- 3:10
adds4 <- 4:10
adds5 <- 5:10

# create SS with the required length beforehand
SS <- numeric(5L)
for (i in 1:5) {
   e <- paste("adds",i,sep="")
   SS[i]  <- sum(get(e))
}
SS
#> [1] 55 54 52 49 45


Or all in one instruction with the assistance of ?ls.



# ls(pattern = "^adds") |> mget() |> lapply(sum)
ls(pattern = "^adds") |> mget() |> sapply(sum)
#> adds1 adds2 adds3 adds4 adds5
#>    55    54    52    49    45


Hope this helps,

Rui Barradas


-- 
Este e-mail foi analisado pelo software antiv?rus AVG para verificar a presen?a de v?rus.
www.avg.com


From |kry|ov @end|ng |rom d|@root@org  Wed Jul  3 10:25:02 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Wed, 3 Jul 2024 11:25:02 +0300
Subject: [R] simple problem with unquoting argument
In-Reply-To: <5bd7164c-315e-458b-913a-164dfd336d4b@gvdnet.dk>
References: <5bd7164c-315e-458b-913a-164dfd336d4b@gvdnet.dk>
Message-ID: <20240703112502.2fd088f3@Tarkus>

? Wed, 3 Jul 2024 10:13:59 +0200
Troels Ring <tring at gvdnet.dk> ?????:

> Now e looks right - but I have been unable to find out how to get the 
> string e converted to the proper argument for sum()? - i.e. what? is 
> function xx?

get(e) will return the value of the variable with the name stored in
the variable e.

A more idiomatic variant will require more changes:

1. Create the "adds" variable as a list, so that it could contain other
arbitrary R values:

adds <- list()

2. Instead of assigning adds1 <- something(), adds2 <-
something_else(), ..., assign to the elements of the list:

adds[[1]] <- something()
adds[[2]] <- something_else()
...

3. Now you can use the same syntax to access the elements of the list:

SS[i] <- sum(adds[[i]])

As a bonus, you can use the "apply" family of R functions that will
perform the loop for you: instead of SS <- c(); for (i in 1:11) SS[i]
<- sum(adds[[i]]) you can write

SS <- vapply(adds, sum, numeric(1))

...and it will perform the same loop inside it, verifying each time
that sum(adds[[i]]) returns a single number.

-- 
Best regards,
Ivan

P.S. I'm sorry for letting our project lapse.


From tr|ng @end|ng |rom gvdnet@dk  Wed Jul  3 16:16:23 2024
From: tr|ng @end|ng |rom gvdnet@dk (Troels Ring)
Date: Wed, 3 Jul 2024 16:16:23 +0200
Subject: [R] simple problem with unquoting argument
In-Reply-To: <20240703112502.2fd088f3@Tarkus>
References: <5bd7164c-315e-458b-913a-164dfd336d4b@gvdnet.dk>
 <20240703112502.2fd088f3@Tarkus>
Message-ID: <8364b241-9166-4b5a-bf9a-499a412e0e9e@gvdnet.dk>

Dear Ivan and Rui - thanks a lot for the effective help.

All best wishes Troels

Den 03-07-2024 kl. 10:25 skrev Ivan Krylov:
> ? Wed, 3 Jul 2024 10:13:59 +0200
> Troels Ring <tring at gvdnet.dk> ?????:
>
>> Now e looks right - but I have been unable to find out how to get the
>> string e converted to the proper argument for sum()? - i.e. what? is
>> function xx?
> get(e) will return the value of the variable with the name stored in
> the variable e.
>
> A more idiomatic variant will require more changes:
>
> 1. Create the "adds" variable as a list, so that it could contain other
> arbitrary R values:
>
> adds <- list()
>
> 2. Instead of assigning adds1 <- something(), adds2 <-
> something_else(), ..., assign to the elements of the list:
>
> adds[[1]] <- something()
> adds[[2]] <- something_else()
> ...
>
> 3. Now you can use the same syntax to access the elements of the list:
>
> SS[i] <- sum(adds[[i]])
>
> As a bonus, you can use the "apply" family of R functions that will
> perform the loop for you: instead of SS <- c(); for (i in 1:11) SS[i]
> <- sum(adds[[i]]) you can write
>
> SS <- vapply(adds, sum, numeric(1))
>
> ...and it will perform the same loop inside it, verifying each time
> that sum(adds[[i]]) returns a single number.
>


From r-m@||@ @end|ng |rom erez@h@org  Fri Jul  5 13:35:40 2024
From: r-m@||@ @end|ng |rom erez@h@org (Erez Shomron)
Date: Fri, 05 Jul 2024 14:35:40 +0300
Subject: [R] Bug? plot.formula does need support plot.first / plot.last
 param in plot.default
Message-ID: <a9dd2c4c-953d-4d3b-9480-06bc3454df7f@app.fastmail.com>

Is the following a bug in your opinion? I think so.

This works as expected:

```
with(mtcars, plot(wt, mpg, plot.first = {
    plot.window(range(wt), range(mpg))
    arrows(3, 15, 4, 30)
}))
```

This does not.

```
plot(mpg ~ wt, data = mtcars, plot.first = {
    plot.window(range(wt), range(mpg))
    arrows(3, 15, 4, 30)
})
```

With error:
```
Error in arrows(3, 15, 4, 30) : plot.new has not been called yet
```

The second example should work.

>From the docs:

?plot.formula
"     For the ?plot? method the formula can be of the form ?~ z + y +
     z?: the variables specified on the right-hand side are collected
     into a data frame, subsetted if specified, and displayed by
     ?plot.data.frame?.
"

?plot.data.frame
"     ...: further arguments to ?stripchart?, ?plot.default? or ?pairs?.
"

And plot.default has both plot.first and plot.last

It seems very arbitrary you can't use these parameters with the plot.formula method specifically.

> sessionInfo()
R version 4.4.1 (2024-06-14)
Platform: x86_64-suse-linux-gnu
Running under: openSUSE Tumbleweed
[...]


From murdoch@dunc@n @end|ng |rom gm@||@com  Sat Jul  6 00:05:50 2024
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 5 Jul 2024 18:05:50 -0400
Subject: [R] Bug? plot.formula does need support plot.first / plot.last
 param in plot.default
In-Reply-To: <a9dd2c4c-953d-4d3b-9480-06bc3454df7f@app.fastmail.com>
References: <a9dd2c4c-953d-4d3b-9480-06bc3454df7f@app.fastmail.com>
Message-ID: <83c5f0f0-8193-436b-94b5-d4570d1db03f@gmail.com>

That definitely looks like a bug, but not one that anyone will be eager 
to fix.  It's very old code that tried to be clever, and that's the 
hardest kind of code to fix.

Remember Kernighan's Law:  "Everyone knows that debugging is twice as 
hard as writing a program in the first place. So if you?re as clever as 
you can be when you write it, how will you ever debug it?"

Duncan Murdoch

On 2024-07-05 7:35 a.m., Erez Shomron wrote:
> Is the following a bug in your opinion? I think so.
> 
> This works as expected:
> 
> ```
> with(mtcars, plot(wt, mpg, plot.first = {
>      plot.window(range(wt), range(mpg))
>      arrows(3, 15, 4, 30)
> }))
> ```
> 
> This does not.
> 
> ```
> plot(mpg ~ wt, data = mtcars, plot.first = {
>      plot.window(range(wt), range(mpg))
>      arrows(3, 15, 4, 30)
> })
> ```
> 
> With error:
> ```
> Error in arrows(3, 15, 4, 30) : plot.new has not been called yet
> ```
> 
> The second example should work.
> 
>  From the docs:
> 
> ?plot.formula
> "     For the ?plot? method the formula can be of the form ?~ z + y +
>       z?: the variables specified on the right-hand side are collected
>       into a data frame, subsetted if specified, and displayed by
>       ?plot.data.frame?.
> "
> 
> ?plot.data.frame
> "     ...: further arguments to ?stripchart?, ?plot.default? or ?pairs?.
> "
> 
> And plot.default has both plot.first and plot.last
> 
> It seems very arbitrary you can't use these parameters with the plot.formula method specifically.
> 
>> sessionInfo()
> R version 4.4.1 (2024-06-14)
> Platform: x86_64-suse-linux-gnu
> Running under: openSUSE Tumbleweed
> [...]
> 
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.


From r-m@||@ @end|ng |rom erez@h@org  Sat Jul  6 08:15:56 2024
From: r-m@||@ @end|ng |rom erez@h@org (Erez Shomron)
Date: Sat, 06 Jul 2024 09:15:56 +0300
Subject: [R] Bug? plot.formula does need support plot.first / plot.last
 param in plot.default
In-Reply-To: <83c5f0f0-8193-436b-94b5-d4570d1db03f@gmail.com>
References: <a9dd2c4c-953d-4d3b-9480-06bc3454df7f@app.fastmail.com>
 <83c5f0f0-8193-436b-94b5-d4570d1db03f@gmail.com>
Message-ID: <453eb9fd-0a17-4b94-80c2-f679c0807dcc@app.fastmail.com>

Thanks for your answer.

Should I report in Bugzilla at least so it's tracked?

I can point that the issue is with line 6 of the function body:
```
    dots <- lapply(m$..., eval, md, eframe)
```

I assume the intention was to evaluate the arguments with the context of data passed to the function.
But the expression in panel.first / panel.last gets evaluated before plot.new is called (as the error indicates).

I believe the fix would be to somehow not evaluate line 6, or replace with `dots <- m$...`, and when `plot` is later called, to somehow evaluate it with the data passed to the function. I tried to add `envir` argument to `do.call` but it does not work as I expected.

I would've liked to contribute a patch but my R knowledge is limited and and this `plot.formula` code is a bit of my head frankly.

Kindly,
Erez


On Sat, Jul 6, 2024, at 1:05 AM, Duncan Murdoch wrote:
> That definitely looks like a bug, but not one that anyone will be eager 
> to fix.  It's very old code that tried to be clever, and that's the 
> hardest kind of code to fix.
> 
> Remember Kernighan's Law:  "Everyone knows that debugging is twice as 
> hard as writing a program in the first place. So if you?re as clever as 
> you can be when you write it, how will you ever debug it?"
> 
> Duncan Murdoch
> 
> On 2024-07-05 7:35 a.m., Erez Shomron wrote:
> > Is the following a bug in your opinion? I think so.
> > 
> > This works as expected:
> > 
> > ```
> > with(mtcars, plot(wt, mpg, plot.first = {
> >      plot.window(range(wt), range(mpg))
> >      arrows(3, 15, 4, 30)
> > }))
> > ```
> > 
> > This does not.
> > 
> > ```
> > plot(mpg ~ wt, data = mtcars, plot.first = {
> >      plot.window(range(wt), range(mpg))
> >      arrows(3, 15, 4, 30)
> > })
> > ```
> > 
> > With error:
> > ```
> > Error in arrows(3, 15, 4, 30) : plot.new has not been called yet
> > ```
> > 
> > The second example should work.
> > 
> >  From the docs:
> > 
> > ?plot.formula
> > "     For the ?plot? method the formula can be of the form ?~ z + y +
> >       z?: the variables specified on the right-hand side are collected
> >       into a data frame, subsetted if specified, and displayed by
> >       ?plot.data.frame?.
> > "
> > 
> > ?plot.data.frame
> > "     ...: further arguments to ?stripchart?, ?plot.default? or ?pairs?.
> > "
> > 
> > And plot.default has both plot.first and plot.last
> > 
> > It seems very arbitrary you can't use these parameters with the plot.formula method specifically.
> > 
> >> sessionInfo()
> > R version 4.4.1 (2024-06-14)
> > Platform: x86_64-suse-linux-gnu
> > Running under: openSUSE Tumbleweed
> > [...]
> > 
> > ______________________________________________
> > R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> > https://stat.ethz.ch/mailman/listinfo/r-help
> > PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> > and provide commented, minimal, self-contained, reproducible code.
> 
> 


From @te|@no@@o||@ @end|ng |rom reg|one@m@rche@|t  Sat Jul  6 15:02:48 2024
From: @te|@no@@o||@ @end|ng |rom reg|one@m@rche@|t (Stefano Sofia)
Date: Sat, 6 Jul 2024 13:02:48 +0000
Subject: [R] add only the 1st of May with POSIXct
In-Reply-To: <878qztdtz9.fsf@enricoschumann.net>
References: <e558a289b0ee415e83939fc5e9bfdb41@regione.marche.it>,
 <878qztdtz9.fsf@enricoschumann.net>
Message-ID: <e566396a3e7649c8a71a20c2558afff5@regione.marche.it>

Sorry for the delay of my answer.

Enrico and Rui, thank you for your help.

Both solutions worked well, in particular Enrico's hint is very easy to implement.


Thank you

Stefano


         (oo)
--oOO--( )--OOo--------------------------------------
Stefano Sofia PhD
Civil Protection - Marche Region - Italy
Meteo Section
Snow Section
Via del Colle Ameno 5
60126 Torrette di Ancona, Ancona (AN)
Uff: +39 071 806 7743
E-mail: stefano.sofia at regione.marche.it
---Oo---------oO----------------------------------------


________________________________
Da: Enrico Schumann <es at enricoschumann.net>
Inviato: mercoled? 29 maggio 2024 08:15
A: Stefano Sofia
Cc: r-help at R-project.org
Oggetto: Re: [R] add only the 1st of May with POSIXct

[Non ricevi spesso messaggi di posta elettronica da es at enricoschumann.net. Per informazioni sull'importanza di questo fatto, visita https://aka.ms/LearnAboutSenderIdentification.]

On Tue, 28 May 2024, Stefano Sofia writes:

> Dear R-list users,
>
> From an initial and a final date I create a sequence of days using POSIXct.
>
> If this interval covers all or only in part the months from May to October, I need to get rid of the days from the 2nd of May to the 31st of October:
>
>
> a <- as.POSIXct("2002-11-01", format = "%Y-%m-%d", tz="Etc/GMT-1")
>
> b <- as.POSIXct("2004-06-01", format = "%Y-%m-%d", tz="Etc/GMT-1")
>
> mydf <- data.frame(data_POSIX=seq(as.POSIXct(paste(format(a, "%Y-%m-%d"), "09:00:00", sep=""), format="%Y-%m-%d %H:%M:%S", tz="Etc/GMT-1"), as.POSIXct(paste(format(b, "%Y-%m-%d"), "09:00:00", sep=""), format="%Y-%m-%d %H:%M:%S", tz="Etc/GMT-1"), by="1 day"))
>
>
> If I execute
>
> as.data.frame(mydf[format(mydf$data_POSIX,"%m") %in% c("11", "12", "01", "02", "03", "04"), ])
>
> the interval will be
>
> from 2002-11-01 09:00:00 to 2003-04-30 09:00:00
>
> and from 2003-11-01 09:00:00 to 2004-04-30 09:00:00
>
>
> but I need also 2003-05-01 09:00:00 and 2004-05-01 09:00:00
>
>
> How can I solve this problem?
>
>
> Thank you for your attention and your help
>
> Stefano
>

I think this could be simplified a bit:

    a <- as.POSIXct("2002-11-01 09", format = "%Y-%m-%d %H", tz="Etc/GMT-1")
    b <- as.POSIXct("2004-06-01 09", format = "%Y-%m-%d %H", tz="Etc/GMT-1")

Create your sequence:

    S <- seq(a, b , by = "1 day")
    month.day <- format(S, "%m-%d")

Now subset S for those days that you want:

    S[month.day <= "05-01" | month.day > "10-31"]


--
Enrico Schumann
Lucerne, Switzerland
https://eur02.safelinks.protection.outlook.com/?url=http%3A%2F%2Fenricoschumann.net%2F&data=05%7C02%7Cstefano.sofia%40regione.marche.it%7Cfb03eb5bf2e24b4b76b408dc7fa6b98e%7C295eaa1431a14b09bfe65a338b679f60%7C0%7C0%7C638525601265102204%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=46TUwFWwpLcdtZGARpDkhnuHhgZ546khJI%2FONPeYXe4%3D&reserved=0

________________________________

AVVISO IMPORTANTE: Questo messaggio di posta elettronica pu? contenere informazioni confidenziali, pertanto ? destinato solo a persone autorizzate alla ricezione. I messaggi di posta elettronica per i client di Regione Marche possono contenere informazioni confidenziali e con privilegi legali. Se non si ? il destinatario specificato, non leggere, copiare, inoltrare o archiviare questo messaggio. Se si ? ricevuto questo messaggio per errore, inoltrarlo al mittente ed eliminarlo completamente dal sistema del proprio computer. Ai sensi dell'art. 6 della DGR n. 1394/2008 si segnala che, in caso di necessit? ed urgenza, la risposta al presente messaggio di posta elettronica pu? essere visionata da persone estranee al destinatario.
IMPORTANT NOTICE: This e-mail message is intended to be received only by persons entitled to receive the confidential information it may contain. E-mail messages to clients of Regione Marche may contain information that is confidential and legally privileged. Please do not read, copy, forward, or store this message unless you are an intended recipient of it. If you have received this message in error, please forward it to the sender and delete it completely from your computer system.

	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Sat Jul  6 16:24:38 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Sat, 6 Jul 2024 17:24:38 +0300
Subject: [R] Bug? plot.formula does need support plot.first / plot.last
 param in plot.default
In-Reply-To: <a9dd2c4c-953d-4d3b-9480-06bc3454df7f@app.fastmail.com>
References: <a9dd2c4c-953d-4d3b-9480-06bc3454df7f@app.fastmail.com>
Message-ID: <20240706172438.2b4340c5@parabola>

? Fri, 05 Jul 2024 14:35:40 +0300
"Erez Shomron" <r-mails at erezsh.org> ?????:

> This works as expected:

> with(mtcars, plot(wt, mpg, plot.first = {
>     plot.window(range(wt), range(mpg))
>     arrows(3, 15, 4, 30)
> }))

I think you meant panel.first, not plot.first. At least I cannot find
any mention of plot.first in the R source code. In this example,
plot.first ends up being an argument of an internal call from
plot.default() to plot.window(), which evaluates its ellipsis
arguments. If your plot.first expression returned a non-NULL value, you
would also have received a warning:

plot.window(0:1, 0:1, plot.first = message('hello'))
# hello
plot.window(0:1, 0:1, plot.first = 123)
# Warning message:
# In plot.window(0:1, 0:1, plot.first = 123) :
#   "plot.first" is not a graphical parameter

It is indeed documented that "passing [panel.first] from other ?plot?
methods may well not work since it may be evaluated too early". The
plot.formula method deliberately evaluates the arguments in the
ellipsis, and the workaround suggested in
https://bugs.r-project.org/show_bug.cgi?id=14591 doesn't help because
the expression is then evaluated in an undesired environment (parent
frame, not data).

You are correct that plot.formula tries to evaluate all its remaining
arguments in the context of the data passed to the method. In order for
the lazy evaluation to work, plot.formula would have to (1) know and
skip all such arguments by name on line 6, minding partial matching, (2)
rewrite them into the form evalq(original_argument_expression,
model_frame, parent_frame) so that they would be able to access both
the data and the variables visible in the frame of the caller, and (3)
give these expressions to do.call() in place of the original ones.

(1) sounds especially brittle since plot.formula() may dispatch to
other plot.* methods. Additionally, great care will need to be taken
not to break existing code that calls plot.formula, even if it's
already full of workarounds for plot.formula's behaviour.

-- 
Best regards,
Ivan


From r-m@||@ @end|ng |rom erez@h@org  Sat Jul  6 16:55:34 2024
From: r-m@||@ @end|ng |rom erez@h@org (Erez Shomron)
Date: Sat, 06 Jul 2024 17:55:34 +0300
Subject: [R] Bug? plot.formula does need support plot.first / plot.last
 param in plot.default
In-Reply-To: <20240706172438.2b4340c5@parabola>
References: <a9dd2c4c-953d-4d3b-9480-06bc3454df7f@app.fastmail.com>
 <20240706172438.2b4340c5@parabola>
Message-ID: <308fc620-a977-4c0d-a305-64ac660b32cf@app.fastmail.com>

Thank you Ivan,

Yes I meant `panel.first`.
I fumbled the title and the examples, but the end result is the same:

```
# Works
with(mtcars, plot(wt, mpg, panel.first = {
    arrows(3, 15, 4, 30)
}))

# Doesn't work
plot(mpg ~ wt, data = mtcars, panel.first = {
    arrows(3, 15, 4, 30)
})

```

I saw the bug reported 13 years ago after-the-fact, and the paragraph I missed for the manual entry.
Thanks for clarifying both.

I do think making these arguments lazy evaluate would be a welcome change. It's especially confusing for new R users trying to use base graphics to plot their linear model. But I also understand this would be low priority as user workaround is simple (don't use the formula method), and because of the testing effort that would be required.

Maybe a warning would be nice, telling users that `panel.first` and `panel.last` are evaluated before plotting. I think users would check `?plot` before `?plot.formula` and would not see any reason not to try and pass these arguments.

Kind Regards,
Erez

On Sat, Jul 6, 2024, at 5:24 PM, Ivan Krylov wrote:
> ? Fri, 05 Jul 2024 14:35:40 +0300
> "Erez Shomron" <r-mails at erezsh.org> ?????:
> 
> > This works as expected:
> 
> > with(mtcars, plot(wt, mpg, plot.first = {
> >     plot.window(range(wt), range(mpg))
> >     arrows(3, 15, 4, 30)
> > }))
> 
> I think you meant panel.first, not plot.first. At least I cannot find
> any mention of plot.first in the R source code. In this example,
> plot.first ends up being an argument of an internal call from
> plot.default() to plot.window(), which evaluates its ellipsis
> arguments. If your plot.first expression returned a non-NULL value, you
> would also have received a warning:
> 
> plot.window(0:1, 0:1, plot.first = message('hello'))
> # hello
> plot.window(0:1, 0:1, plot.first = 123)
> # Warning message:
> # In plot.window(0:1, 0:1, plot.first = 123) :
> #   "plot.first" is not a graphical parameter
> 
> It is indeed documented that "passing [panel.first] from other ?plot?
> methods may well not work since it may be evaluated too early". The
> plot.formula method deliberately evaluates the arguments in the
> ellipsis, and the workaround suggested in
> https://bugs.r-project.org/show_bug.cgi?id=14591 doesn't help because
> the expression is then evaluated in an undesired environment (parent
> frame, not data).
> 
> You are correct that plot.formula tries to evaluate all its remaining
> arguments in the context of the data passed to the method. In order for
> the lazy evaluation to work, plot.formula would have to (1) know and
> skip all such arguments by name on line 6, minding partial matching, (2)
> rewrite them into the form evalq(original_argument_expression,
> model_frame, parent_frame) so that they would be able to access both
> the data and the variables visible in the frame of the caller, and (3)
> give these expressions to do.call() in place of the original ones.
> 
> (1) sounds especially brittle since plot.formula() may dispatch to
> other plot.* methods. Additionally, great care will need to be taken
> not to break existing code that calls plot.formula, even if it's
> already full of workarounds for plot.formula's behaviour.
> 
> -- 
> Best regards,
> Ivan
> 


From @j|thr@m@yy@n @end|ng |rom y@hoo@co@|n  Mon Jul  8 07:05:28 2024
From: @j|thr@m@yy@n @end|ng |rom y@hoo@co@|n (Ajith R)
Date: Mon, 8 Jul 2024 05:05:28 +0000 (UTC)
Subject: [R] package spline - default value of Boundary.knots of ns
In-Reply-To: <541091075.64659.1719894647788@mail.yahoo.com>
References: <541091075.64659.1719894647788.ref@mail.yahoo.com>
 <541091075.64659.1719894647788@mail.yahoo.com>
Message-ID: <2137603183.1626716.1720415128149@mail.yahoo.com>

Dear Maintainer,


Thanks for the excellent package splines. I am writing this email to request you to consider a suggestion I have with regards to the function ns.


While trying to rework an example from a textbook, I couldn't call ns with appropriate arguments to reproduce the results. The package documentation also couldn't help me find the problem. Finally, I found a stack exchange question (https://stats.stackexchange.com/questions/588769/natural-splines-in-r-with-ns)? which helped me understand the problem - the default values of boundary knots are not useful. The problem is described in the stack exchange question, which I request you to kindly read.


My suggestion is to change the default value of the argument Boundary.knots to NULL and calculate its values from? the extreme values of the argument knots inside the function body if it is NULL and otherwise to keep whatever numerical value it is assigned at call.


I think it is more intuitive to the user to specify one set of knots assuming that its minimum and maximum values would be used as the knots beyond which regression would be linear rather than to know that the function automatically calculates boundary knots which are not appropriate and so he needs to override them.


Just so that I am clear, an example. Assume that my variable *alcohol*? has values from 1 to 100 and I want to specify natural splines at knots 20,40 and 60, expecting linearity would hold below 20 and above 60. Currently, I have to specify knots as 40 and boundary knots as 20 and 60 as?ns(alcohol , knots = c(40), Boundary.knots = c(20,60))

If I incorrectly assume that correct values of boundary knots are calculated by default, I will specify knots as 20,40 and 60 as ns(alcohol , knots = c(20,40,60)) and get incorrect values for boundary knots as 1 and 100. (I have done this and the stack exchange post shows that I am not alone).


Hope my suggestion will be considered,


Thanks,
ajith


From @nupty@g| @end|ng |rom gm@||@com  Tue Jul  9 12:46:43 2024
From: @nupty@g| @end|ng |rom gm@||@com (Anupam Tyagi)
Date: Tue, 9 Jul 2024 16:16:43 +0530
Subject: [R] Automatic Knot selection in Piecewise linear splines
Message-ID: <CAFL9eukUVQzjkmY2fXiLH5LFbySusU6qZqrCd1dMxRHOFZBgFg@mail.gmail.com>

How can I do automatic knot selection while fitting piecewise linear
splines to two variables x and y? Which package to use to do it simply? I
also want to visualize the splines (and the scatter plot) with a graph.

Anupam

	[[alternative HTML version deleted]]


From |ter|emez @end|ng |rom e@k|@eh|r@edu@tr  Tue Jul  9 15:02:17 2024
From: |ter|emez @end|ng |rom e@k|@eh|r@edu@tr (Levent TERLEMEZ)
Date: Tue, 9 Jul 2024 13:02:17 +0000
Subject: [R] Weird R Studio behaviour...
Message-ID: <D8A08C72-70E9-4FB9-AACB-342AF657A944@contoso.com>

Hi,

Have a nice week. First of all, I know this is not R Studio forum but I want to ask here first, if you all do not mind. Well, I am away from my computer right now but, I have a strange problem (at least to me). My script worked perfectly for a year, and today, suddenly stop working because R Studio begins to warn me about illegal characters in the script.

System is on W 10, and R 3.4.1 is working with R Studio. R Studio is updated today to the latest one because of this problem with the hope of resolving the problem (but no luck) and they are used as their default installation settings. Anyway, the problem example may not be repoducable right now but if it is, I can give detailed one later.

While the original working code is this (there is no synax error, too in the code because it was working perfectly until today before updating R Studio, error also came out before this update as I mensioned before);

legend(c("Kapan??",""20 G?nl?k,"50 G?nl?k"),col=c("black"...

The warning is this;

Error: unexpected symbol inside:
" Encoding(kill3) <- "latin1" legend(c(kill1,kill2,"50 G?nl?k"),col=c("black"? and can be solved when converted ??? to ?u?. Addition to this another solution (at least for me) is this;

kill1<-"Kapan??"
Encoding(kill1) <- "UTF-8" (these two statements are not needed but fort he sake of code integrity, is applied to it, too. If kill1 is converted to latin1, this time it is broken)
kill2<-"22 G?nl?k MA"
Encoding(kill2) <- "latin1"
kill3<-"50 G?nl?k MA"
Encoding(kill3) <- "latin1"

And also it is set to ?ASK? and always ?UTF-8? is selected.

But, I also wonder why today and what changed so R Studio stops suddenly running the script? I can not following up the changes anymore as used to be and if this is a character set problem, it is coming back again and again. What is the permenant solution of this? This is like an endless problem?

With my best regards and thanks for your patience?.

Levent Terlemez.



________________________________
YASAL UYARI: Bu e-postan?n i?erdi?i bilgiler (ekleri de dahil olmak ?zere) gizlidir. Sahibinin onay? olmaks?z?n i?eri?i kopyalanamaz, ???nc? ki?ilere a??klanamaz veya iletilemez . Bu mesaj?n g?nderilmek istendi?i ki?i de?ilseniz (ya da bu e-postay? yanl??l?kla ald?ysan?z), l?tfen yollayan ki?iyi haberdar ediniz ve mesaj? sisteminizden derhal siliniz. Eski?ehir Teknik ?niversitesi, bu mesaj?n i?erdi?i bilgilerin do?rulu?u veya eksiksiz oldu?u konusunda bir garanti vermemektedir. Bu nedenle, bilgilerin ne ?ekilde olursa olsun i?eri?inden, iletilmesinden, al?nmas?ndan, saklanmas?ndan Eski?ehir Teknik ?niversitesi sorumlu de?ildir. Bu mesaj?n i?eri?i yazar?na ait olup, Eski?ehir Teknik ?niversitesi'nin g?r??lerini i?ermeyebilir. Bu e-posta bizce bilinen t?m bilgisayar vir?slerine kar?? taranm??t?r.

DISCLAIMER: This e-mail (including any attachments) may contain confidential and/or privileged information. Copying, disclosure or distribution of the material in this e-mail without owner authority is strictly forbidden. If you are not the intended recipient (or have received this e-mail in error), please notify the sender and delete it from your system immediately. Eskisehir Technical University makes no warranty as to the accuracy or completeness of any information contained in this message and hereby excludes any liability of any kind for the information contained therein or for the information transmission, reception, storage or use of such in any way whatsoever. Any opinions expressed in this message are those of the author and may not necessarily reflect the opinions of Eskisehir Technical University. This e-mail has been scanned for all computer viruses known to us.

	[[alternative HTML version deleted]]


From bgunter@4567 @end|ng |rom gm@||@com  Tue Jul  9 17:24:31 2024
From: bgunter@4567 @end|ng |rom gm@||@com (Bert Gunter)
Date: Tue, 9 Jul 2024 08:24:31 -0700
Subject: [R] Weird R Studio behaviour...
In-Reply-To: <D8A08C72-70E9-4FB9-AACB-342AF657A944@contoso.com>
References: <D8A08C72-70E9-4FB9-AACB-342AF657A944@contoso.com>
Message-ID: <CAGxFJbSrY2mGXM88dCy2gmbd=gx7RU2r+v10VpsmSjuj6YKVyg@mail.gmail.com>

I think you should also update R to the latest version, as that *might* be
the source of the problem.

Other may be able to give you a specific diagnosis, but updating R is to a
(reasonably, at least) current version is good practice anyway.

Cheers,
Bert

On Tue, Jul 9, 2024 at 8:11?AM Levent TERLEMEZ via R-help <
r-help at r-project.org> wrote:

> Hi,
>
> Have a nice week. First of all, I know this is not R Studio forum but I
> want to ask here first, if you all do not mind. Well, I am away from my
> computer right now but, I have a strange problem (at least to me). My
> script worked perfectly for a year, and today, suddenly stop working
> because R Studio begins to warn me about illegal characters in the script.
>
> System is on W 10, and R 3.4.1 is working with R Studio. R Studio is
> updated today to the latest one because of this problem with the hope of
> resolving the problem (but no luck) and they are used as their default
> installation settings. Anyway, the problem example may not be repoducable
> right now but if it is, I can give detailed one later.
>
> While the original working code is this (there is no synax error, too in
> the code because it was working perfectly until today before updating R
> Studio, error also came out before this update as I mensioned before);
>
> legend(c("Kapan??",""20 G?nl?k,"50 G?nl?k"),col=c("black"...
>
> The warning is this;
>
> Error: unexpected symbol inside:
> " Encoding(kill3) <- "latin1" legend(c(kill1,kill2,"50
> G?nl?k"),col=c("black"? and can be solved when converted ??? to ?u?.
> Addition to this another solution (at least for me) is this;
>
> kill1<-"Kapan??"
> Encoding(kill1) <- "UTF-8" (these two statements are not needed but fort
> he sake of code integrity, is applied to it, too. If kill1 is converted to
> latin1, this time it is broken)
> kill2<-"22 G?nl?k MA"
> Encoding(kill2) <- "latin1"
> kill3<-"50 G?nl?k MA"
> Encoding(kill3) <- "latin1"
>
> And also it is set to ?ASK? and always ?UTF-8? is selected.
>
> But, I also wonder why today and what changed so R Studio stops suddenly
> running the script? I can not following up the changes anymore as used to
> be and if this is a character set problem, it is coming back again and
> again. What is the permenant solution of this? This is like an endless
> problem?
>
> With my best regards and thanks for your patience?.
>
> Levent Terlemez.
>
>
>
> ________________________________
> YASAL UYARI: Bu e-postan?n i?erdi?i bilgiler (ekleri de dahil olmak ?zere)
> gizlidir. Sahibinin onay? olmaks?z?n i?eri?i kopyalanamaz, ???nc? ki?ilere
> a??klanamaz veya iletilemez . Bu mesaj?n g?nderilmek istendi?i ki?i
> de?ilseniz (ya da bu e-postay? yanl??l?kla ald?ysan?z), l?tfen yollayan
> ki?iyi haberdar ediniz ve mesaj? sisteminizden derhal siliniz. Eski?ehir
> Teknik ?niversitesi, bu mesaj?n i?erdi?i bilgilerin do?rulu?u veya eksiksiz
> oldu?u konusunda bir garanti vermemektedir. Bu nedenle, bilgilerin ne
> ?ekilde olursa olsun i?eri?inden, iletilmesinden, al?nmas?ndan,
> saklanmas?ndan Eski?ehir Teknik ?niversitesi sorumlu de?ildir. Bu mesaj?n
> i?eri?i yazar?na ait olup, Eski?ehir Teknik ?niversitesi'nin g?r??lerini
> i?ermeyebilir. Bu e-posta bizce bilinen t?m bilgisayar vir?slerine kar??
> taranm??t?r.
>
> DISCLAIMER: This e-mail (including any attachments) may contain
> confidential and/or privileged information. Copying, disclosure or
> distribution of the material in this e-mail without owner authority is
> strictly forbidden. If you are not the intended recipient (or have received
> this e-mail in error), please notify the sender and delete it from your
> system immediately. Eskisehir Technical University makes no warranty as to
> the accuracy or completeness of any information contained in this message
> and hereby excludes any liability of any kind for the information contained
> therein or for the information transmission, reception, storage or use of
> such in any way whatsoever. Any opinions expressed in this message are
> those of the author and may not necessarily reflect the opinions of
> Eskisehir Technical University. This e-mail has been scanned for all
> computer viruses known to us.
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide
> http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>

	[[alternative HTML version deleted]]


From @erv|ce @end|ng |rom @hd@w@on@com  Tue Jul  9 18:56:11 2024
From: @erv|ce @end|ng |rom @hd@w@on@com (Stephen H. Dawson, DSL)
Date: Tue, 9 Jul 2024 12:56:11 -0400
Subject: [R] Weird R Studio behaviour...
In-Reply-To: <CAGxFJbSrY2mGXM88dCy2gmbd=gx7RU2r+v10VpsmSjuj6YKVyg@mail.gmail.com>
References: <D8A08C72-70E9-4FB9-AACB-342AF657A944@contoso.com>
 <CAGxFJbSrY2mGXM88dCy2gmbd=gx7RU2r+v10VpsmSjuj6YKVyg@mail.gmail.com>
Message-ID: <43a06824-2b3b-21d1-709a-84248783e7db@shdawson.com>

I disagree.

UTF-8 is far from new. The IDE cannot fail at the point of not handling 
a known technology without advancing the argument with further messaging.

What happens when you run the same code within R apart from the IDE?

What trace work have you accomplished with this special character in a 
separate test script?

It may be how Windows 10 is handling UTF-8 after the latest update of 
optional packages that Microsoft released last week. Run a test in CMD 
on UTF-8 and see what you discover.


*Stephen Dawson, DSL*
/Executive Strategy Consultant/
Business & Technology
+1 (865) 804-3454
http://www.shdawson.com


On 7/9/24 11:24, Bert Gunter wrote:
> I think you should also update R to the latest version, as that *might* be
> the source of the problem.
>
> Other may be able to give you a specific diagnosis, but updating R is to a
> (reasonably, at least) current version is good practice anyway.
>
> Cheers,
> Bert
>
> On Tue, Jul 9, 2024 at 8:11?AM Levent TERLEMEZ via R-help <
> r-help at r-project.org> wrote:
>
>> Hi,
>>
>> Have a nice week. First of all, I know this is not R Studio forum but I
>> want to ask here first, if you all do not mind. Well, I am away from my
>> computer right now but, I have a strange problem (at least to me). My
>> script worked perfectly for a year, and today, suddenly stop working
>> because R Studio begins to warn me about illegal characters in the script.
>>
>> System is on W 10, and R 3.4.1 is working with R Studio. R Studio is
>> updated today to the latest one because of this problem with the hope of
>> resolving the problem (but no luck) and they are used as their default
>> installation settings. Anyway, the problem example may not be repoducable
>> right now but if it is, I can give detailed one later.
>>
>> While the original working code is this (there is no synax error, too in
>> the code because it was working perfectly until today before updating R
>> Studio, error also came out before this update as I mensioned before);
>>
>> legend(c("Kapan??",""20 G?nl?k,"50 G?nl?k"),col=c("black"...
>>
>> The warning is this;
>>
>> Error: unexpected symbol inside:
>> " Encoding(kill3) <- "latin1" legend(c(kill1,kill2,"50
>> G?nl?k"),col=c("black"? and can be solved when converted ??? to ?u?.
>> Addition to this another solution (at least for me) is this;
>>
>> kill1<-"Kapan??"
>> Encoding(kill1) <- "UTF-8" (these two statements are not needed but fort
>> he sake of code integrity, is applied to it, too. If kill1 is converted to
>> latin1, this time it is broken)
>> kill2<-"22 G?nl?k MA"
>> Encoding(kill2) <- "latin1"
>> kill3<-"50 G?nl?k MA"
>> Encoding(kill3) <- "latin1"
>>
>> And also it is set to ?ASK? and always ?UTF-8? is selected.
>>
>> But, I also wonder why today and what changed so R Studio stops suddenly
>> running the script? I can not following up the changes anymore as used to
>> be and if this is a character set problem, it is coming back again and
>> again. What is the permenant solution of this? This is like an endless
>> problem?
>>
>> With my best regards and thanks for your patience?.
>>
>> Levent Terlemez.
>>
>>
>>
>> ________________________________
>> YASAL UYARI: Bu e-postan?n i?erdi?i bilgiler (ekleri de dahil olmak ?zere)
>> gizlidir. Sahibinin onay? olmaks?z?n i?eri?i kopyalanamaz, ???nc? ki?ilere
>> a??klanamaz veya iletilemez . Bu mesaj?n g?nderilmek istendi?i ki?i
>> de?ilseniz (ya da bu e-postay? yanl??l?kla ald?ysan?z), l?tfen yollayan
>> ki?iyi haberdar ediniz ve mesaj? sisteminizden derhal siliniz. Eski?ehir
>> Teknik ?niversitesi, bu mesaj?n i?erdi?i bilgilerin do?rulu?u veya eksiksiz
>> oldu?u konusunda bir garanti vermemektedir. Bu nedenle, bilgilerin ne
>> ?ekilde olursa olsun i?eri?inden, iletilmesinden, al?nmas?ndan,
>> saklanmas?ndan Eski?ehir Teknik ?niversitesi sorumlu de?ildir. Bu mesaj?n
>> i?eri?i yazar?na ait olup, Eski?ehir Teknik ?niversitesi'nin g?r??lerini
>> i?ermeyebilir. Bu e-posta bizce bilinen t?m bilgisayar vir?slerine kar??
>> taranm??t?r.
>>
>> DISCLAIMER: This e-mail (including any attachments) may contain
>> confidential and/or privileged information. Copying, disclosure or
>> distribution of the material in this e-mail without owner authority is
>> strictly forbidden. If you are not the intended recipient (or have received
>> this e-mail in error), please notify the sender and delete it from your
>> system immediately. Eskisehir Technical University makes no warranty as to
>> the accuracy or completeness of any information contained in this message
>> and hereby excludes any liability of any kind for the information contained
>> therein or for the information transmission, reception, storage or use of
>> such in any way whatsoever. Any opinions expressed in this message are
>> those of the author and may not necessarily reflect the opinions of
>> Eskisehir Technical University. This e-mail has been scanned for all
>> computer viruses known to us.
>>
>>          [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>> https://stat.ethz.ch/mailman/listinfo/r-help
>> PLEASE do read the posting guide
>> http://www.R-project.org/posting-guide.html
>> and provide commented, minimal, self-contained, reproducible code.
>>
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.


From |kry|ov @end|ng |rom d|@root@org  Tue Jul  9 19:02:08 2024
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Tue, 9 Jul 2024 20:02:08 +0300
Subject: [R] Weird R Studio behaviour...
In-Reply-To: <D8A08C72-70E9-4FB9-AACB-342AF657A944@contoso.com>
References: <D8A08C72-70E9-4FB9-AACB-342AF657A944@contoso.com>
Message-ID: <20240709200208.666d15d0@arachnoid>

? Tue, 9 Jul 2024 13:02:17 +0000
Levent TERLEMEZ via R-help <r-help at r-project.org> ?????:

> System is on W 10, and R 3.4.1 is working with R Studio. R Studio is
> updated today

https://posit.co/download/rstudio-desktop/ says "RStudio requires R
3.6.0+" so I'm afraid they don't support this configuration any more.

-- 
Best regards,
Ivan


From @@h|mk@poor @end|ng |rom gm@||@com  Wed Jul 10 10:58:28 2024
From: @@h|mk@poor @end|ng |rom gm@||@com (Ashim Kapoor)
Date: Wed, 10 Jul 2024 14:28:28 +0530
Subject: [R] Implementation for selecting lag of a lag window spectral
 estimator using generalized cross validation (using deviance)
Message-ID: <CAC8=1epK=D7NBzfw3NiEWovQ9vbQUQvnsSUiq_-GbiOD0WKjpw@mail.gmail.com>

Dear All,

I am looking for:

A software to select the lag length for a lag window spectral estimator.
Also, I have a small query in the reprex given below.

Background for the above, from the book by Percival and Walden:

1. We are given X_1,...,X_n which is one realization of a stochastic process.
2. We may compute the periodogram using FFT, for example by the
function spectrum in R.
3. The above is badly biased so we taper X_1,...,X_n to reduce the
bias in the periodogram.
4. Now that the bias in under control, we focus on reducing the
variance. So we take a window like for eg. the Parzen window, and
choose
a lag length m which controls the amount of smoothing across frequencies.
5. One way of choosing m is mentioned in :
https://web.archive.org/web/20080221221221id_/http://www.stat.uiuc.edu/~ombao/PAPERS.dir/gcvbmka.pdf

I am looking for an R package which implements 5.

Here is a reprex:

# 1.  Periodogram which may be biased
plot(spectrum(lh,taper= 0, method="pgram"),log="dB")

# 2. Using the default in built cosine taper
plot(spectrum(lh,taper = .3, method="pgram"),log="dB")

# 2. Again, using slepian taper
library(multitaper)
# I choose: n = length(lh), k =1, nw=2
mytaper = dpss(n=length(lh), k=1 , nw=2, returnEigenvalues=TRUE)
# Tapered series
lh * mytaper$v
# I may compute the spectrum with reduced bias as:
plot(spectrum(lh*mytaper$v,method="pgram"),log="dB")

# We now focus on the variance
# For a fixed m = 10, using a Parzen window.
library(gsignal)
parzenwin(10)

# The following 2 lines of code, where I try to do the same thing in 2
different ways, did not work for me:

kernapply( spectrum(lh*mytaper$v,method="pgram")$spec,parzenwin(10),circular=TRUE)
spectrum(lh*mytaper$v,kernel  = parzenwin(10),method="pgram")

# ?spec.pgram says
kernel: alternatively, a kernel smoother of class ?"tskernel"?.

How can I see all available kernels of class tskernel ?

The important question here is how to choose m which implies a bias -
variance tradeoff. Ombao et al, have a generalized cross validation
method to choose m.
Please see point 5 above. Does that exist in R ?

Many thanks,
Ashim


From bgunter@4567 @end|ng |rom gm@||@com  Wed Jul 10 15:39:41 2024
From: bgunter@4567 @end|ng |rom gm@||@com (Bert Gunter)
Date: Wed, 10 Jul 2024 06:39:41 -0700
Subject: [R] Implementation for selecting lag of a lag window spectral
 estimator using generalized cross validation (using deviance)
In-Reply-To: <CAC8=1epK=D7NBzfw3NiEWovQ9vbQUQvnsSUiq_-GbiOD0WKjpw@mail.gmail.com>
References: <CAC8=1epK=D7NBzfw3NiEWovQ9vbQUQvnsSUiq_-GbiOD0WKjpw@mail.gmail.com>
Message-ID: <CAGxFJbQL1v2KpOhjoZH+JeZQ-4MSLQb3LTKbBwyxBDXo9WAn7w@mail.gmail.com>

Have a look at the CRAN Time Series Task View:

https://cran.r-project.org/web/views/TimeSeries.html

Generally speaking, R-help is for help on R programming, not detailed
statistical questions, so it is less likely that your query would receive a
useful answer here.

Cheers,
Bert

On Wed, Jul 10, 2024 at 1:59?AM Ashim Kapoor <ashimkapoor at gmail.com> wrote:

> Dear All,
>
> I am looking for:
>
> A software to select the lag length for a lag window spectral estimator.
> Also, I have a small query in the reprex given below.
>
> Background for the above, from the book by Percival and Walden:
>
> 1. We are given X_1,...,X_n which is one realization of a stochastic
> process.
> 2. We may compute the periodogram using FFT, for example by the
> function spectrum in R.
> 3. The above is badly biased so we taper X_1,...,X_n to reduce the
> bias in the periodogram.
> 4. Now that the bias in under control, we focus on reducing the
> variance. So we take a window like for eg. the Parzen window, and
> choose
> a lag length m which controls the amount of smoothing across frequencies.
> 5. One way of choosing m is mentioned in :
>
> https://web.archive.org/web/20080221221221id_/http://www.stat.uiuc.edu/~ombao/PAPERS.dir/gcvbmka.pdf
>
> I am looking for an R package which implements 5.
>
> Here is a reprex:
>
> # 1.  Periodogram which may be biased
> plot(spectrum(lh,taper= 0, method="pgram"),log="dB")
>
> # 2. Using the default in built cosine taper
> plot(spectrum(lh,taper = .3, method="pgram"),log="dB")
>
> # 2. Again, using slepian taper
> library(multitaper)
> # I choose: n = length(lh), k =1, nw=2
> mytaper = dpss(n=length(lh), k=1 , nw=2, returnEigenvalues=TRUE)
> # Tapered series
> lh * mytaper$v
> # I may compute the spectrum with reduced bias as:
> plot(spectrum(lh*mytaper$v,method="pgram"),log="dB")
>
> # We now focus on the variance
> # For a fixed m = 10, using a Parzen window.
> library(gsignal)
> parzenwin(10)
>
> # The following 2 lines of code, where I try to do the same thing in 2
> different ways, did not work for me:
>
> kernapply(
> spectrum(lh*mytaper$v,method="pgram")$spec,parzenwin(10),circular=TRUE)
> spectrum(lh*mytaper$v,kernel  = parzenwin(10),method="pgram")
>
> # ?spec.pgram says
> kernel: alternatively, a kernel smoother of class ?"tskernel"?.
>
> How can I see all available kernels of class tskernel ?
>
> The important question here is how to choose m which implies a bias -
> variance tradeoff. Ombao et al, have a generalized cross validation
> method to choose m.
> Please see point 5 above. Does that exist in R ?
>
> Many thanks,
> Ashim
>
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide
> http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>

	[[alternative HTML version deleted]]


From @tyen @end|ng |rom ntu@edu@tw  Fri Jul 12 10:54:03 2024
From: @tyen @end|ng |rom ntu@edu@tw (Steven Yen)
Date: Fri, 12 Jul 2024 16:54:03 +0800
Subject: [R] grep
Message-ID: <658bc8e3-c654-4ed7-acf5-3d63eb34967d@ntu.edu.tw>

Below is part a regression printout. How can I use "grep" to identify 
rows headed by variables (first column) with a certain label. In this 
case, I like to find variables containing "somewhath", 
"veryh",?"somewhatm", "verym", "somewhatc", "veryc","somewhatl", 
"veryl". The result should be an index 6:13 or 6,7,8,9,10,11,12,13. Note 
that they all contain "somewhat" and "very". Thanks.

est se t p g sig x.1.age 0.0341 0.0138 2.4766 0.0133 -3.8835e-04 ** 
x.1.sleep -0.1108 0.0059 -18.6277 0.0000 -4.4572e-04 *** x.1.primary 
-0.0694 0.0289 -2.4002 0.0164 -9.9638e-06 ** x.1.middle -0.2909 0.0356 
-8.1657 0.0000 -1.4913e-05 *** x.1.high -0.4267 0.0463 -9.2118 0.0000 
-3.6246e-05 *** x.1.somewhath -0.6188 0.0256 -24.1971 0.0000 -3.1337e-05 
*** x.1.veryh -0.7580 0.0331 -22.8695 0.0000 -2.9558e-05 *** 
x.1.somewhatm -0.3413 0.0426 -8.0112 0.0000 -1.8920e-05 *** x.1.verym 
-0.3813 0.0446 -8.5413 0.0000 -4.4029e-05 *** x.1.somewhatc -0.3101 
0.0649 -4.7783 0.0000 -1.4353e-05 *** x.1.veryc -0.2977 0.0648 -4.5910 
0.0000 -4.8986e-05 *** x.1.somewhatl -0.6310 0.0424 -14.8846 0.0000 
-1.9543e-05 *** x.1.veryl -0.9132 0.0462 -19.7525 0.0000 -4.4603e-05 *** 
...

	[[alternative HTML version deleted]]


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Fri Jul 12 11:09:32 2024
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Fri, 12 Jul 2024 11:09:32 +0200
Subject: [R] grep
In-Reply-To: <658bc8e3-c654-4ed7-acf5-3d63eb34967d@ntu.edu.tw>
References: <658bc8e3-c654-4ed7-acf5-3d63eb34967d@ntu.edu.tw>
Message-ID: <b0700c60-74ca-4b02-a813-68202010f634@statistik.tu-dortmund.de>



On 12.07.2024 10:54, Steven Yen wrote:
> Below is part a regression printout. How can I use "grep" to identify
> rows headed by variables (first column) with a certain label. In this
> case, I like to find variables containing "somewhath",
> "veryh",?"somewhatm", "verym", "somewhatc", "veryc","somewhatl",
> "veryl". The result should be an index 6:13 or 6,7,8,9,10,11,12,13. Note
> that they all contain "somewhat" and "very". Thanks.

Sounds like homework?

which(grep("very|somewhat", x))

Best,
Uwe Ligges


> est se t p g sig x.1.age 0.0341 0.0138 2.4766 0.0133 -3.8835e-04 **
> x.1.sleep -0.1108 0.0059 -18.6277 0.0000 -4.4572e-04 *** x.1.primary
> -0.0694 0.0289 -2.4002 0.0164 -9.9638e-06 ** x.1.middle -0.2909 0.0356
> -8.1657 0.0000 -1.4913e-05 *** x.1.high -0.4267 0.0463 -9.2118 0.0000
> -3.6246e-05 *** x.1.somewhath -0.6188 0.0256 -24.1971 0.0000 -3.1337e-05
> *** x.1.veryh -0.7580 0.0331 -22.8695 0.0000 -2.9558e-05 ***
> x.1.somewhatm -0.3413 0.0426 -8.0112 0.0000 -1.8920e-05 *** x.1.verym
> -0.3813 0.0446 -8.5413 0.0000 -4.4029e-05 *** x.1.somewhatc -0.3101
> 0.0649 -4.7783 0.0000 -1.4353e-05 *** x.1.veryc -0.2977 0.0648 -4.5910
> 0.0000 -4.8986e-05 *** x.1.somewhatl -0.6310 0.0424 -14.8846 0.0000
> -1.9543e-05 *** x.1.veryl -0.9132 0.0462 -19.7525 0.0000 -4.4603e-05 ***
> ...
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.

From @tyen @end|ng |rom ntu@edu@tw  Fri Jul 12 11:26:16 2024
From: @tyen @end|ng |rom ntu@edu@tw (Steven Yen)
Date: Fri, 12 Jul 2024 17:26:16 +0800
Subject: [R] grep
In-Reply-To: <b0700c60-74ca-4b02-a813-68202010f634@statistik.tu-dortmund.de>
References: <658bc8e3-c654-4ed7-acf5-3d63eb34967d@ntu.edu.tw>
 <b0700c60-74ca-4b02-a813-68202010f634@statistik.tu-dortmund.de>
Message-ID: <a9ad4017-ba88-4364-a4c2-0e68389b333b@ntu.edu.tw>

Thanks. In this case below, what is "x"? I tried rownames(out) which did 
not work.

Sorry. Does this sound like homework to you?

On 7/12/2024 5:09 PM, Uwe Ligges wrote:
>
>
> On 12.07.2024 10:54, Steven Yen wrote:
>> Below is part a regression printout. How can I use "grep" to identify
>> rows headed by variables (first column) with a certain label. In this
>> case, I like to find variables containing "somewhath",
>> "veryh",?"somewhatm", "verym", "somewhatc", "veryc","somewhatl",
>> "veryl". The result should be an index 6:13 or 6,7,8,9,10,11,12,13. Note
>> that they all contain "somewhat" and "very". Thanks.
>
> Sounds like homework?
>
> which(grep("very|somewhat", x))
>
> Best,
> Uwe Ligges
>
>
>> est se t p g sig x.1.age 0.0341 0.0138 2.4766 0.0133 -3.8835e-04 **
>> x.1.sleep -0.1108 0.0059 -18.6277 0.0000 -4.4572e-04 *** x.1.primary
>> -0.0694 0.0289 -2.4002 0.0164 -9.9638e-06 ** x.1.middle -0.2909 0.0356
>> -8.1657 0.0000 -1.4913e-05 *** x.1.high -0.4267 0.0463 -9.2118 0.0000
>> -3.6246e-05 *** x.1.somewhath -0.6188 0.0256 -24.1971 0.0000 -3.1337e-05
>> *** x.1.veryh -0.7580 0.0331 -22.8695 0.0000 -2.9558e-05 ***
>> x.1.somewhatm -0.3413 0.0426 -8.0112 0.0000 -1.8920e-05 *** x.1.verym
>> -0.3813 0.0446 -8.5413 0.0000 -4.4029e-05 *** x.1.somewhatc -0.3101
>> 0.0649 -4.7783 0.0000 -1.4353e-05 *** x.1.veryc -0.2977 0.0648 -4.5910
>> 0.0000 -4.8986e-05 *** x.1.somewhatl -0.6310 0.0424 -14.8846 0.0000
>> -1.9543e-05 *** x.1.veryl -0.9132 0.0462 -19.7525 0.0000 -4.4603e-05 ***
>> ...
>>
>> ????[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>> https://stat.ethz.ch/mailman/listinfo/r-help
>> PLEASE do read the posting guide 
>> http://www.R-project.org/posting-guide.html
>> and provide commented, minimal, self-contained, reproducible code.


From @tyen @end|ng |rom ntu@edu@tw  Fri Jul 12 11:34:45 2024
From: @tyen @end|ng |rom ntu@edu@tw (Steven Yen)
Date: Fri, 12 Jul 2024 17:34:45 +0800
Subject: [R] grep
In-Reply-To: <a9ad4017-ba88-4364-a4c2-0e68389b333b@ntu.edu.tw>
References: <658bc8e3-c654-4ed7-acf5-3d63eb34967d@ntu.edu.tw>
 <b0700c60-74ca-4b02-a813-68202010f634@statistik.tu-dortmund.de>
 <a9ad4017-ba88-4364-a4c2-0e68389b333b@ntu.edu.tw>
Message-ID: <81d6d273-a7b6-4665-98e1-56583981ca81@ntu.edu.tw>

Could not get "which" to work, but my grep worked. Thanks.

> which(grep("very|somewhat",names(goprobit.p$est))) Error in 
which(grep("very|somewhat", names(goprobit.p$est))) : argument to 
'which' is not logical > grep("very|somewhat",names(goprobit.p$est)) [1] 
6 7 8 9 10 11 12 13 28 29 30 31 32 33 34 35 50 51 52 53 54 55 56 57

On 7/12/2024 5:26 PM, Steven Yen wrote:
> Thanks. In this case below, what is "x"? I tried rownames(out) which 
> did not work.
>
> Sorry. Does this sound like homework to you?
>
> On 7/12/2024 5:09 PM, Uwe Ligges wrote:
>>
>>
>> On 12.07.2024 10:54, Steven Yen wrote:
>>> Below is part a regression printout. How can I use "grep" to identify
>>> rows headed by variables (first column) with a certain label. In this
>>> case, I like to find variables containing "somewhath",
>>> "veryh",?"somewhatm", "verym", "somewhatc", "veryc","somewhatl",
>>> "veryl". The result should be an index 6:13 or 6,7,8,9,10,11,12,13. 
>>> Note
>>> that they all contain "somewhat" and "very". Thanks.
>>
>> Sounds like homework?
>>
>> which(grep("very|somewhat", x))
>>
>> Best,
>> Uwe Ligges
>>
>>
>>> est se t p g sig x.1.age 0.0341 0.0138 2.4766 0.0133 -3.8835e-04 **
>>> x.1.sleep -0.1108 0.0059 -18.6277 0.0000 -4.4572e-04 *** x.1.primary
>>> -0.0694 0.0289 -2.4002 0.0164 -9.9638e-06 ** x.1.middle -0.2909 0.0356
>>> -8.1657 0.0000 -1.4913e-05 *** x.1.high -0.4267 0.0463 -9.2118 0.0000
>>> -3.6246e-05 *** x.1.somewhath -0.6188 0.0256 -24.1971 0.0000 
>>> -3.1337e-05
>>> *** x.1.veryh -0.7580 0.0331 -22.8695 0.0000 -2.9558e-05 ***
>>> x.1.somewhatm -0.3413 0.0426 -8.0112 0.0000 -1.8920e-05 *** x.1.verym
>>> -0.3813 0.0446 -8.5413 0.0000 -4.4029e-05 *** x.1.somewhatc -0.3101
>>> 0.0649 -4.7783 0.0000 -1.4353e-05 *** x.1.veryc -0.2977 0.0648 -4.5910
>>> 0.0000 -4.8986e-05 *** x.1.somewhatl -0.6310 0.0424 -14.8846 0.0000
>>> -1.9543e-05 *** x.1.veryl -0.9132 0.0462 -19.7525 0.0000 -4.4603e-05 
>>> ***
>>> ...
>>>
>>> ????[[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>>> https://stat.ethz.ch/mailman/listinfo/r-help
>>> PLEASE do read the posting guide 
>>> http://www.R-project.org/posting-guide.html
>>> and provide commented, minimal, self-contained, reproducible code.
	[[alternative HTML version deleted]]


From @tyen @end|ng |rom ntu@edu@tw  Fri Jul 12 11:42:05 2024
From: @tyen @end|ng |rom ntu@edu@tw (Steven Yen)
Date: Fri, 12 Jul 2024 17:42:05 +0800
Subject: [R] grep
In-Reply-To: <81d6d273-a7b6-4665-98e1-56583981ca81@ntu.edu.tw>
References: <658bc8e3-c654-4ed7-acf5-3d63eb34967d@ntu.edu.tw>
 <b0700c60-74ca-4b02-a813-68202010f634@statistik.tu-dortmund.de>
 <a9ad4017-ba88-4364-a4c2-0e68389b333b@ntu.edu.tw>
 <81d6d273-a7b6-4665-98e1-56583981ca81@ntu.edu.tw>
Message-ID: <b73784ce-c018-4587-bcd9-64adbd0dc4a7@ntu.edu.tw>

Sorry. grepl worked:

which(grepl("very|somewhat",names(goprobit.p$est)))

On 7/12/2024 5:34 PM, Steven Yen wrote:
>
> Could not get "which" to work, but my grep worked. Thanks.
>
> > which(grep("very|somewhat",names(goprobit.p$est))) Error in 
> which(grep("very|somewhat", names(goprobit.p$est))) : argument to 
> 'which' is not logical > grep("very|somewhat",names(goprobit.p$est)) 
> [1] 6 7 8 9 10 11 12 13 28 29 30 31 32 33 34 35 50 51 52 53 54 55 56 57
> On 7/12/2024 5:26 PM, Steven Yen wrote:
>> Thanks. In this case below, what is "x"? I tried rownames(out) which 
>> did not work.
>>
>> Sorry. Does this sound like homework to you?
>>
>> On 7/12/2024 5:09 PM, Uwe Ligges wrote:
>>>
>>>
>>> On 12.07.2024 10:54, Steven Yen wrote:
>>>> Below is part a regression printout. How can I use "grep" to identify
>>>> rows headed by variables (first column) with a certain label. In this
>>>> case, I like to find variables containing "somewhath",
>>>> "veryh",?"somewhatm", "verym", "somewhatc", "veryc","somewhatl",
>>>> "veryl". The result should be an index 6:13 or 6,7,8,9,10,11,12,13. 
>>>> Note
>>>> that they all contain "somewhat" and "very". Thanks.
>>>
>>> Sounds like homework?
>>>
>>> which(grep("very|somewhat", x))
>>>
>>> Best,
>>> Uwe Ligges
>>>
>>>
>>>> est se t p g sig x.1.age 0.0341 0.0138 2.4766 0.0133 -3.8835e-04 **
>>>> x.1.sleep -0.1108 0.0059 -18.6277 0.0000 -4.4572e-04 *** x.1.primary
>>>> -0.0694 0.0289 -2.4002 0.0164 -9.9638e-06 ** x.1.middle -0.2909 0.0356
>>>> -8.1657 0.0000 -1.4913e-05 *** x.1.high -0.4267 0.0463 -9.2118 0.0000
>>>> -3.6246e-05 *** x.1.somewhath -0.6188 0.0256 -24.1971 0.0000 
>>>> -3.1337e-05
>>>> *** x.1.veryh -0.7580 0.0331 -22.8695 0.0000 -2.9558e-05 ***
>>>> x.1.somewhatm -0.3413 0.0426 -8.0112 0.0000 -1.8920e-05 *** x.1.verym
>>>> -0.3813 0.0446 -8.5413 0.0000 -4.4029e-05 *** x.1.somewhatc -0.3101
>>>> 0.0649 -4.7783 0.0000 -1.4353e-05 *** x.1.veryc -0.2977 0.0648 -4.5910
>>>> 0.0000 -4.8986e-05 *** x.1.somewhatl -0.6310 0.0424 -14.8846 0.0000
>>>> -1.9543e-05 *** x.1.veryl -0.9132 0.0462 -19.7525 0.0000 
>>>> -4.4603e-05 ***
>>>> ...
>>>>
>>>> ????[[alternative HTML version deleted]]
>>>>
>>>> ______________________________________________
>>>> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>>>> https://stat.ethz.ch/mailman/listinfo/r-help
>>>> PLEASE do read the posting guide 
>>>> http://www.R-project.org/posting-guide.html
>>>> and provide commented, minimal, self-contained, reproducible code.
	[[alternative HTML version deleted]]


From JH@rm@e @end|ng |rom roku@com  Fri Jul 12 16:46:43 2024
From: JH@rm@e @end|ng |rom roku@com (Jorgen Harmse)
Date: Fri, 12 Jul 2024 14:46:43 +0000
Subject: [R] grep
Message-ID: <F1037460-C263-4821-91A3-E93A2AABCC7A@roku.com>

which(grepl(....)) looks odd. Doesn't grep by itself return the correct vector of indices?

Regards,
Jorgen Harmse.?


Message: 5
Date: Fri, 12 Jul 2024 17:42:05 +0800
From: Steven Yen <styen at ntu.edu.tw <mailto:styen at ntu.edu.tw>>
To: Uwe Ligges <ligges at statistik.tu-dortmund.de <mailto:ligges at statistik.tu-dortmund.de>>, R-help Mailing List
<r-help at r-project.org <mailto:r-help at r-project.org>>
Cc: Steven Yen <syen04 at gmail.com <mailto:syen04 at gmail.com>>
Subject: Re: [R] grep
Message-ID: <b73784ce-c018-4587-bcd9-64adbd0dc4a7 at ntu.edu.tw <mailto:b73784ce-c018-4587-bcd9-64adbd0dc4a7 at ntu.edu.tw>>
Content-Type: text/plain; charset="utf-8"


Sorry. grepl worked:


which(grepl("very|somewhat",names(goprobit.p$est)))





From ru|pb@rr@d@@ @end|ng |rom @@po@pt  Fri Jul 12 17:23:04 2024
From: ru|pb@rr@d@@ @end|ng |rom @@po@pt (Rui Barradas)
Date: Fri, 12 Jul 2024 16:23:04 +0100
Subject: [R] grep
In-Reply-To: <a9ad4017-ba88-4364-a4c2-0e68389b333b@ntu.edu.tw>
References: <658bc8e3-c654-4ed7-acf5-3d63eb34967d@ntu.edu.tw>
 <b0700c60-74ca-4b02-a813-68202010f634@statistik.tu-dortmund.de>
 <a9ad4017-ba88-4364-a4c2-0e68389b333b@ntu.edu.tw>
Message-ID: <b96273a5-8499-4445-a12f-d9f90f92e0a2@sapo.pt>


Hello,l

Though the question is already answered, here is another answer to what 
is 'x'.
The output in the OP is not a lm or glm output but if your regression 
model was programmed according to recommended practices, there must be a 
'coefficients' member in the list or object it returns and the following 
should work.


# this is 'x', a named character vector
coef(fit)
#
fit |> coef() |> names() |> grep("somewhat|very", x = _)


Hope this helps,

Rui Barradas

?s 10:26 de 12/07/2024, Steven Yen escreveu:
> Thanks. In this case below, what is "x"? I tried rownames(out) which did 
> not work.
> 
> Sorry. Does this sound like homework to you?
> 
> On 7/12/2024 5:09 PM, Uwe Ligges wrote:
>>
>>
>> On 12.07.2024 10:54, Steven Yen wrote:
>>> Below is part a regression printout. How can I use "grep" to identify
>>> rows headed by variables (first column) with a certain label. In this
>>> case, I like to find variables containing "somewhath",
>>> "veryh",?"somewhatm", "verym", "somewhatc", "veryc","somewhatl",
>>> "veryl". The result should be an index 6:13 or 6,7,8,9,10,11,12,13. Note
>>> that they all contain "somewhat" and "very". Thanks.
>>
>> Sounds like homework?
>>
>> which(grep("very|somewhat", x))
>>
>> Best,
>> Uwe Ligges
>>
>>
>>> est se t p g sig x.1.age 0.0341 0.0138 2.4766 0.0133 -3.8835e-04 **
>>> x.1.sleep -0.1108 0.0059 -18.6277 0.0000 -4.4572e-04 *** x.1.primary
>>> -0.0694 0.0289 -2.4002 0.0164 -9.9638e-06 ** x.1.middle -0.2909 0.0356
>>> -8.1657 0.0000 -1.4913e-05 *** x.1.high -0.4267 0.0463 -9.2118 0.0000
>>> -3.6246e-05 *** x.1.somewhath -0.6188 0.0256 -24.1971 0.0000 -3.1337e-05
>>> *** x.1.veryh -0.7580 0.0331 -22.8695 0.0000 -2.9558e-05 ***
>>> x.1.somewhatm -0.3413 0.0426 -8.0112 0.0000 -1.8920e-05 *** x.1.verym
>>> -0.3813 0.0446 -8.5413 0.0000 -4.4029e-05 *** x.1.somewhatc -0.3101
>>> 0.0649 -4.7783 0.0000 -1.4353e-05 *** x.1.veryc -0.2977 0.0648 -4.5910
>>> 0.0000 -4.8986e-05 *** x.1.somewhatl -0.6310 0.0424 -14.8846 0.0000
>>> -1.9543e-05 *** x.1.veryl -0.9132 0.0462 -19.7525 0.0000 -4.4603e-05 ***
>>> ...
>>>
>>> ????[[alternative HTML version deleted]]
>>>
>>> ______________________________________________
>>> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>>> https://stat.ethz.ch/mailman/listinfo/r-help
>>> PLEASE do read the posting guide 
>>> http://www.R-project.org/posting-guide.html
>>> and provide commented, minimal, self-contained, reproducible code.
> 
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide 
> http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.


-- 
Este e-mail foi analisado pelo software antiv?rus AVG para verificar a presen?a de v?rus.
www.avg.com


From @tyen @end|ng |rom ntu@edu@tw  Fri Jul 12 18:13:23 2024
From: @tyen @end|ng |rom ntu@edu@tw (Steven Yen)
Date: Sat, 13 Jul 2024 00:13:23 +0800
Subject: [R] grep
In-Reply-To: <47360462-553b-4223-99d7-2225ad03a6ed@ntu.edu.tw>
References: <658bc8e3-c654-4ed7-acf5-3d63eb34967d@ntu.edu.tw>
 <b0700c60-74ca-4b02-a813-68202010f634@statistik.tu-dortmund.de>
 <a9ad4017-ba88-4364-a4c2-0e68389b333b@ntu.edu.tw>
 <b96273a5-8499-4445-a12f-d9f90f92e0a2@sapo.pt>
 <47360462-553b-4223-99d7-2225ad03a6ed@ntu.edu.tw>
Message-ID: <fd6df188-4eaa-404b-bcb8-9f0fdb2961a8@ntu.edu.tw>

Now I've found another way to make it work. All I need is to pick up the 
names in the column (x.1.age...).

> v<-pr(goprobit.p); v

Maximum-Likelihood Estimates weighted = FALSE iterations = 5 logLik = 
-14160.75 finalHessian = TRUE Covariance matrix is Robust Number of 
parameters = 66 Sample size = 17922 est se t p g sig x.1.age 0.0341 
0.0138 2.4766 0.0133 -3.8835e-04 ** x.1.sleep -0.1108 0.0059 -18.6277 
0.0000 -4.4572e-04 *** x.1.primary -0.0694 0.0289 -2.4002 0.0164 
-9.9638e-06 ** x.1.middle -0.2909 0.0356 -8.1657 0.0000 -1.4913e-05 *** 
... > rownames(v) [1] "x.1.age" "x.1.sleep" "x.1.primary" "x.1.middle" 
[5] "x.1.high" "x.1.somewhath" "x.1.veryh" "x.1.somewhatm" ...Treating 
it as the first column does not work, because the first column contains 
the numbers. > v[,1] [1] 0.0341 -0.1108 -0.0694 -0.2909 -0.4267 -0.6188 
-0.7580 -0.3413 -0.3813 [10] -0.3101 -0.2977 -0.6310 -0.9132 0.1885 
-0.0887 -0.0850 0.0847 -0.1588

On 7/12/2024 11:57 PM, Steven Yen wrote:
> Thanks. First and second of the following worked, but the third (with 
> coef) did not. This may be because I programmed my own estimation 
> program. In short,
>
> names(goprobit.p$est) was recognized, but
> names(coef(goprobit)) was not
>
> > which(grepl("very|somewhat",names(goprobit.p$est)))
> ?[1]? 6? 7? 8? 9 10 11 12 13 28 29 30 31 32 33 34 35 50 51 52 53 54 55 
> 56 57
> > jj<-grep("very|somewhat",names(goprobit.p$est)); length(jj)
> [1] 24
> > jj<-grep("very|somewhat",names(coef(goprobit))); length(jj)
> Error: object 'goprobit' not found
>
> On 7/12/2024 11:23 PM, Rui Barradas wrote:
>>
>> Hello,l
>>
>> Though the question is already answered, here is another answer to 
>> what is 'x'.
>> The output in the OP is not a lm or glm output but if your regression 
>> model was programmed according to recommended practices, there must 
>> be a 'coefficients' member in the list or object it returns and the 
>> following should work.
>>
>>
>> # this is 'x', a named character vector
>> coef(fit)
>> #
>> fit |> coef() |> names() |> grep("somewhat|very", x = _)
>>
>>
>> Hope this helps,
>>
>> Rui Barradas
>>
>> ?s 10:26 de 12/07/2024, Steven Yen escreveu:
>>> Thanks. In this case below, what is "x"? I tried rownames(out) which 
>>> did not work.
>>>
>>> Sorry. Does this sound like homework to you?
>>>
>>> On 7/12/2024 5:09 PM, Uwe Ligges wrote:
>>>>
>>>>
>>>> On 12.07.2024 10:54, Steven Yen wrote:
>>>>> Below is part a regression printout. How can I use "grep" to identify
>>>>> rows headed by variables (first column) with a certain label. In this
>>>>> case, I like to find variables containing "somewhath",
>>>>> "veryh",?"somewhatm", "verym", "somewhatc", "veryc","somewhatl",
>>>>> "veryl". The result should be an index 6:13 or 
>>>>> 6,7,8,9,10,11,12,13. Note
>>>>> that they all contain "somewhat" and "very". Thanks.
>>>>
>>>> Sounds like homework?
>>>>
>>>> which(grep("very|somewhat", x))
>>>>
>>>> Best,
>>>> Uwe Ligges
>>>>
>>>>
>>>>> est se t p g sig x.1.age 0.0341 0.0138 2.4766 0.0133 -3.8835e-04 **
>>>>> x.1.sleep -0.1108 0.0059 -18.6277 0.0000 -4.4572e-04 *** x.1.primary
>>>>> -0.0694 0.0289 -2.4002 0.0164 -9.9638e-06 ** x.1.middle -0.2909 
>>>>> 0.0356
>>>>> -8.1657 0.0000 -1.4913e-05 *** x.1.high -0.4267 0.0463 -9.2118 0.0000
>>>>> -3.6246e-05 *** x.1.somewhath -0.6188 0.0256 -24.1971 0.0000 
>>>>> -3.1337e-05
>>>>> *** x.1.veryh -0.7580 0.0331 -22.8695 0.0000 -2.9558e-05 ***
>>>>> x.1.somewhatm -0.3413 0.0426 -8.0112 0.0000 -1.8920e-05 *** x.1.verym
>>>>> -0.3813 0.0446 -8.5413 0.0000 -4.4029e-05 *** x.1.somewhatc -0.3101
>>>>> 0.0649 -4.7783 0.0000 -1.4353e-05 *** x.1.veryc -0.2977 0.0648 
>>>>> -4.5910
>>>>> 0.0000 -4.8986e-05 *** x.1.somewhatl -0.6310 0.0424 -14.8846 0.0000
>>>>> -1.9543e-05 *** x.1.veryl -0.9132 0.0462 -19.7525 0.0000 
>>>>> -4.4603e-05 ***
>>>>> ...
>>>>>
>>>>> ????[[alternative HTML version deleted]]
>>>>>
>>>>> ______________________________________________
>>>>> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>>>>> https://stat.ethz.ch/mailman/listinfo/r-help
>>>>> PLEASE do read the posting guide 
>>>>> http://www.R-project.org/posting-guide.html
>>>>> and provide commented, minimal, self-contained, reproducible code.
>>>
>>> ______________________________________________
>>> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>>> https://stat.ethz.ch/mailman/listinfo/r-help
>>> PLEASE do read the posting guide 
>>> http://www.R-project.org/posting-guide.html
>>> and provide commented, minimal, self-contained, reproducible code.
>>
>>
	[[alternative HTML version deleted]]


From bog@@o@chr|@to|er @end|ng |rom gm@||@com  Sat Jul 13 13:13:41 2024
From: bog@@o@chr|@to|er @end|ng |rom gm@||@com (Christofer Bogaso)
Date: Sat, 13 Jul 2024 16:43:41 +0530
Subject: [R] Obtaining predicted probabilities for Logistic regression
Message-ID: <CA+dpOJ=GGZE6TTwky6pWPGxd+YKBTiK3YqFXAbAwgR_PpvvZLQ@mail.gmail.com>

Hi,

I ran below code

Dat = read.csv('https://raw.githubusercontent.com/sam16tyagi/Machine-Learning-techniques-in-python/master/logistic%20regression%20dataset-Social_Network_Ads.csv')
head(Dat)
Model = glm(Purchased ~ Gender, data = Dat, family = binomial())
head(predict(Model, type="response"))
My_Predict = 1/(1+exp(-1 * (as.vector(coef(Model))[1] *
as.vector(coef(Model))[2] * ifelse(Dat['Gender'] == "Male", 1, 0))))
head(My_Predict)

However, My_Predict and predict(Model, type="response")) are differing
when I tried to manually calculate prediction.

Could you please help to identify what was the mistake I made?


From ru|pb@rr@d@@ @end|ng |rom @@po@pt  Sat Jul 13 15:16:21 2024
From: ru|pb@rr@d@@ @end|ng |rom @@po@pt (Rui Barradas)
Date: Sat, 13 Jul 2024 14:16:21 +0100
Subject: [R] Obtaining predicted probabilities for Logistic regression
In-Reply-To: <CA+dpOJ=GGZE6TTwky6pWPGxd+YKBTiK3YqFXAbAwgR_PpvvZLQ@mail.gmail.com>
References: <CA+dpOJ=GGZE6TTwky6pWPGxd+YKBTiK3YqFXAbAwgR_PpvvZLQ@mail.gmail.com>
Message-ID: <1cc2695d-6d7e-4fee-abbe-783de6d5e11c@sapo.pt>

?s 12:13 de 13/07/2024, Christofer Bogaso escreveu:
> Hi,
> 
> I ran below code
> 
> Dat = read.csv('https://raw.githubusercontent.com/sam16tyagi/Machine-Learning-techniques-in-python/master/logistic%20regression%20dataset-Social_Network_Ads.csv')
> head(Dat)
> Model = glm(Purchased ~ Gender, data = Dat, family = binomial())
> head(predict(Model, type="response"))
> My_Predict = 1/(1+exp(-1 * (as.vector(coef(Model))[1] *
> as.vector(coef(Model))[2] * ifelse(Dat['Gender'] == "Male", 1, 0))))
> head(My_Predict)
> 
> However, My_Predict and predict(Model, type="response")) are differing
> when I tried to manually calculate prediction.
> 
> Could you please help to identify what was the mistake I made?
> 
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
Hello,

Sometimes when there is an error, the best way to correct it is to 
rewrite the offending part of the code.
In your case, after as.vector(coef(Model))[1] you should have a plus sign.



Dat = 
read.csv('https://raw.githubusercontent.com/sam16tyagi/Machine-Learning-techniques-in-python/master/logistic%20regression%20dataset-Social_Network_Ads.csv')
head(Dat)
Model = glm(Purchased ~ Gender, data = Dat, family = binomial())

# use matrix algebra
x <- cbind(1, (Dat$Gender == "Male")) %*% coef(Model)
pred1 <- exp(x)/(1 + exp(x))

# use the fitted line equation
y <- coef(Model)[1L] + coef(Model)[2L] * (Dat$Gender == "Male")
pred2 <- exp(y)/(1 + exp(y))

head(predict(Model, type="response"))
head(pred1) |> c()
head(pred2)


Hope this helps,

Rui Barradas


-- 
Este e-mail foi analisado pelo software antiv?rus AVG para verificar a presen?a de v?rus.
www.avg.com


From bog@@o@chr|@to|er @end|ng |rom gm@||@com  Sat Jul 13 18:53:37 2024
From: bog@@o@chr|@to|er @end|ng |rom gm@||@com (Christofer Bogaso)
Date: Sat, 13 Jul 2024 22:23:37 +0530
Subject: [R] Obtaining predicted probabilities for Logistic regression
In-Reply-To: <1cc2695d-6d7e-4fee-abbe-783de6d5e11c@sapo.pt>
References: <CA+dpOJ=GGZE6TTwky6pWPGxd+YKBTiK3YqFXAbAwgR_PpvvZLQ@mail.gmail.com>
 <1cc2695d-6d7e-4fee-abbe-783de6d5e11c@sapo.pt>
Message-ID: <CA+dpOJkQfMDby9R990L9R9LKtsGoTsFMzw11fRKD55hLouHMyg@mail.gmail.com>

Many thanks.

May be I need to check my eyes before anything!!!

On Sat, Jul 13, 2024 at 6:46?PM Rui Barradas <ruipbarradas at sapo.pt> wrote:
>
> ?s 12:13 de 13/07/2024, Christofer Bogaso escreveu:
> > Hi,
> >
> > I ran below code
> >
> > Dat = read.csv('https://raw.githubusercontent.com/sam16tyagi/Machine-Learning-techniques-in-python/master/logistic%20regression%20dataset-Social_Network_Ads.csv')
> > head(Dat)
> > Model = glm(Purchased ~ Gender, data = Dat, family = binomial())
> > head(predict(Model, type="response"))
> > My_Predict = 1/(1+exp(-1 * (as.vector(coef(Model))[1] *
> > as.vector(coef(Model))[2] * ifelse(Dat['Gender'] == "Male", 1, 0))))
> > head(My_Predict)
> >
> > However, My_Predict and predict(Model, type="response")) are differing
> > when I tried to manually calculate prediction.
> >
> > Could you please help to identify what was the mistake I made?
> >
> > ______________________________________________
> > R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> > https://stat.ethz.ch/mailman/listinfo/r-help
> > PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> > and provide commented, minimal, self-contained, reproducible code.
> Hello,
>
> Sometimes when there is an error, the best way to correct it is to
> rewrite the offending part of the code.
> In your case, after as.vector(coef(Model))[1] you should have a plus sign.
>
>
>
> Dat =
> read.csv('https://raw.githubusercontent.com/sam16tyagi/Machine-Learning-techniques-in-python/master/logistic%20regression%20dataset-Social_Network_Ads.csv')
> head(Dat)
> Model = glm(Purchased ~ Gender, data = Dat, family = binomial())
>
> # use matrix algebra
> x <- cbind(1, (Dat$Gender == "Male")) %*% coef(Model)
> pred1 <- exp(x)/(1 + exp(x))
>
> # use the fitted line equation
> y <- coef(Model)[1L] + coef(Model)[2L] * (Dat$Gender == "Male")
> pred2 <- exp(y)/(1 + exp(y))
>
> head(predict(Model, type="response"))
> head(pred1) |> c()
> head(pred2)
>
>
> Hope this helps,
>
> Rui Barradas
>
>
> --
> Este e-mail foi analisado pelo software antiv?rus AVG para verificar a presen?a de v?rus.
> www.avg.com


