From v@r|n@@ch@ @end|ng |rom y@hoo@|r  Fri Apr  1 00:08:35 2022
From: v@r|n@@ch@ @end|ng |rom y@hoo@|r (varin sacha)
Date: Thu, 31 Mar 2022 22:08:35 +0000 (UTC)
Subject: [R] pcalg library : estimated DAG graph
References: <2065726392.779530.1648764515413.ref@mail.yahoo.com>
Message-ID: <2065726392.779530.1648764515413@mail.yahoo.com>

Dear R-experts,

Here below my R code working but I don't know how I can get the graph (estimated DAG). 
If you could help me to get the graph, many thanks.


###################
library(pcalg)

x1<-c(508,413,426,500,568,372,484,512,529,322,544,586,480,561,567,488,450,548,526,561,435,567,537,521,516,407,531,374,406,595,460,420,453,562,530)

x2<-c(531,491,353,522,341,493,431,565,530,441,403,498,552,513,513,403,445,424,529,486,519,492,397,579,479,511,535,504,465,520,517,528,542,483,499) 

x3<-c(541,451,510,649,329,464,511,609,643,530,568,366,371,442,611,437,445,589,605,456,437,179,540,580,587,540,505,310,542,488,525,483,200,517,513)

x4<-c(488,473,449,564,447,593,420,685,597,534,608,389,557,385,564,449,530,615,502,510,412,321,509,480,469,594,506,431,555,567,491,414,359,418,468) 

x5<-c(487,430,419,583,469,369,540,637,563,328,498,448,356,552,521,417,513,570,530,594,372,537,469,454,554,518,550,384,533,594,467,471,590,552,556)

x6<-c(511,452,432,563,431,458,477,601,572,431,524,458,463,491,555,439,477,549,539,521,435,419,490,523,521,514,525,401,500,553,492,463,429,506,513) 

X=cbind(x1,x2,x3,x4,x5,x6)

res1=lingam(X,verbose=TRUE)
cat("estimated DAG:/n")
as(res1,"amat")
res1
###################

?


From bgunter@4567 @end|ng |rom gm@||@com  Fri Apr  1 00:28:44 2022
From: bgunter@4567 @end|ng |rom gm@||@com (Bert Gunter)
Date: Thu, 31 Mar 2022 15:28:44 -0700
Subject: [R] pcalg library : estimated DAG graph
In-Reply-To: <2065726392.779530.1648764515413@mail.yahoo.com>
References: <2065726392.779530.1648764515413.ref@mail.yahoo.com>
 <2065726392.779530.1648764515413@mail.yahoo.com>
Message-ID: <CAGxFJbTAb7PL=Z8LnUj9Zwjy8VOP47tczGu1oVA_WENXwCxjTA@mail.gmail.com>

Getting help here on non-standard packages -- there are tens of thousands
-- is technically off topic (see the Posting Guide linked below) and hence
you should not be surprised if you do not get a useful reply, though you
may, of course.

You might have better luck posting on r-sig-networks,
https://stat.ethz.ch/mailman/listinfo/r-sig-networks, as it says on its
homepage that this SIG is specifically for those interested in "graph-
related software" within R.

Bert Gunter

"The trouble with having an open mind is that people keep coming along and
sticking things into it."
-- Opus (aka Berkeley Breathed in his "Bloom County" comic strip )


On Thu, Mar 31, 2022 at 3:06 PM varin sacha via R-help <r-help at r-project.org>
wrote:

> Dear R-experts,
>
> Here below my R code working but I don't know how I can get the graph
> (estimated DAG).
> If you could help me to get the graph, many thanks.
>
>
> ###################
> library(pcalg)
>
>
> x1<-c(508,413,426,500,568,372,484,512,529,322,544,586,480,561,567,488,450,548,526,561,435,567,537,521,516,407,531,374,406,595,460,420,453,562,530)
>
> x2<-c(531,491,353,522,341,493,431,565,530,441,403,498,552,513,513,403,445,424,529,486,519,492,397,579,479,511,535,504,465,520,517,528,542,483,499)
>
>
>
> x3<-c(541,451,510,649,329,464,511,609,643,530,568,366,371,442,611,437,445,589,605,456,437,179,540,580,587,540,505,310,542,488,525,483,200,517,513)
>
> x4<-c(488,473,449,564,447,593,420,685,597,534,608,389,557,385,564,449,530,615,502,510,412,321,509,480,469,594,506,431,555,567,491,414,359,418,468)
>
>
>
> x5<-c(487,430,419,583,469,369,540,637,563,328,498,448,356,552,521,417,513,570,530,594,372,537,469,454,554,518,550,384,533,594,467,471,590,552,556)
>
> x6<-c(511,452,432,563,431,458,477,601,572,431,524,458,463,491,555,439,477,549,539,521,435,419,490,523,521,514,525,401,500,553,492,463,429,506,513)
>
>
> X=cbind(x1,x2,x3,x4,x5,x6)
>
> res1=lingam(X,verbose=TRUE)
> cat("estimated DAG:/n")
> as(res1,"amat")
> res1
> ###################
>
>
>
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide
> http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>

	[[alternative HTML version deleted]]


From petr@p|k@| @end|ng |rom prechez@@cz  Fri Apr  1 07:24:58 2022
From: petr@p|k@| @end|ng |rom prechez@@cz (PIKAL Petr)
Date: Fri, 1 Apr 2022 05:24:58 +0000
Subject: [R] pcalg library : estimated DAG graph
In-Reply-To: <2065726392.779530.1648764515413@mail.yahoo.com>
References: <2065726392.779530.1648764515413.ref@mail.yahoo.com>
 <2065726392.779530.1648764515413@mail.yahoo.com>
Message-ID: <4bb323d6da7b4af086fae5bb995586c1@SRVEXCHCM1302.precheza.cz>

Hallo

It is not obvious what is your problem. You maybe should go through some 
articles about functions in the package.
https://pdfs.semanticscholar.org/aee5/cca63aad422c96ee637b5561bb051724d76c.pdf?_ga=2.241710466.1872226166.1648790330-1600227915.1617009045

or maybe you do not have Rgraphviz package installed as required by plotting 
functions of the package.

R> stopifnot(require(Rgraphviz))# needed for all our graph plots

Cheers
Petr

> -----Original Message-----
> From: R-help <r-help-bounces at r-project.org> On Behalf Of varin sacha via
> R-help
> Sent: Friday, April 1, 2022 12:09 AM
> To: r-help at r-project.org
> Subject: [R] pcalg library : estimated DAG graph
>
> Dear R-experts,
>
> Here below my R code working but I don't know how I can get the graph
> (estimated DAG).
> If you could help me to get the graph, many thanks.
>
>
> ###################
> library(pcalg)
>
> x1<-
> c(508,413,426,500,568,372,484,512,529,322,544,586,480,561,567,488,450,
> 548,526,561,435,567,537,521,516,407,531,374,406,595,460,420,453,562,53
> 0)
>
> x2<-
> c(531,491,353,522,341,493,431,565,530,441,403,498,552,513,513,403,445,
> 424,529,486,519,492,397,579,479,511,535,504,465,520,517,528,542,483,49
> 9)
>
> x3<-
> c(541,451,510,649,329,464,511,609,643,530,568,366,371,442,611,437,445,
> 589,605,456,437,179,540,580,587,540,505,310,542,488,525,483,200,517,51
> 3)
>
> x4<-
> c(488,473,449,564,447,593,420,685,597,534,608,389,557,385,564,449,530,
> 615,502,510,412,321,509,480,469,594,506,431,555,567,491,414,359,418,46
> 8)
>
> x5<-
> c(487,430,419,583,469,369,540,637,563,328,498,448,356,552,521,417,513,
> 570,530,594,372,537,469,454,554,518,550,384,533,594,467,471,590,552,55
> 6)
>
> x6<-
> c(511,452,432,563,431,458,477,601,572,431,524,458,463,491,555,439,477,
> 549,539,521,435,419,490,523,521,514,525,401,500,553,492,463,429,506,51
> 3)
>
> X=cbind(x1,x2,x3,x4,x5,x6)
>
> res1=lingam(X,verbose=TRUE)
> cat("estimated DAG:/n")
> as(res1,"amat")
> res1
> ###################
>
>
>
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-
> guide.html
> and provide commented, minimal, self-contained, reproducible code.

From p@tr|ck@g|r@udoux @end|ng |rom un|v-|comte@|r  Fri Apr  1 08:12:28 2022
From: p@tr|ck@g|r@udoux @end|ng |rom un|v-|comte@|r (Patrick Giraudoux)
Date: Fri, 1 Apr 2022 08:12:28 +0200
Subject: [R] readxl, read_excel: how colon (:) is read ?
Message-ID: <04b39c28-a42e-1a91-c446-82d53eb873b8@univ-fcomte.fr>

I have a unexpected behaviour reading times with colon from an Excel 
file, using the package readxl.

In an Excel sheet, I have a column with times in hours:minutes, e.g:

Arrival_time
13:39
13:51

When read from R with readxl::read_excel, this gives a tibble column 
with full date by defaut being the last day of 1899. OK. Why not, I know 
that POSIX variables are starting in 1900 after R doc (however I wonder 
why here the defaut is one day before January 1, 1900

> tmp$Arrival_time  [1] "1899-12-31 13:39:00 UTC" "1899-12-31 13:51:00 UTC"

Well, this is not exactly what I want to. I do not care about the year 
and the day... Therefore I decided to import this column as "text" 
explicitely (in order to manage it within R then). And this is what I 
get now:

> read_excel("saisie_data_durban_rapaces_LPO.xlsx",sheet=2,col_types="text")  > tmp$Arrival_time [1] "0.56875000000000009" "0.57708333333333328"

Can someone tell me what happens ?

I would really appreciate to understand the trick...


	[[alternative HTML version deleted]]


From @kw@|mmo @end|ng |rom gm@||@com  Fri Apr  1 08:26:33 2022
From: @kw@|mmo @end|ng |rom gm@||@com (Andrew Simmons)
Date: Fri, 1 Apr 2022 02:26:33 -0400
Subject: [R] readxl, read_excel: how colon (:) is read ?
In-Reply-To: <04b39c28-a42e-1a91-c446-82d53eb873b8@univ-fcomte.fr>
References: <04b39c28-a42e-1a91-c446-82d53eb873b8@univ-fcomte.fr>
Message-ID: <CAPcHnpTpPt90Y-T6HZSTNhoq=RFf=RLjn__PV-Xusc_ATdN0LA@mail.gmail.com>

Probably (but not entirely sure), Excel is storing your text as a number of
days, so 13:38 is a little more than half a day. Open your spreadsheet in
excel and save those columns as text instead of times, that (should) fix
your issue.

On Fri, Apr 1, 2022, 02:12 Patrick Giraudoux <
patrick.giraudoux at univ-fcomte.fr> wrote:

> I have a unexpected behaviour reading times with colon from an Excel
> file, using the package readxl.
>
> In an Excel sheet, I have a column with times in hours:minutes, e.g:
>
> Arrival_time
> 13:39
> 13:51
>
> When read from R with readxl::read_excel, this gives a tibble column
> with full date by defaut being the last day of 1899. OK. Why not, I know
> that POSIX variables are starting in 1900 after R doc (however I wonder
> why here the defaut is one day before January 1, 1900
>
> > tmp$Arrival_time  [1] "1899-12-31 13:39:00 UTC" "1899-12-31 13:51:00 UTC"
>
> Well, this is not exactly what I want to. I do not care about the year
> and the day... Therefore I decided to import this column as "text"
> explicitely (in order to manage it within R then). And this is what I
> get now:
>
> >
> read_excel("saisie_data_durban_rapaces_LPO.xlsx",sheet=2,col_types="text")
> > tmp$Arrival_time [1] "0.56875000000000009" "0.57708333333333328"
>
> Can someone tell me what happens ?
>
> I would really appreciate to understand the trick...
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide
> http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>

	[[alternative HTML version deleted]]


From p@tr|ck@g|r@udoux @end|ng |rom un|v-|comte@|r  Fri Apr  1 08:34:12 2022
From: p@tr|ck@g|r@udoux @end|ng |rom un|v-|comte@|r (Patrick Giraudoux)
Date: Fri, 1 Apr 2022 08:34:12 +0200
Subject: [R] readxl, read_excel: how colon (:) is read ?
In-Reply-To: <CAPcHnpTpPt90Y-T6HZSTNhoq=RFf=RLjn__PV-Xusc_ATdN0LA@mail.gmail.com>
References: <04b39c28-a42e-1a91-c446-82d53eb873b8@univ-fcomte.fr>
 <CAPcHnpTpPt90Y-T6HZSTNhoq=RFf=RLjn__PV-Xusc_ATdN0LA@mail.gmail.com>
Message-ID: <203cebec-5609-e41e-c4f9-1b5882058734@univ-fcomte.fr>

Absolutely correct ! I checked in Excel and when I change the format to 
"text", then I get in Excel the same fractional numbers as those 
obtained importing text from R... Hence the issue comes from Excel 
itself. Will find a way to change this format to text in Excel without 
avoiding such conversion...
Thanks Andrew !

Le 01/04/2022 ? 08:26, Andrew Simmons a ?crit?:
> Probably (but not entirely sure), Excel is storing your text as a 
> number of days, so 13:38 is a little more than half a day. Open your 
> spreadsheet in excel and save those columns as text instead of times, 
> that (should) fix your issue.
>
> On Fri, Apr 1, 2022, 02:12 Patrick Giraudoux 
> <patrick.giraudoux at univ-fcomte.fr> wrote:
>
>     I have a unexpected behaviour reading times with colon from an Excel
>     file, using the package readxl.
>
>     In an Excel sheet, I have a column with times in hours:minutes, e.g:
>
>     Arrival_time
>     13:39
>     13:51
>
>     When read from R with readxl::read_excel, this gives a tibble column
>     with full date by defaut being the last day of 1899. OK. Why not,
>     I know
>     that POSIX variables are starting in 1900 after R doc (however I
>     wonder
>     why here the defaut is one day before January 1, 1900
>
>     > tmp$Arrival_time? [1] "1899-12-31 13:39:00 UTC" "1899-12-31
>     13:51:00 UTC"
>
>     Well, this is not exactly what I want to. I do not care about the
>     year
>     and the day... Therefore I decided to import this column as "text"
>     explicitely (in order to manage it within R then). And this is what I
>     get now:
>
>     >
>     read_excel("saisie_data_durban_rapaces_LPO.xlsx",sheet=2,col_types="text")
>     > tmp$Arrival_time [1] "0.56875000000000009" "0.57708333333333328"
>
>     Can someone tell me what happens ?
>
>     I would really appreciate to understand the trick...
>
>
>     ? ? ? ? [[alternative HTML version deleted]]
>
>     ______________________________________________
>     R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>     https://stat.ethz.ch/mailman/listinfo/r-help
>     PLEASE do read the posting guide
>     http://www.R-project.org/posting-guide.html
>     <http://www.R-project.org/posting-guide.html>
>     and provide commented, minimal, self-contained, reproducible code.
>

	[[alternative HTML version deleted]]


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Fri Apr  1 08:40:48 2022
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Thu, 31 Mar 2022 23:40:48 -0700
Subject: [R] readxl, read_excel: how colon (:) is read ?
In-Reply-To: <04b39c28-a42e-1a91-c446-82d53eb873b8@univ-fcomte.fr>
References: <04b39c28-a42e-1a91-c446-82d53eb873b8@univ-fcomte.fr>
Message-ID: <DA8615A6-D08B-425C-9DBD-D5B118A75F2B@dcn.davis.ca.us>

Both R and Excel assume a date is associated with every time object. In Excel, when you show a date it is an integer number of days since 1899-12-31 (due to a mistake made early in programming it). Whenever you show a time, it it merely displaying the time portion (fraction of a day) of a date/time. The date part of that value may or may not be 1899-12-31.

With this in mind, you are tilting at windmills hoping to import a "pure time" because no such thing exists in either program. You can choose to render a `POSIXct` as showing only the time portion when you convert it to character if you so choose.

On March 31, 2022 11:12:28 PM PDT, Patrick Giraudoux <patrick.giraudoux at univ-fcomte.fr> wrote:
>I have a unexpected behaviour reading times with colon from an Excel 
>file, using the package readxl.
>
>In an Excel sheet, I have a column with times in hours:minutes, e.g:
>
>Arrival_time
>13:39
>13:51
>
>When read from R with readxl::read_excel, this gives a tibble column 
>with full date by defaut being the last day of 1899. OK. Why not, I know 
>that POSIX variables are starting in 1900 after R doc (however I wonder 
>why here the defaut is one day before January 1, 1900
>
>> tmp$Arrival_time  [1] "1899-12-31 13:39:00 UTC" "1899-12-31 13:51:00 UTC"
>
>Well, this is not exactly what I want to. I do not care about the year 
>and the day... Therefore I decided to import this column as "text" 
>explicitely (in order to manage it within R then). And this is what I 
>get now:
>
>> read_excel("saisie_data_durban_rapaces_LPO.xlsx",sheet=2,col_types="text")  > tmp$Arrival_time [1] "0.56875000000000009" "0.57708333333333328"
>
>Can someone tell me what happens ?
>
>I would really appreciate to understand the trick...
>
>
>	[[alternative HTML version deleted]]
>
>______________________________________________
>R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>https://stat.ethz.ch/mailman/listinfo/r-help
>PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
>and provide commented, minimal, self-contained, reproducible code.

-- 
Sent from my phone. Please excuse my brevity.


From p@tr|ck@g|r@udoux @end|ng |rom un|v-|comte@|r  Fri Apr  1 08:41:42 2022
From: p@tr|ck@g|r@udoux @end|ng |rom un|v-|comte@|r (Patrick Giraudoux)
Date: Fri, 1 Apr 2022 08:41:42 +0200
Subject: [R] readxl, read_excel: how colon (:) is read ?
In-Reply-To: <203cebec-5609-e41e-c4f9-1b5882058734@univ-fcomte.fr>
References: <04b39c28-a42e-1a91-c446-82d53eb873b8@univ-fcomte.fr>
 <CAPcHnpTpPt90Y-T6HZSTNhoq=RFf=RLjn__PV-Xusc_ATdN0LA@mail.gmail.com>
 <203cebec-5609-e41e-c4f9-1b5882058734@univ-fcomte.fr>
Message-ID: <54a0a66a-91a3-b245-8dd6-c2601824837b@univ-fcomte.fr>

This can be made using the TEXT (TEXTE in the French version) function 
of Excel, hence:

TEXT(M2;"HH:MM")

Changes the time into text, and it can be imported from R as wanted.



Le 01/04/2022 ? 08:34, Patrick Giraudoux a ?crit?:
> Absolutely correct ! I checked in Excel and when I change the format 
> to "text", then I get in Excel the same fractional numbers as those 
> obtained importing text from R... Hence the issue comes from Excel 
> itself. Will find a way to change this format to text in Excel without 
> avoiding such conversion...
> Thanks Andrew !
>
> Le 01/04/2022 ? 08:26, Andrew Simmons a ?crit?:
>> Probably (but not entirely sure), Excel is storing your text as a 
>> number of days, so 13:38 is a little more than half a day. Open your 
>> spreadsheet in excel and save those columns as text instead of times, 
>> that (should) fix your issue.
>>
>> On Fri, Apr 1, 2022, 02:12 Patrick Giraudoux 
>> <patrick.giraudoux at univ-fcomte.fr> wrote:
>>
>>     I have a unexpected behaviour reading times with colon from an Excel
>>     file, using the package readxl.
>>
>>     In an Excel sheet, I have a column with times in hours:minutes, e.g:
>>
>>     Arrival_time
>>     13:39
>>     13:51
>>
>>     When read from R with readxl::read_excel, this gives a tibble column
>>     with full date by defaut being the last day of 1899. OK. Why not,
>>     I know
>>     that POSIX variables are starting in 1900 after R doc (however I
>>     wonder
>>     why here the defaut is one day before January 1, 1900
>>
>>     > tmp$Arrival_time? [1] "1899-12-31 13:39:00 UTC" "1899-12-31
>>     13:51:00 UTC"
>>
>>     Well, this is not exactly what I want to. I do not care about the
>>     year
>>     and the day... Therefore I decided to import this column as "text"
>>     explicitely (in order to manage it within R then). And this is
>>     what I
>>     get now:
>>
>>     >
>>     read_excel("saisie_data_durban_rapaces_LPO.xlsx",sheet=2,col_types="text")
>>     > tmp$Arrival_time [1] "0.56875000000000009" "0.57708333333333328"
>>
>>     Can someone tell me what happens ?
>>
>>     I would really appreciate to understand the trick...
>>
>>
>>     ? ? ? ? [[alternative HTML version deleted]]
>>
>>     ______________________________________________
>>     R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>>     https://stat.ethz.ch/mailman/listinfo/r-help
>>     PLEASE do read the posting guide
>>     http://www.R-project.org/posting-guide.html
>>     <http://www.R-project.org/posting-guide.html>
>>     and provide commented, minimal, self-contained, reproducible code.
>>
>

	[[alternative HTML version deleted]]


From p@tr|ck@g|r@udoux @end|ng |rom un|v-|comte@|r  Fri Apr  1 08:46:05 2022
From: p@tr|ck@g|r@udoux @end|ng |rom un|v-|comte@|r (Patrick Giraudoux)
Date: Fri, 1 Apr 2022 08:46:05 +0200
Subject: [R] readxl, read_excel: how colon (:) is read ?
In-Reply-To: <DA8615A6-D08B-425C-9DBD-D5B118A75F2B@dcn.davis.ca.us>
References: <04b39c28-a42e-1a91-c446-82d53eb873b8@univ-fcomte.fr>
 <DA8615A6-D08B-425C-9DBD-D5B118A75F2B@dcn.davis.ca.us>
Message-ID: <a833a236-2ce3-9dfe-9aeb-ad29bfb152c6@univ-fcomte.fr>

Le 01/04/2022 ? 08:40, Jeff Newmiller a ?crit?:
> Both R and Excel assume a date is associated with every time object. In Excel, when you show a date it is an integer number of days since 1899-12-31 (due to a mistake made early in programming it). Whenever you show a time, it it merely displaying the time portion (fraction of a day) of a date/time. The date part of that value may or may not be 1899-12-31.
>
> With this in mind, you are tilting at windmills hoping to import a "pure time" because no such thing exists in either program. You can choose to render a `POSIXct` as showing only the time portion when you convert it to character if you so choose.

Thanks for the infos. Yes, this is exactly what? I did yesterday with 
POSIXct > POSIXlt to go ahead. However I wanted to understand fully what 
happened, hence the call to the list. Jeff and Andrew, now eveything is 
clear to me thanks to you...


	[[alternative HTML version deleted]]


From ru|pb@rr@d@@ @end|ng |rom @@po@pt  Fri Apr  1 09:09:02 2022
From: ru|pb@rr@d@@ @end|ng |rom @@po@pt (Rui Barradas)
Date: Fri, 1 Apr 2022 08:09:02 +0100
Subject: [R] readxl, read_excel: how colon (:) is read ?
In-Reply-To: <04b39c28-a42e-1a91-c446-82d53eb873b8@univ-fcomte.fr>
References: <04b39c28-a42e-1a91-c446-82d53eb873b8@univ-fcomte.fr>
Message-ID: <cbea4019-7fb0-8eb6-115e-0b3671677a8a@sapo.pt>

Hello,

The following function is probably not very solid, to work with dates 
and times is not trivial, but it converts those Excel numbers correctly.

I don't know with what numbers it fails.


xl_fracday_to_time <- function(x, digits = 0L) {
   old_opts <- options(digits = 20)
   on.exit(options(old_opts))
   if(is.character(x)) {
     x <- as.numeric(x)
   }
   y <- x * 24
   hours <- floor(y + .Machine$double.eps^0.5)
   y <- (y - hours) * 60
   mins <- floor(y + .Machine$double.eps^0.5)
   y <- (y - mins) * 60
   secs <- round(y, digits = digits)
   sprintf("%02d:%02d:%02d", hours, mins, secs)
}

x <- c("0.56875000000000009", "0.57708333333333328")
xl_fracday_to_time(x)
#[1] "13:39:00" "13:51:00"


Hope this helps,

Rui Barradas

?s 07:12 de 01/04/2022, Patrick Giraudoux escreveu:
> I have a unexpected behaviour reading times with colon from an Excel
> file, using the package readxl.
> 
> In an Excel sheet, I have a column with times in hours:minutes, e.g:
> 
> Arrival_time
> 13:39
> 13:51
> 
> When read from R with readxl::read_excel, this gives a tibble column
> with full date by defaut being the last day of 1899. OK. Why not, I know
> that POSIX variables are starting in 1900 after R doc (however I wonder
> why here the defaut is one day before January 1, 1900
> 
>> tmp$Arrival_time  [1] "1899-12-31 13:39:00 UTC" "1899-12-31 13:51:00 UTC"
> 
> Well, this is not exactly what I want to. I do not care about the year
> and the day... Therefore I decided to import this column as "text"
> explicitely (in order to manage it within R then). And this is what I
> get now:
> 
>> read_excel("saisie_data_durban_rapaces_LPO.xlsx",sheet=2,col_types="text")  > tmp$Arrival_time [1] "0.56875000000000009" "0.57708333333333328"
> 
> Can someone tell me what happens ?
> 
> I would really appreciate to understand the trick...
> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.


From p@tr|ck@g|r@udoux @end|ng |rom un|v-|comte@|r  Fri Apr  1 09:50:05 2022
From: p@tr|ck@g|r@udoux @end|ng |rom un|v-|comte@|r (Patrick Giraudoux)
Date: Fri, 1 Apr 2022 09:50:05 +0200
Subject: [R] readxl, read_excel: how colon (:) is read ?
In-Reply-To: <cbea4019-7fb0-8eb6-115e-0b3671677a8a@sapo.pt>
References: <04b39c28-a42e-1a91-c446-82d53eb873b8@univ-fcomte.fr>
 <cbea4019-7fb0-8eb6-115e-0b3671677a8a@sapo.pt>
Message-ID: <4aa35965-37e0-8883-2447-a7dd57d4d9f0@univ-fcomte.fr>

Thanks ! An option is also to import from excel as a text, hence getting 
a fractional number of day as character. With as.numeric, it can be 
converted to numeric. The conversion into any unit of a day (hour, 
minutes, etc.) is then easy...
 ?eg. 0.5*24 = 12 hours


Le 01/04/2022 ? 09:09, Rui Barradas a ?crit?:
> Hello,
>
> The following function is probably not very solid, to work with dates 
> and times is not trivial, but it converts those Excel numbers correctly.
>
> I don't know with what numbers it fails.
>
>
> xl_fracday_to_time <- function(x, digits = 0L) {
> ? old_opts <- options(digits = 20)
> ? on.exit(options(old_opts))
> ? if(is.character(x)) {
> ??? x <- as.numeric(x)
> ? }
> ? y <- x * 24
> ? hours <- floor(y + .Machine$double.eps^0.5)
> ? y <- (y - hours) * 60
> ? mins <- floor(y + .Machine$double.eps^0.5)
> ? y <- (y - mins) * 60
> ? secs <- round(y, digits = digits)
> ? sprintf("%02d:%02d:%02d", hours, mins, secs)
> }
>
> x <- c("0.56875000000000009", "0.57708333333333328")
> xl_fracday_to_time(x)
> #[1] "13:39:00" "13:51:00"
>
>
> Hope this helps,
>
> Rui Barradas
>
> ?s 07:12 de 01/04/2022, Patrick Giraudoux escreveu:
>> I have a unexpected behaviour reading times with colon from an Excel
>> file, using the package readxl.
>>
>> In an Excel sheet, I have a column with times in hours:minutes, e.g:
>>
>> Arrival_time
>> 13:39
>> 13:51
>>
>> When read from R with readxl::read_excel, this gives a tibble column
>> with full date by defaut being the last day of 1899. OK. Why not, I know
>> that POSIX variables are starting in 1900 after R doc (however I wonder
>> why here the defaut is one day before January 1, 1900
>>
>>> tmp$Arrival_time? [1] "1899-12-31 13:39:00 UTC" "1899-12-31 13:51:00 
>>> UTC"
>>
>> Well, this is not exactly what I want to. I do not care about the year
>> and the day... Therefore I decided to import this column as "text"
>> explicitely (in order to manage it within R then). And this is what I
>> get now:
>>
>>> read_excel("saisie_data_durban_rapaces_LPO.xlsx",sheet=2,col_types="text") 
>>> > tmp$Arrival_time [1] "0.56875000000000009" "0.57708333333333328"
>>
>> Can someone tell me what happens ?
>>
>> I would really appreciate to understand the trick...
>>
>>
>> ????[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>> https://stat.ethz.ch/mailman/listinfo/r-help
>> PLEASE do read the posting guide 
>> http://www.R-project.org/posting-guide.html
>> and provide commented, minimal, self-contained, reproducible code.


	[[alternative HTML version deleted]]


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Fri Apr  1 09:53:01 2022
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Fri, 01 Apr 2022 00:53:01 -0700
Subject: [R] readxl, read_excel: how colon (:) is read ?
In-Reply-To: <cbea4019-7fb0-8eb6-115e-0b3671677a8a@sapo.pt>
References: <04b39c28-a42e-1a91-c446-82d53eb873b8@univ-fcomte.fr>
 <cbea4019-7fb0-8eb6-115e-0b3671677a8a@sapo.pt>
Message-ID: <23804918-C4AA-47B6-B498-BD128F5CE689@dcn.davis.ca.us>

Why not simply let readxl read the timestamp as it will naturally and use

    dta$Arrival_time_c <- as.character( dta$Arrival_time, format = "%H:%M" )

... though time data in such a form is remarkably useless for data analysis.

On April 1, 2022 12:09:02 AM PDT, Rui Barradas <ruipbarradas at sapo.pt> wrote:
>Hello,
>
>The following function is probably not very solid, to work with dates 
>and times is not trivial, but it converts those Excel numbers correctly.
>
>I don't know with what numbers it fails.
>
>
>xl_fracday_to_time <- function(x, digits = 0L) {
>   old_opts <- options(digits = 20)
>   on.exit(options(old_opts))
>   if(is.character(x)) {
>     x <- as.numeric(x)
>   }
>   y <- x * 24
>   hours <- floor(y + .Machine$double.eps^0.5)
>   y <- (y - hours) * 60
>   mins <- floor(y + .Machine$double.eps^0.5)
>   y <- (y - mins) * 60
>   secs <- round(y, digits = digits)
>   sprintf("%02d:%02d:%02d", hours, mins, secs)
>}
>
>x <- c("0.56875000000000009", "0.57708333333333328")
>xl_fracday_to_time(x)
>#[1] "13:39:00" "13:51:00"
>
>
>Hope this helps,
>
>Rui Barradas
>
>?s 07:12 de 01/04/2022, Patrick Giraudoux escreveu:
>> I have a unexpected behaviour reading times with colon from an Excel
>> file, using the package readxl.
>> 
>> In an Excel sheet, I have a column with times in hours:minutes, e.g:
>> 
>> Arrival_time
>> 13:39
>> 13:51
>> 
>> When read from R with readxl::read_excel, this gives a tibble column
>> with full date by defaut being the last day of 1899. OK. Why not, I know
>> that POSIX variables are starting in 1900 after R doc (however I wonder
>> why here the defaut is one day before January 1, 1900
>> 
>>> tmp$Arrival_time  [1] "1899-12-31 13:39:00 UTC" "1899-12-31 13:51:00 UTC"
>> 
>> Well, this is not exactly what I want to. I do not care about the year
>> and the day... Therefore I decided to import this column as "text"
>> explicitely (in order to manage it within R then). And this is what I
>> get now:
>> 
>>> read_excel("saisie_data_durban_rapaces_LPO.xlsx",sheet=2,col_types="text")  > tmp$Arrival_time [1] "0.56875000000000009" "0.57708333333333328"
>> 
>> Can someone tell me what happens ?
>> 
>> I would really appreciate to understand the trick...
>> 
>> 
>> 	[[alternative HTML version deleted]]
>> 
>> ______________________________________________
>> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>> https://stat.ethz.ch/mailman/listinfo/r-help
>> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
>> and provide commented, minimal, self-contained, reproducible code.
>
>______________________________________________
>R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>https://stat.ethz.ch/mailman/listinfo/r-help
>PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
>and provide commented, minimal, self-contained, reproducible code.

-- 
Sent from my phone. Please excuse my brevity.


From pj@|nh@07 @end|ng |rom gm@||@com  Fri Apr  1 01:00:20 2022
From: pj@|nh@07 @end|ng |rom gm@||@com (pooja sinha)
Date: Thu, 31 Mar 2022 19:00:20 -0400
Subject: [R] Violin plots in R
Message-ID: <CAGjf1cOgGf_hnfyG5msuAFERJOc1wo3f9vTXNYHaP_JH08XBXQ@mail.gmail.com>

Hi All,

I need your help in making the violin plot in R using the data which is
attached herewith. I am new to R and having issues in tidying my data for
R. I am trying the code but I am not able to tidy my data for violin plot
in ggplot.

Any help will be highly appreciated.

Thanks,
Puja

From er|cjberger @end|ng |rom gm@||@com  Fri Apr  1 11:32:41 2022
From: er|cjberger @end|ng |rom gm@||@com (Eric Berger)
Date: Fri, 1 Apr 2022 12:32:41 +0300
Subject: [R] Violin plots in R
In-Reply-To: <CAGjf1cOgGf_hnfyG5msuAFERJOc1wo3f9vTXNYHaP_JH08XBXQ@mail.gmail.com>
References: <CAGjf1cOgGf_hnfyG5msuAFERJOc1wo3f9vTXNYHaP_JH08XBXQ@mail.gmail.com>
Message-ID: <CAGgJW76PFX9=cmvNNuCh94eRmdEoqHPyQJnpVvBKTk0rTFZ3zg@mail.gmail.com>

1. Your data was not attached.
2. You should show the code that you tried so that people can find the
problem(s).
3. have you tried searching the web for examples that work? A quick search
gave this site which looked relevant

http://www.sthda.com/english/wiki/ggplot2-violin-plot-quick-start-guide-r-software-and-data-visualization


On Fri, Apr 1, 2022 at 12:12 PM pooja sinha <pjsinha07 at gmail.com> wrote:

> Hi All,
>
> I need your help in making the violin plot in R using the data which is
> attached herewith. I am new to R and having issues in tidying my data for
> R. I am trying the code but I am not able to tidy my data for violin plot
> in ggplot.
>
> Any help will be highly appreciated.
>
> Thanks,
> Puja
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide
> http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>

	[[alternative HTML version deleted]]


From tebert @end|ng |rom u||@edu  Fri Apr  1 11:34:53 2022
From: tebert @end|ng |rom u||@edu (Ebert,Timothy Aaron)
Date: Fri, 1 Apr 2022 09:34:53 +0000
Subject: [R] Violin plots in R
In-Reply-To: <CAGjf1cOgGf_hnfyG5msuAFERJOc1wo3f9vTXNYHaP_JH08XBXQ@mail.gmail.com>
References: <CAGjf1cOgGf_hnfyG5msuAFERJOc1wo3f9vTXNYHaP_JH08XBXQ@mail.gmail.com>
Message-ID: <BN6PR2201MB1553646A54C40A35565E49FACFE09@BN6PR2201MB1553.namprd22.prod.outlook.com>

No data. Attachments are removed. Send only text. Include program. Did you look at geom_violin() ? try http://www.sthda.com/english/wiki/ggplot2-violin-plot-quick-start-guide-r-software-and-data-visualization

If geom_point() is working then geom_violin() should also work. If neither work then the problem is earlier in the program. Possibly in the ggplot() statement, or earlier.
Tim

-----Original Message-----
From: R-help <r-help-bounces at r-project.org> On Behalf Of pooja sinha
Sent: Thursday, March 31, 2022 7:00 PM
To: r-help mailing list <r-help at r-project.org>
Subject: [R] Violin plots in R

[External Email]

Hi All,

I need your help in making the violin plot in R using the data which is attached herewith. I am new to R and having issues in tidying my data for R. I am trying the code but I am not able to tidy my data for violin plot in ggplot.

Any help will be highly appreciated.

Thanks,
Puja
______________________________________________
R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dhelp&d=DwICAg&c=sJ6xIWYx-zLMB3EPkvcnVg&r=9PEhQh2kVeAsRzsn7AkP-g&m=ewsSBA7yD-EGNgEo5uwx8ypGde2s8cN0NqRJcjUeat_oxJOzxc4u1RoS4APbTp-G&s=5RT-EbmPWAiqxd-tCyTCK3tUPOmNomYvRoE-pgEKXMk&e=
PLEASE do read the posting guide https://urldefense.proofpoint.com/v2/url?u=http-3A__www.R-2Dproject.org_posting-2Dguide.html&d=DwICAg&c=sJ6xIWYx-zLMB3EPkvcnVg&r=9PEhQh2kVeAsRzsn7AkP-g&m=ewsSBA7yD-EGNgEo5uwx8ypGde2s8cN0NqRJcjUeat_oxJOzxc4u1RoS4APbTp-G&s=FhxhDOcldxc5mIg1wiE5kq4D_sxIm1Ho0PbejAHl8xY&e=
and provide commented, minimal, self-contained, reproducible code.


From petr@p|k@| @end|ng |rom prechez@@cz  Fri Apr  1 14:58:55 2022
From: petr@p|k@| @end|ng |rom prechez@@cz (PIKAL Petr)
Date: Fri, 1 Apr 2022 12:58:55 +0000
Subject: [R] Violin plots in R
In-Reply-To: <BN6PR2201MB1553646A54C40A35565E49FACFE09@BN6PR2201MB1553.namprd22.prod.outlook.com>
References: <CAGjf1cOgGf_hnfyG5msuAFERJOc1wo3f9vTXNYHaP_JH08XBXQ@mail.gmail.com>
 <BN6PR2201MB1553646A54C40A35565E49FACFE09@BN6PR2201MB1553.namprd22.prod.outlook.com>
Message-ID: <fc563a5b5c6a4aeba1353ba31d4980ae@SRVEXCHCM1302.precheza.cz>

Hi.

Beside advice of others, at least 

str(yourdata)
and the ggplot code is minimum for us to be able to offer some advice.

Preferable way how to send your data is output from

dput(yourdata) or dput(head(yourdata))

Just copy paste to your email.

Cheers
Petr

> -----Original Message-----
> From: R-help <r-help-bounces at r-project.org> On Behalf Of Ebert,Timothy
> Aaron
> Sent: Friday, April 1, 2022 11:35 AM
> To: pooja sinha <pjsinha07 at gmail.com>; r-help mailing list <r-help at r-
> project.org>
> Subject: Re: [R] Violin plots in R
> 
> No data. Attachments are removed. Send only text. Include program. Did you
> look at geom_violin() ? try http://www.sthda.com/english/wiki/ggplot2-
> violin-plot-quick-start-guide-r-software-and-data-visualization
> 
> If geom_point() is working then geom_violin() should also work. If neither
> work then the problem is earlier in the program. Possibly in the ggplot()
> statement, or earlier.
> Tim
> 
> -----Original Message-----
> From: R-help <r-help-bounces at r-project.org> On Behalf Of pooja sinha
> Sent: Thursday, March 31, 2022 7:00 PM
> To: r-help mailing list <r-help at r-project.org>
> Subject: [R] Violin plots in R
> 
> [External Email]
> 
> Hi All,
> 
> I need your help in making the violin plot in R using the data which is
> attached herewith. I am new to R and having issues in tidying my data for
R. I
> am trying the code but I am not able to tidy my data for violin plot in
ggplot.
> 
> Any help will be highly appreciated.
> 
> Thanks,
> Puja
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://urldefense.proofpoint.com/v2/url?u=https-
> 3A__stat.ethz.ch_mailman_listinfo_r-2Dhelp&d=DwICAg&c=sJ6xIWYx-
> zLMB3EPkvcnVg&r=9PEhQh2kVeAsRzsn7AkP-g&m=ewsSBA7yD-
> EGNgEo5uwx8ypGde2s8cN0NqRJcjUeat_oxJOzxc4u1RoS4APbTp-G&s=5RT-
> EbmPWAiqxd-tCyTCK3tUPOmNomYvRoE-pgEKXMk&e=
> PLEASE do read the posting guide
> https://urldefense.proofpoint.com/v2/url?u=http-3A__www.R-
> 2Dproject.org_posting-2Dguide.html&d=DwICAg&c=sJ6xIWYx-
> zLMB3EPkvcnVg&r=9PEhQh2kVeAsRzsn7AkP-g&m=ewsSBA7yD-
> EGNgEo5uwx8ypGde2s8cN0NqRJcjUeat_oxJOzxc4u1RoS4APbTp-
> G&s=FhxhDOcldxc5mIg1wiE5kq4D_sxIm1Ho0PbejAHl8xY&e=
> and provide commented, minimal, self-contained, reproducible code.
> 
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-
> guide.html
> and provide commented, minimal, self-contained, reproducible code.

From pj@|nh@07 @end|ng |rom gm@||@com  Fri Apr  1 15:22:02 2022
From: pj@|nh@07 @end|ng |rom gm@||@com (pooja sinha)
Date: Fri, 1 Apr 2022 09:22:02 -0400
Subject: [R] Violin plots in R
In-Reply-To: <fc563a5b5c6a4aeba1353ba31d4980ae@SRVEXCHCM1302.precheza.cz>
References: <CAGjf1cOgGf_hnfyG5msuAFERJOc1wo3f9vTXNYHaP_JH08XBXQ@mail.gmail.com>
 <BN6PR2201MB1553646A54C40A35565E49FACFE09@BN6PR2201MB1553.namprd22.prod.outlook.com>
 <fc563a5b5c6a4aeba1353ba31d4980ae@SRVEXCHCM1302.precheza.cz>
Message-ID: <CAGjf1cNDL3Hwga9hXTNyWzD-P7P8UqBqD8JPG2j5xS8dWwe6TA@mail.gmail.com>

Thanks, I will do that.


Puja

On Fri, Apr 1, 2022 at 8:58 AM PIKAL Petr <petr.pikal at precheza.cz> wrote:

> Hi.
>
> Beside advice of others, at least
>
> str(yourdata)
> and the ggplot code is minimum for us to be able to offer some advice.
>
> Preferable way how to send your data is output from
>
> dput(yourdata) or dput(head(yourdata))
>
> Just copy paste to your email.
>
> Cheers
> Petr
>
> > -----Original Message-----
> > From: R-help <r-help-bounces at r-project.org> On Behalf Of Ebert,Timothy
> > Aaron
> > Sent: Friday, April 1, 2022 11:35 AM
> > To: pooja sinha <pjsinha07 at gmail.com>; r-help mailing list <r-help at r-
> > project.org>
> > Subject: Re: [R] Violin plots in R
> >
> > No data. Attachments are removed. Send only text. Include program. Did
> you
> > look at geom_violin() ? try http://www.sthda.com/english/wiki/ggplot2-
> > violin-plot-quick-start-guide-r-software-and-data-visualization
> >
> > If geom_point() is working then geom_violin() should also work. If
> neither
> > work then the problem is earlier in the program. Possibly in the ggplot()
> > statement, or earlier.
> > Tim
> >
> > -----Original Message-----
> > From: R-help <r-help-bounces at r-project.org> On Behalf Of pooja sinha
> > Sent: Thursday, March 31, 2022 7:00 PM
> > To: r-help mailing list <r-help at r-project.org>
> > Subject: [R] Violin plots in R
> >
> > [External Email]
> >
> > Hi All,
> >
> > I need your help in making the violin plot in R using the data which is
> > attached herewith. I am new to R and having issues in tidying my data for
> R. I
> > am trying the code but I am not able to tidy my data for violin plot in
> ggplot.
> >
> > Any help will be highly appreciated.
> >
> > Thanks,
> > Puja
> > ______________________________________________
> > R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> > https://urldefense.proofpoint.com/v2/url?u=https-
> > 3A__stat.ethz.ch_mailman_listinfo_r-2Dhelp&d=DwICAg&c=sJ6xIWYx-
> > zLMB3EPkvcnVg&r=9PEhQh2kVeAsRzsn7AkP-g&m=ewsSBA7yD-
> > EGNgEo5uwx8ypGde2s8cN0NqRJcjUeat_oxJOzxc4u1RoS4APbTp-G&s=5RT-
> > EbmPWAiqxd-tCyTCK3tUPOmNomYvRoE-pgEKXMk&e=
> > PLEASE do read the posting guide
> > https://urldefense.proofpoint.com/v2/url?u=http-3A__www.R-
> > 2Dproject.org_posting-2Dguide.html&d=DwICAg&c=sJ6xIWYx-
> > zLMB3EPkvcnVg&r=9PEhQh2kVeAsRzsn7AkP-g&m=ewsSBA7yD-
> > EGNgEo5uwx8ypGde2s8cN0NqRJcjUeat_oxJOzxc4u1RoS4APbTp-
> > G&s=FhxhDOcldxc5mIg1wiE5kq4D_sxIm1Ho0PbejAHl8xY&e=
> > and provide commented, minimal, self-contained, reproducible code.
> >
> > ______________________________________________
> > R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> > https://stat.ethz.ch/mailman/listinfo/r-help
> > PLEASE do read the posting guide http://www.R-project.org/posting-
> > guide.html
> > and provide commented, minimal, self-contained, reproducible code.
>

	[[alternative HTML version deleted]]


From j|ox @end|ng |rom mcm@@ter@c@  Fri Apr  1 17:16:18 2022
From: j|ox @end|ng |rom mcm@@ter@c@ (John Fox)
Date: Fri, 1 Apr 2022 11:16:18 -0400
Subject: [R] 25th anniversary of R-help & new rules for the list
Message-ID: <21bf137e-afc8-11a1-65c3-195f6d674944@mcmaster.ca>

Dear R-help list members,

The first message to the R-help email list was posted by Ross Ihaka 25 
years ago, on April 1, 1997!

On this 25th anniversary of R-help, the official description of the list 
and the rules for posting to it have been modified. The general object 
of these changes is to broaden the topics that are legitimately 
discussed on the R-help list, partly to reflect how the list actually is 
used.

The description of the list at <https://www.r-project.org/mail.html> now 
reads:

------------ snip --------------

The ?main? R mailing list, for discussion about problems and solutions 
encountered using R, including using R packages in the standard R 
distribution and on CRAN; announcements (not covered by R-announce or 
R-packages); the availability of new functionality for R and 
documentation of R; and for posting nice examples and benchmarks.

This is quite an active list with many messages per day. An alternative 
is to subscribe and choose daily digests (in plain or MIME format). Use 
the web interface for information, subscription, archives, etc.

Please read the posting guide before sending a message to the list. In 
particular, if asking for help with a problem, it is important to be 
clear and concrete, and it is almost always advisable to send a minimal 
reproducible example of the problem.

There are many more specific R email lists (see below under ?Special 
Interest Groups?). If a problem is appropriate for one of the more 
specific lists, you are usually more likely to get help by posting to 
the more specific list. For example, a problem specific to R under macOS 
should normally be posted to the R-SIG-Mac list, and a problem 
concerning R software for mixed-effects models should normally be posted 
to the R-SIG-mixed-models list.

R-help is not intended for help with homework or basic-statistics questions.

Bugs in contributed CRAN packages should normally be reported directly 
to the package maintainer (enter the command 
maintainer("package-name")). You may also be able to obtain help with a 
problem from the package maintainer.

Help with R problems is available from a number of sources beyond the R 
email lists. See under ?Help? at the R home page.

------------ snip --------------

We have also modified the brief description of the R-help list in the 
posting guide at <https://www.r-project.org/posting-guide.html> and 
(eventually) in the R FAQ.

Best,
John Fox

For the R Foundation
-- 
John Fox, Professor Emeritus
McMaster University
Hamilton, Ontarion, Canada
web: https://socialsciences.mcmaster.ca/jfox/


From @erv|ce @end|ng |rom @hd@w@on@com  Fri Apr  1 17:23:20 2022
From: @erv|ce @end|ng |rom @hd@w@on@com (Stephen H. Dawson, DSL)
Date: Fri, 1 Apr 2022 11:23:20 -0400
Subject: [R] Recommended Statistics Papers and Packages
Message-ID: <f33867b3-5087-0c5e-cf5d-34c79e5f97d4@shdawson.com>

Good Morning,


I have been doing some further reading on the topic of statistics 
lately. I enjoyed reading the following material. I am writing to share 
the material with the list as recommended reading on the respective topics.


Estimating the number of clusters in a data set via the gap statistic
https://hastie.su.domains/Papers/gap.pdf



Package ?FNN?
https://cran.r-project.org/web/packages/FNN/FNN.pdf



The Relationship Between Precision-Recall and ROC Curves
https://www.biostat.wisc.edu/~page/rocpr.pdf


Enjoy!


Kindest Regards
-- 
*Stephen Dawson, DSL*
/Executive Strategy Consultant/
Business & Technology
+1 (865) 804-3454
http://www.shdawson.com


From g@@mo||n@k|1 @end|ng |rom gm@||@com  Fri Apr  1 21:50:01 2022
From: g@@mo||n@k|1 @end|ng |rom gm@||@com (=?UTF-8?Q?Grzegorz_Smoli=C5=84ski?=)
Date: Fri, 1 Apr 2022 21:50:01 +0200
Subject: [R] Modificatio of function body within a function
Message-ID: <CABxpnnnkEvQceozk4yHaDJruTobUuno5Prhs8n5xmnFkpKdyDg@mail.gmail.com>

Hi,

I'm working on a presentation regarding the modification of the
function body on-the-fly and just discovered something I don't
understand. I would like to modify a body of the function within a
function, but I see that it is possible only when explicitly referring
to the environment where the function is defined:

fun1 <- function() {
  1
  body(fun1)[[2]] <- "one"
}
fun1()
body(fun1)
#> {
#>     1
#>     body(fun1)[[2]] <- "one"
#> }

fun2 <- function() {
  2
  env <- environment(fun2)
  body(env$fun2)[[2]] <- "two"
}
fun2()
body(fun2)
#> {
#>     "two"
#>     env <- environment(fun2)
#>     body(env$fun2)[[2]] <- "two"
#> }

Can I get some explanation or some links / articles about this,
please? I thought it won't be a difference and I should be able to
modify a function body also in the first case, because I'm changing
something in the parent environment being in the child environment.

Best regards,

Grzegorz


From bgunter@4567 @end|ng |rom gm@||@com  Fri Apr  1 23:12:28 2022
From: bgunter@4567 @end|ng |rom gm@||@com (Bert Gunter)
Date: Fri, 1 Apr 2022 14:12:28 -0700
Subject: [R] Modificatio of function body within a function
In-Reply-To: <CABxpnnnkEvQceozk4yHaDJruTobUuno5Prhs8n5xmnFkpKdyDg@mail.gmail.com>
References: <CABxpnnnkEvQceozk4yHaDJruTobUuno5Prhs8n5xmnFkpKdyDg@mail.gmail.com>
Message-ID: <CAGxFJbSOOLbPB7ETcSkSO44j-TyH02BdjCBhLvjJ_GkroQW0pg@mail.gmail.com>

Heh ... These self-referential constructs are certainly puzzles...

Does this help:

fun1 <- function() {
   1
   body(fun1)[[2]] <<- 'one'
   'hi'
}

> fun1
function() {
   1
   body(fun1)[[2]] <<- 'one' ## note the double '<<" assigning to the parent env
   'hi'
}

> fun1()
[1] "hi"

> fun1
function ()
{
    "one" ## the change was made
    body(fun1)[[2]] <<- "one"
    "hi"
}

The point is that assignments within a function occur *within* the
function environment unless otherwise specified (either by <<- or the
use of the 'environment' argument in 'body<-'()  ). This is, of
course, central to the functional programming paradigm of no side
effects (unless explicitly invoked).

NOTE: Correction to this requested if this is wrong in any way!!

Cheers,
Bert




Bert Gunter

"The trouble with having an open mind is that people keep coming along
and sticking things into it."
-- Opus (aka Berkeley Breathed in his "Bloom County" comic strip )

Bert Gunter

"The trouble with having an open mind is that people keep coming along
and sticking things into it."
-- Opus (aka Berkeley Breathed in his "Bloom County" comic strip )


On Fri, Apr 1, 2022 at 12:50 PM Grzegorz Smoli?ski
<g.smolinski1 at gmail.com> wrote:
>
> Hi,
>
> I'm working on a presentation regarding the modification of the
> function body on-the-fly and just discovered something I don't
> understand. I would like to modify a body of the function within a
> function, but I see that it is possible only when explicitly referring
> to the environment where the function is defined:
>
> fun1 <- function() {
>   1
>   body(fun1)[[2]] <- "one"
> }
> fun1()
> body(fun1)
> #> {
> #>     1
> #>     body(fun1)[[2]] <- "one"
> #> }
>
> fun2 <- function() {
>   2
>   env <- environment(fun2)
>   body(env$fun2)[[2]] <- "two"
> }
> fun2()
> body(fun2)
> #> {
> #>     "two"
> #>     env <- environment(fun2)
> #>     body(env$fun2)[[2]] <- "two"
> #> }
>
> Can I get some explanation or some links / articles about this,
> please? I thought it won't be a difference and I should be able to
> modify a function body also in the first case, because I'm changing
> something in the parent environment being in the child environment.
>
> Best regards,
>
> Grzegorz
>
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.


From g@@mo||n@k|1 @end|ng |rom gm@||@com  Sat Apr  2 11:31:35 2022
From: g@@mo||n@k|1 @end|ng |rom gm@||@com (=?UTF-8?Q?Grzegorz_Smoli=C5=84ski?=)
Date: Sat, 2 Apr 2022 11:31:35 +0200
Subject: [R] Modificatio of function body within a function
In-Reply-To: <CAGxFJbSOOLbPB7ETcSkSO44j-TyH02BdjCBhLvjJ_GkroQW0pg@mail.gmail.com>
References: <CABxpnnnkEvQceozk4yHaDJruTobUuno5Prhs8n5xmnFkpKdyDg@mail.gmail.com>
 <CAGxFJbSOOLbPB7ETcSkSO44j-TyH02BdjCBhLvjJ_GkroQW0pg@mail.gmail.com>
Message-ID: <CABxpnn=dp6H0ki7oSsD7JPTSL+0jBgBJeMv2=NE7QOGGTnh=gw@mail.gmail.com>

Thank you, I think I can say that I get it, especially when reading
this explanation: "assignments within a function occur *within* the
function environment unless otherwise specified", so this is just like
in the example below:

a <- 4
fun2 <- function() {
  a <- 2
}
fun2()
a
#> [1] 4

a <- 4
fun2 <- function() {
  env <- .GlobalEnv
  env$a <- 2
}
fun2()
a
#> [1] 2

I would like to ask about one more thing, also regarding the
modification of the body of function. There is one phenomenon which
I'm actually using during my work with R, but I'm not sure why this
happens. Below is an example of this:

fun1 <- function() {
  1
  env <- environment(fun1)
  body(env$fun1) <- body(env$fun1)[-5]
  "one"
}
fun1()
#> [1] "one"
body(fun1)
#> {
#>     1
#>     env <- environment(fun1)
#>     body(env$fun1) <- body(env$fun1)[-5]
#> }

Within a function, I'm removing the last line of code in that function
(string "one") and what happens here is that when I use this function
(first time), that string is actually returned, so this line of code
which is removed is executed. I don't have a good background in
computer science and would like to know why this last line of code is
executed. Why not - well, I could imagine that when the function is
called, it is executed line by line (of course), so before the last
line ("one"), this line will be removed and this string won't be
returned. However, when Bert mentioned functional paradigm, I have
started to think that it may looks like this:
a) function is defined
b) function is called and in the one before last line of code, some
object (fun1) is modified and when something is modified, the copy is
made, so the modified function lives in a different memory address.
c) the original function (not changed) continues computation and
returns the string
d) when the execution is finished, then the modified fun1 is bind to
the name "fun1" and because this happens in the same environment where
the original fun1 was defined and the objects are now different,
garbage collector removes original (not modified) fun1 object.

Is that, more or less, what happens?

Best,

Grzegorz

pt., 1 kwi 2022 o 23:12 Bert Gunter <bgunter.4567 at gmail.com> napisa?(a):
>
> Heh ... These self-referential constructs are certainly puzzles...
>
> Does this help:
>
> fun1 <- function() {
>    1
>    body(fun1)[[2]] <<- 'one'
>    'hi'
> }
>
> > fun1
> function() {
>    1
>    body(fun1)[[2]] <<- 'one' ## note the double '<<" assigning to the parent env
>    'hi'
> }
>
> > fun1()
> [1] "hi"
>
> > fun1
> function ()
> {
>     "one" ## the change was made
>     body(fun1)[[2]] <<- "one"
>     "hi"
> }
>
> The point is that assignments within a function occur *within* the
> function environment unless otherwise specified (either by <<- or the
> use of the 'environment' argument in 'body<-'()  ). This is, of
> course, central to the functional programming paradigm of no side
> effects (unless explicitly invoked).
>
> NOTE: Correction to this requested if this is wrong in any way!!
>
> Cheers,
> Bert
>
>
>
>
> Bert Gunter
>
> "The trouble with having an open mind is that people keep coming along
> and sticking things into it."
> -- Opus (aka Berkeley Breathed in his "Bloom County" comic strip )
>
> Bert Gunter
>
> "The trouble with having an open mind is that people keep coming along
> and sticking things into it."
> -- Opus (aka Berkeley Breathed in his "Bloom County" comic strip )
>
>
> On Fri, Apr 1, 2022 at 12:50 PM Grzegorz Smoli?ski
> <g.smolinski1 at gmail.com> wrote:
> >
> > Hi,
> >
> > I'm working on a presentation regarding the modification of the
> > function body on-the-fly and just discovered something I don't
> > understand. I would like to modify a body of the function within a
> > function, but I see that it is possible only when explicitly referring
> > to the environment where the function is defined:
> >
> > fun1 <- function() {
> >   1
> >   body(fun1)[[2]] <- "one"
> > }
> > fun1()
> > body(fun1)
> > #> {
> > #>     1
> > #>     body(fun1)[[2]] <- "one"
> > #> }
> >
> > fun2 <- function() {
> >   2
> >   env <- environment(fun2)
> >   body(env$fun2)[[2]] <- "two"
> > }
> > fun2()
> > body(fun2)
> > #> {
> > #>     "two"
> > #>     env <- environment(fun2)
> > #>     body(env$fun2)[[2]] <- "two"
> > #> }
> >
> > Can I get some explanation or some links / articles about this,
> > please? I thought it won't be a difference and I should be able to
> > modify a function body also in the first case, because I'm changing
> > something in the parent environment being in the child environment.
> >
> > Best regards,
> >
> > Grzegorz
> >
> > ______________________________________________
> > R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> > https://stat.ethz.ch/mailman/listinfo/r-help
> > PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> > and provide commented, minimal, self-contained, reproducible code.


From bgunter@4567 @end|ng |rom gm@||@com  Sat Apr  2 16:39:16 2022
From: bgunter@4567 @end|ng |rom gm@||@com (Bert Gunter)
Date: Sat, 2 Apr 2022 07:39:16 -0700
Subject: [R] Modificatio of function body within a function
In-Reply-To: <CABxpnn=dp6H0ki7oSsD7JPTSL+0jBgBJeMv2=NE7QOGGTnh=gw@mail.gmail.com>
References: <CABxpnnnkEvQceozk4yHaDJruTobUuno5Prhs8n5xmnFkpKdyDg@mail.gmail.com>
 <CAGxFJbSOOLbPB7ETcSkSO44j-TyH02BdjCBhLvjJ_GkroQW0pg@mail.gmail.com>
 <CABxpnn=dp6H0ki7oSsD7JPTSL+0jBgBJeMv2=NE7QOGGTnh=gw@mail.gmail.com>
Message-ID: <CAGxFJbT35KQR7pcE2mEL-dYWMhWc76Ce0-6brsKuux-KpA8oUA@mail.gmail.com>

This is not as complicated as you think.

## First define the function.
> fun1 <- function() {
    1
    env <- environment(fun1)
    body(env$fun1) <- body(env$fun1)[-5]
    "one"
 }

## The function as defined above is now in the environment in which it
was defined, here .GlobalRnv.

## Now calling it executes **the above function.**
> fun1()
[1] "one"

## But this execution has the side effect of modifying the function
object in .GlobalEnv. (This is why side effects can be problematic).
So when we look at fun1 again in that environment, we see the modified
version.

> fun1
function ()
{
    1
    env <- environment(fun1)
    body(env$fun1) <- body(env$fun1)[-5]
}

## which, of course, returns nothing on being called.
> fun1()
>

Bert Gunter

"The trouble with having an open mind is that people keep coming along
and sticking things into it."
-- Opus (aka Berkeley Breathed in his "Bloom County" comic strip )

On Sat, Apr 2, 2022 at 2:32 AM Grzegorz Smoli?ski
<g.smolinski1 at gmail.com> wrote:
>
> Thank you, I think I can say that I get it, especially when reading
> this explanation: "assignments within a function occur *within* the
> function environment unless otherwise specified", so this is just like
> in the example below:
>
> a <- 4
> fun2 <- function() {
>   a <- 2
> }
> fun2()
> a
> #> [1] 4
>
> a <- 4
> fun2 <- function() {
>   env <- .GlobalEnv
>   env$a <- 2
> }
> fun2()
> a
> #> [1] 2
>
> I would like to ask about one more thing, also regarding the
> modification of the body of function. There is one phenomenon which
> I'm actually using during my work with R, but I'm not sure why this
> happens. Below is an example of this:
>
> fun1 <- function() {
>   1
>   env <- environment(fun1)
>   body(env$fun1) <- body(env$fun1)[-5]
>   "one"
> }
> fun1()
> #> [1] "one"
> body(fun1)
> #> {
> #>     1
> #>     env <- environment(fun1)
> #>     body(env$fun1) <- body(env$fun1)[-5]
> #> }
>
> Within a function, I'm removing the last line of code in that function
> (string "one") and what happens here is that when I use this function
> (first time), that string is actually returned, so this line of code
> which is removed is executed. I don't have a good background in
> computer science and would like to know why this last line of code is
> executed. Why not - well, I could imagine that when the function is
> called, it is executed line by line (of course), so before the last
> line ("one"), this line will be removed and this string won't be
> returned. However, when Bert mentioned functional paradigm, I have
> started to think that it may looks like this:
> a) function is defined
> b) function is called and in the one before last line of code, some
> object (fun1) is modified and when something is modified, the copy is
> made, so the modified function lives in a different memory address.
> c) the original function (not changed) continues computation and
> returns the string
> d) when the execution is finished, then the modified fun1 is bind to
> the name "fun1" and because this happens in the same environment where
> the original fun1 was defined and the objects are now different,
> garbage collector removes original (not modified) fun1 object.
>
> Is that, more or less, what happens?
>
> Best,
>
> Grzegorz
>
> pt., 1 kwi 2022 o 23:12 Bert Gunter <bgunter.4567 at gmail.com> napisa?(a):
> >
> > Heh ... These self-referential constructs are certainly puzzles...
> >
> > Does this help:
> >
> > fun1 <- function() {
> >    1
> >    body(fun1)[[2]] <<- 'one'
> >    'hi'
> > }
> >
> > > fun1
> > function() {
> >    1
> >    body(fun1)[[2]] <<- 'one' ## note the double '<<" assigning to the parent env
> >    'hi'
> > }
> >
> > > fun1()
> > [1] "hi"
> >
> > > fun1
> > function ()
> > {
> >     "one" ## the change was made
> >     body(fun1)[[2]] <<- "one"
> >     "hi"
> > }
> >
> > The point is that assignments within a function occur *within* the
> > function environment unless otherwise specified (either by <<- or the
> > use of the 'environment' argument in 'body<-'()  ). This is, of
> > course, central to the functional programming paradigm of no side
> > effects (unless explicitly invoked).
> >
> > NOTE: Correction to this requested if this is wrong in any way!!
> >
> > Cheers,
> > Bert
> >
> >
> >
> >
> > Bert Gunter
> >
> > "The trouble with having an open mind is that people keep coming along
> > and sticking things into it."
> > -- Opus (aka Berkeley Breathed in his "Bloom County" comic strip )
> >
> > Bert Gunter
> >
> > "The trouble with having an open mind is that people keep coming along
> > and sticking things into it."
> > -- Opus (aka Berkeley Breathed in his "Bloom County" comic strip )
> >
> >
> > On Fri, Apr 1, 2022 at 12:50 PM Grzegorz Smoli?ski
> > <g.smolinski1 at gmail.com> wrote:
> > >
> > > Hi,
> > >
> > > I'm working on a presentation regarding the modification of the
> > > function body on-the-fly and just discovered something I don't
> > > understand. I would like to modify a body of the function within a
> > > function, but I see that it is possible only when explicitly referring
> > > to the environment where the function is defined:
> > >
> > > fun1 <- function() {
> > >   1
> > >   body(fun1)[[2]] <- "one"
> > > }
> > > fun1()
> > > body(fun1)
> > > #> {
> > > #>     1
> > > #>     body(fun1)[[2]] <- "one"
> > > #> }
> > >
> > > fun2 <- function() {
> > >   2
> > >   env <- environment(fun2)
> > >   body(env$fun2)[[2]] <- "two"
> > > }
> > > fun2()
> > > body(fun2)
> > > #> {
> > > #>     "two"
> > > #>     env <- environment(fun2)
> > > #>     body(env$fun2)[[2]] <- "two"
> > > #> }
> > >
> > > Can I get some explanation or some links / articles about this,
> > > please? I thought it won't be a difference and I should be able to
> > > modify a function body also in the first case, because I'm changing
> > > something in the parent environment being in the child environment.
> > >
> > > Best regards,
> > >
> > > Grzegorz
> > >
> > > ______________________________________________
> > > R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> > > https://stat.ethz.ch/mailman/listinfo/r-help
> > > PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> > > and provide commented, minimal, self-contained, reproducible code.
>
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.


From ru|pb@rr@d@@ @end|ng |rom @@po@pt  Sat Apr  2 19:45:07 2022
From: ru|pb@rr@d@@ @end|ng |rom @@po@pt (Rui Barradas)
Date: Sat, 2 Apr 2022 18:45:07 +0100
Subject: [R] Unexpected behavior in par()
Message-ID: <ec4aa4b3-1b4c-8272-96d3-b0dde00af5d0@sapo.pt>

Hello,

I have a function using base graphics that changes some graphics 
parameters, then plots what it has to plot, then on exit puts the 
graphics parameters back as they were.
The problem is that if outside the function the graphics parameters are 
also changed, for instance mfrow, those chages are not respected by the 
function. This seems to come from the way the graphics pars are saved.

After par(mfrow = c(2, 1))

- if I call par(no.readonly = TRUE) then the second call to the function 
plots in the 1st row, it overplots what was plotted before.
- if I save the pars when they are changed, all is well.

Here is a reproducible example.


f <- function(x, ...) {
   old_par <- par(no.readonly = TRUE)    # this is the problem
   par(mar = c(4.1, 3.1, 3.1, 1.1))      # or maybe here
   on.exit(par(old_par))
   barplot(x, ...)
}

g <- function(x, ...) {
   old_par <- par(mar = c(4.1, 3.1, 3.1, 1.1))   # this is the solution
   on.exit(par(old_par))
   barplot(x, ...)
}

set.seed(2022)
b1 <- table(sample(4, 100, TRUE))
b2 <- table(sample(10, 100, TRUE))

# 1st function, unexpected behavior
old_par <- par(mfrow = c(2, 1))
f(b1, main = "1st plot")
f(b2, main = "2nd plot")
par(old_par)

# 2nd function, all is well
old_par <- par(mfrow = c(2, 1))
g(b1, main = "1st plot")
g(b2, main = "2nd plot")
par(old_par)


If I print(old_par) in any of the functions the result is the right 
mfrow setting, so I would expect the 2nd call to f() to plot in the 2nd 
row. But it doesn't.
Function f() calls par() twice but it only changes a parameter unrelated 
to the parameter set outside the function.

I'm obviously making a mistake but I don't know what. Is this expected 
(or a par() bug)?


Thaks in advance,

Rui Barradas


From w||||@mwdun|@p @end|ng |rom gm@||@com  Sat Apr  2 21:00:16 2022
From: w||||@mwdun|@p @end|ng |rom gm@||@com (Bill Dunlap)
Date: Sat, 2 Apr 2022 12:00:16 -0700
Subject: [R] Unexpected behavior in par()
In-Reply-To: <ec4aa4b3-1b4c-8272-96d3-b0dde00af5d0@sapo.pt>
References: <ec4aa4b3-1b4c-8272-96d3-b0dde00af5d0@sapo.pt>
Message-ID: <CAHqSRuQzvrUL_+kN8Oy6A+n=Vjxp8x67hB_+AU5zCxoQmXOq3Q@mail.gmail.com>

par("mfrow") works by updating par("fig") before each plot.  I think that
when you reset all the par values after each plot you reset par("fig") to
the value it had before you made the last plot.

-Bill

On Sat, Apr 2, 2022 at 10:45 AM Rui Barradas <ruipbarradas at sapo.pt> wrote:

> Hello,
>
> I have a function using base graphics that changes some graphics
> parameters, then plots what it has to plot, then on exit puts the
> graphics parameters back as they were.
> The problem is that if outside the function the graphics parameters are
> also changed, for instance mfrow, those chages are not respected by the
> function. This seems to come from the way the graphics pars are saved.
>
> After par(mfrow = c(2, 1))
>
> - if I call par(no.readonly = TRUE) then the second call to the function
> plots in the 1st row, it overplots what was plotted before.
> - if I save the pars when they are changed, all is well.
>
> Here is a reproducible example.
>
>
> f <- function(x, ...) {
>    old_par <- par(no.readonly = TRUE)    # this is the problem
>    par(mar = c(4.1, 3.1, 3.1, 1.1))      # or maybe here
>    on.exit(par(old_par))
>    barplot(x, ...)
> }
>
> g <- function(x, ...) {
>    old_par <- par(mar = c(4.1, 3.1, 3.1, 1.1))   # this is the solution
>    on.exit(par(old_par))
>    barplot(x, ...)
> }
>
> set.seed(2022)
> b1 <- table(sample(4, 100, TRUE))
> b2 <- table(sample(10, 100, TRUE))
>
> # 1st function, unexpected behavior
> old_par <- par(mfrow = c(2, 1))
> f(b1, main = "1st plot")
> f(b2, main = "2nd plot")
> par(old_par)
>
> # 2nd function, all is well
> old_par <- par(mfrow = c(2, 1))
> g(b1, main = "1st plot")
> g(b2, main = "2nd plot")
> par(old_par)
>
>
> If I print(old_par) in any of the functions the result is the right
> mfrow setting, so I would expect the 2nd call to f() to plot in the 2nd
> row. But it doesn't.
> Function f() calls par() twice but it only changes a parameter unrelated
> to the parameter set outside the function.
>
> I'm obviously making a mistake but I don't know what. Is this expected
> (or a par() bug)?
>
>
> Thaks in advance,
>
> Rui Barradas
>
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide
> http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>

	[[alternative HTML version deleted]]


From p@t @end|ng |rom |@rh@rbor@com  Sat Apr  2 18:22:55 2022
From: p@t @end|ng |rom |@rh@rbor@com (Pat Malone)
Date: Sat, 2 Apr 2022 12:22:55 -0400
Subject: [R] EFA with Complex Survey Data (Incl. Replicate Weights)
In-Reply-To: <BN6PR11MB203337F8459D4CD1A0EF713E9BE19@BN6PR11MB2033.namprd11.prod.outlook.com>
References: <BN6PR11MB203337F8459D4CD1A0EF713E9BE19@BN6PR11MB2033.namprd11.prod.outlook.com>
Message-ID: <CAJhmz4fjFuqGedfxAo5uq_gqh59kYb6zckUZaSbDTWfMnCVYog@mail.gmail.com>

Lybrya,

You might have better luck on SEMNET. Responses won't necessarily be
specific to R, but that's where to find a concentration of experts on
factor analysis in a variety of contexts.

You have to have a LISTSERV account to log in, but you can follow this link
to both set up an account and then subscribe to the list.
https://listserv.ua.edu/cgi-bin/wa?A0=SEMNET

Pat



On Fri, Apr 1, 2022 at 4:14 AM Lybrya Kebreab <Lybrya.Kebreab at ucf.edu>
wrote:

> Hello,
>
>
> I am a doctoral student, completing my dissertation using the public
> HSLS2009 survey data. I am interested in running an exploratory factor
> analysis (EFA) and need to apply both the child weight and replicate
> weights. I found some information on applying weights in EFA (
> https://r-survey.r-forge.r-project.org/survey/html/svyfactanal.html),
> however I have not found information on how to apply multiple replicate
> weights. Can anyone please help me with a resource that can assist?
>
> Thank you kindly,
>
> Lybrya Kebreab
> Doctoral Candidate
> Education-Mathematics Education Track
> School of Teacher Education
> College of Community Innovation and Education
> University of Central Florida
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide
> http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>


-- 

*Patrick S. Malone, PhD*
Sr Research Statistician, FAR HARB?R
+1 803.553.4181  |  pat@ <pat at farharbor.com>  |  farharbor.com
*This message may contain confidential information; if you are not the
intended recipient please notify the sender and delete the message.*

	[[alternative HTML version deleted]]


From @jd@m|co @end|ng |rom gm@||@com  Sat Apr  2 22:14:13 2022
From: @jd@m|co @end|ng |rom gm@||@com (Anthony Damico)
Date: Sat, 2 Apr 2022 16:14:13 -0400
Subject: [R] EFA with Complex Survey Data (Incl. Replicate Weights)
In-Reply-To: <BN6PR11MB203337F8459D4CD1A0EF713E9BE19@BN6PR11MB2033.namprd11.prod.outlook.com>
References: <BN6PR11MB203337F8459D4CD1A0EF713E9BE19@BN6PR11MB2033.namprd11.prod.outlook.com>
Message-ID: <CAOwvMDyujeDniqYq_g=CLBuH2oDwt3KiwC0vrN-t0SYmcAV4vw@mail.gmail.com>

hi!  after loading the survey library, i believe you might want to create a
`svrepdesign()` object that matches the SAS syntax published here?

https://nces.ed.gov/surveys/hsls09/pdf/2011328_1.pdf#page=174

...not sure if you need combined.weights = FALSE option added to the
svrepdesign() call, but it looks like your complex survey design should
look roughly like this?

hsls09_design <- svrepdesign( data = data_frame_with_hsls09 , type="BRR",
weights = ~w1student , repweights="w1student[0-9]+" )

from there, you could look to the examples posted on the ?svyfactanal help
page and use your design=hsls09_design rather than the example dataset
design=dclus1












On Fri, Apr 1, 2022 at 4:14 AM Lybrya Kebreab <Lybrya.Kebreab at ucf.edu>
wrote:

> Hello,
>
>
> I am a doctoral student, completing my dissertation using the public
> HSLS2009 survey data. I am interested in running an exploratory factor
> analysis (EFA) and need to apply both the child weight and replicate
> weights. I found some information on applying weights in EFA (
> https://r-survey.r-forge.r-project.org/survey/html/svyfactanal.html),
> however I have not found information on how to apply multiple replicate
> weights. Can anyone please help me with a resource that can assist?
>
> Thank you kindly,
>
> Lybrya Kebreab
> Doctoral Candidate
> Education-Mathematics Education Track
> School of Teacher Education
> College of Community Innovation and Education
> University of Central Florida
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide
> http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>

	[[alternative HTML version deleted]]


From ru|pb@rr@d@@ @end|ng |rom @@po@pt  Sat Apr  2 23:02:31 2022
From: ru|pb@rr@d@@ @end|ng |rom @@po@pt (Rui Barradas)
Date: Sat, 2 Apr 2022 22:02:31 +0100
Subject: [R] Unexpected behavior in par()
In-Reply-To: <CAHqSRuQzvrUL_+kN8Oy6A+n=Vjxp8x67hB_+AU5zCxoQmXOq3Q@mail.gmail.com>
References: <ec4aa4b3-1b4c-8272-96d3-b0dde00af5d0@sapo.pt>
 <CAHqSRuQzvrUL_+kN8Oy6A+n=Vjxp8x67hB_+AU5zCxoQmXOq3Q@mail.gmail.com>
Message-ID: <862ee107-e723-2070-a773-113a5ae06a51@sapo.pt>

Hello,

Thanks, that makes sense. So don't use par(no.readonly = TRUE) unless 
that's the desired behavior.

Rui Barradas

?s 20:00 de 02/04/2022, Bill Dunlap escreveu:
> par("mfrow") works by updating par("fig") before each plot.? I think 
> that when you reset all the par values after each plot you reset 
> par("fig") to the value it had before you made the last plot.
> 
> -Bill
> 
> On Sat, Apr 2, 2022 at 10:45 AM Rui Barradas <ruipbarradas at sapo.pt 
> <mailto:ruipbarradas at sapo.pt>> wrote:
> 
>     Hello,
> 
>     I have a function using base graphics that changes some graphics
>     parameters, then plots what it has to plot, then on exit puts the
>     graphics parameters back as they were.
>     The problem is that if outside the function the graphics parameters are
>     also changed, for instance mfrow, those chages are not respected by the
>     function. This seems to come from the way the graphics pars are saved.
> 
>     After par(mfrow = c(2, 1))
> 
>     - if I call par(no.readonly = TRUE) then the second call to the
>     function
>     plots in the 1st row, it overplots what was plotted before.
>     - if I save the pars when they are changed, all is well.
> 
>     Here is a reproducible example.
> 
> 
>     f <- function(x, ...) {
>      ? ?old_par <- par(no.readonly = TRUE)? ? # this is the problem
>      ? ?par(mar = c(4.1, 3.1, 3.1, 1.1))? ? ? # or maybe here
>      ? ?on.exit(par(old_par))
>      ? ?barplot(x, ...)
>     }
> 
>     g <- function(x, ...) {
>      ? ?old_par <- par(mar = c(4.1, 3.1, 3.1, 1.1))? ?# this is the solution
>      ? ?on.exit(par(old_par))
>      ? ?barplot(x, ...)
>     }
> 
>     set.seed(2022)
>     b1 <- table(sample(4, 100, TRUE))
>     b2 <- table(sample(10, 100, TRUE))
> 
>     # 1st function, unexpected behavior
>     old_par <- par(mfrow = c(2, 1))
>     f(b1, main = "1st plot")
>     f(b2, main = "2nd plot")
>     par(old_par)
> 
>     # 2nd function, all is well
>     old_par <- par(mfrow = c(2, 1))
>     g(b1, main = "1st plot")
>     g(b2, main = "2nd plot")
>     par(old_par)
> 
> 
>     If I print(old_par) in any of the functions the result is the right
>     mfrow setting, so I would expect the 2nd call to f() to plot in the 2nd
>     row. But it doesn't.
>     Function f() calls par() twice but it only changes a parameter
>     unrelated
>     to the parameter set outside the function.
> 
>     I'm obviously making a mistake but I don't know what. Is this expected
>     (or a par() bug)?
> 
> 
>     Thaks in advance,
> 
>     Rui Barradas
> 
>     ______________________________________________
>     R-help at r-project.org <mailto:R-help at r-project.org> mailing list --
>     To UNSUBSCRIBE and more, see
>     https://stat.ethz.ch/mailman/listinfo/r-help
>     <https://stat.ethz.ch/mailman/listinfo/r-help>
>     PLEASE do read the posting guide
>     http://www.R-project.org/posting-guide.html
>     <http://www.R-project.org/posting-guide.html>
>     and provide commented, minimal, self-contained, reproducible code.
>


From m@pjg @end|ng |rom br|@to|@@c@uk  Sat Apr  2 16:58:17 2022
From: m@pjg @end|ng |rom br|@to|@@c@uk (Peter Green)
Date: Sat, 2 Apr 2022 15:58:17 +0100
Subject: [R] [R-pkgs] Nmix package - Bayesian inference about univariate
 Gaussian mixtures with an unknown number of components
Message-ID: <d52bf841-0a15-ba10-6585-155a33be35e9@bristol.ac.uk>

This package is now on CRAN in version 2.0.2, and anyone interested in 
inference on mixture models, or more generally in Bayesian inference for 
"trans-dimensional" problems, is encouraged to try it out. The 
methodology is that presented by Richardson and Green in our 1997 
article in the Journal of the Royal Statistical Society, using 
Reversible jump Markov chain Monte Carlo. The package is based on the 
Fortran code used in the research for that paper, which is available now 
to the R user for the first time. A rich variety of outputs from the 
MCMC sample path is available, optionally, and many features of the 
posterior distribution are presented graphically. Apart from its direct 
use in analysing data, the package might be useful in supporting 
learning about Bayesian computation.

Feedback is most welcome, and I may be open to extending the 
functionality of the package in response to concrete suggestions.

regards,

Peter Green

_______________________________________________
R-packages mailing list
R-packages at r-project.org
https://stat.ethz.ch/mailman/listinfo/r-packages


From g@@mo||n@k|1 @end|ng |rom gm@||@com  Sun Apr  3 12:23:14 2022
From: g@@mo||n@k|1 @end|ng |rom gm@||@com (=?UTF-8?Q?Grzegorz_Smoli=C5=84ski?=)
Date: Sun, 3 Apr 2022 12:23:14 +0200
Subject: [R] ODP:  Modificatio of function body within a function
In-Reply-To: <CAGxFJbT35KQR7pcE2mEL-dYWMhWc76Ce0-6brsKuux-KpA8oUA@mail.gmail.com>
References: <CABxpnnnkEvQceozk4yHaDJruTobUuno5Prhs8n5xmnFkpKdyDg@mail.gmail.com>
 <CAGxFJbSOOLbPB7ETcSkSO44j-TyH02BdjCBhLvjJ_GkroQW0pg@mail.gmail.com>
 <CABxpnn=dp6H0ki7oSsD7JPTSL+0jBgBJeMv2=NE7QOGGTnh=gw@mail.gmail.com>
 <CAGxFJbT35KQR7pcE2mEL-dYWMhWc76Ce0-6brsKuux-KpA8oUA@mail.gmail.com>
Message-ID: <CABxpnnkKV4NGSJpEtyoqbDozVn2pADCFwOSORnQBSpefJXbohw@mail.gmail.com>

Thank you, Bert!


From n|ckmwr@y @end|ng |rom gm@||@com  Sun Apr  3 15:13:31 2022
From: n|ckmwr@y @end|ng |rom gm@||@com (Nick Wray)
Date: Sun, 3 Apr 2022 14:13:31 +0100
Subject: [R] Plotting proportions
Message-ID: <CABxY9BNwhhWgN6zBt5kPNyv69eHWGN5DRdBKTBfMGxzaFRKhUw@mail.gmail.com>

Hello  If you plot a square in the default R studio window you see a
rectangle.  Does anyone know what the proportions of the sides of this
rectangle are?  Thanks Nick Wray

	[[alternative HTML version deleted]]


From ru|pb@rr@d@@ @end|ng |rom @@po@pt  Sun Apr  3 17:25:57 2022
From: ru|pb@rr@d@@ @end|ng |rom @@po@pt (Rui Barradas)
Date: Sun, 3 Apr 2022 16:25:57 +0100
Subject: [R] Plotting proportions
In-Reply-To: <CABxY9BNwhhWgN6zBt5kPNyv69eHWGN5DRdBKTBfMGxzaFRKhUw@mail.gmail.com>
References: <CABxY9BNwhhWgN6zBt5kPNyv69eHWGN5DRdBKTBfMGxzaFRKhUw@mail.gmail.com>
Message-ID: <3279bcaa-3e4a-ac7c-5cee-5e2f9559f8f3@sapo.pt>

Hello,

There's a graphics parameter for aspect ratio that you can set asp=1 on 
a plot by plot basis. But you also need to change pty. From ?par:

pty
A character specifying the type of plot region to be used; "s" generates 
a square plotting region and "m" generates the maximal plotting region.



old_par <- par(pty = "s")
plot(1, asp = 1)
par(old_par)


Hope this helps,

Rui Barradas

?s 14:13 de 03/04/2022, Nick Wray escreveu:
> Hello  If you plot a square in the default R studio window you see a
> rectangle.  Does anyone know what the proportions of the sides of this
> rectangle are?  Thanks Nick Wray
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.


From bgunter@4567 @end|ng |rom gm@||@com  Sun Apr  3 18:03:17 2022
From: bgunter@4567 @end|ng |rom gm@||@com (Bert Gunter)
Date: Sun, 3 Apr 2022 09:03:17 -0700
Subject: [R] Plotting proportions
In-Reply-To: <3279bcaa-3e4a-ac7c-5cee-5e2f9559f8f3@sapo.pt>
References: <CABxY9BNwhhWgN6zBt5kPNyv69eHWGN5DRdBKTBfMGxzaFRKhUw@mail.gmail.com>
 <3279bcaa-3e4a-ac7c-5cee-5e2f9559f8f3@sapo.pt>
Message-ID: <CAGxFJbRnBHEVh8y=BcEMv8PBa1m_v4yGOT-gvLU3ad=0kh9QmQ@mail.gmail.com>

... and following up on Rui's reply, assuming that the default (in R,
not RStudio) "m" is being used, I would assume that the aspect ratio
in the RStudio device depends on the layout of your windows. Also, you
might do better asking here, https://community.rstudio.com/ , than on
this list.

Bert Gunter

On Sun, Apr 3, 2022 at 8:26 AM Rui Barradas <ruipbarradas at sapo.pt> wrote:
>
> Hello,
>
> There's a graphics parameter for aspect ratio that you can set asp=1 on
> a plot by plot basis. But you also need to change pty. From ?par:
>
> pty
> A character specifying the type of plot region to be used; "s" generates
> a square plotting region and "m" generates the maximal plotting region.
>
>
>
> old_par <- par(pty = "s")
> plot(1, asp = 1)
> par(old_par)
>
>
> Hope this helps,
>
> Rui Barradas
>
> ?s 14:13 de 03/04/2022, Nick Wray escreveu:
> > Hello  If you plot a square in the default R studio window you see a
> > rectangle.  Does anyone know what the proportions of the sides of this
> > rectangle are?  Thanks Nick Wray
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> > https://stat.ethz.ch/mailman/listinfo/r-help
> > PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> > and provide commented, minimal, self-contained, reproducible code.
>
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.


From w||||@mwdun|@p @end|ng |rom gm@||@com  Sun Apr  3 18:09:09 2022
From: w||||@mwdun|@p @end|ng |rom gm@||@com (Bill Dunlap)
Date: Sun, 3 Apr 2022 09:09:09 -0700
Subject: [R] Unexpected behavior in par()
In-Reply-To: <CAHqSRuQzvrUL_+kN8Oy6A+n=Vjxp8x67hB_+AU5zCxoQmXOq3Q@mail.gmail.com>
References: <ec4aa4b3-1b4c-8272-96d3-b0dde00af5d0@sapo.pt>
 <CAHqSRuQzvrUL_+kN8Oy6A+n=Vjxp8x67hB_+AU5zCxoQmXOq3Q@mail.gmail.com>
Message-ID: <CAHqSRuR6=ajE7P_8oZS34itJ8L6fWe_7SQV1nF6ujd6Onr-ROw@mail.gmail.com>

Making a new plot with par(mfrow=...) or par(mfcol=...) in effect also
updates par("mfg"), which describes where in the array of plots you are.
If you overwrite that with its previous value then you will overlay the new
plot on top of the previous one.

-Bill

On Sat, Apr 2, 2022 at 12:00 PM Bill Dunlap <williamwdunlap at gmail.com>
wrote:

> par("mfrow") works by updating par("fig") before each plot.  I think that
> when you reset all the par values after each plot you reset par("fig") to
> the value it had before you made the last plot.
>
> -Bill
>
> On Sat, Apr 2, 2022 at 10:45 AM Rui Barradas <ruipbarradas at sapo.pt> wrote:
>
>> Hello,
>>
>> I have a function using base graphics that changes some graphics
>> parameters, then plots what it has to plot, then on exit puts the
>> graphics parameters back as they were.
>> The problem is that if outside the function the graphics parameters are
>> also changed, for instance mfrow, those chages are not respected by the
>> function. This seems to come from the way the graphics pars are saved.
>>
>> After par(mfrow = c(2, 1))
>>
>> - if I call par(no.readonly = TRUE) then the second call to the function
>> plots in the 1st row, it overplots what was plotted before.
>> - if I save the pars when they are changed, all is well.
>>
>> Here is a reproducible example.
>>
>>
>> f <- function(x, ...) {
>>    old_par <- par(no.readonly = TRUE)    # this is the problem
>>    par(mar = c(4.1, 3.1, 3.1, 1.1))      # or maybe here
>>    on.exit(par(old_par))
>>    barplot(x, ...)
>> }
>>
>> g <- function(x, ...) {
>>    old_par <- par(mar = c(4.1, 3.1, 3.1, 1.1))   # this is the solution
>>    on.exit(par(old_par))
>>    barplot(x, ...)
>> }
>>
>> set.seed(2022)
>> b1 <- table(sample(4, 100, TRUE))
>> b2 <- table(sample(10, 100, TRUE))
>>
>> # 1st function, unexpected behavior
>> old_par <- par(mfrow = c(2, 1))
>> f(b1, main = "1st plot")
>> f(b2, main = "2nd plot")
>> par(old_par)
>>
>> # 2nd function, all is well
>> old_par <- par(mfrow = c(2, 1))
>> g(b1, main = "1st plot")
>> g(b2, main = "2nd plot")
>> par(old_par)
>>
>>
>> If I print(old_par) in any of the functions the result is the right
>> mfrow setting, so I would expect the 2nd call to f() to plot in the 2nd
>> row. But it doesn't.
>> Function f() calls par() twice but it only changes a parameter unrelated
>> to the parameter set outside the function.
>>
>> I'm obviously making a mistake but I don't know what. Is this expected
>> (or a par() bug)?
>>
>>
>> Thaks in advance,
>>
>> Rui Barradas
>>
>> ______________________________________________
>> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>> https://stat.ethz.ch/mailman/listinfo/r-help
>> PLEASE do read the posting guide
>> http://www.R-project.org/posting-guide.html
>> and provide commented, minimal, self-contained, reproducible code.
>>
>

	[[alternative HTML version deleted]]


From @|gbert @end|ng |rom w|w|@hu-ber||n@de  Sun Apr  3 20:00:31 2022
From: @|gbert @end|ng |rom w|w|@hu-ber||n@de (Sigbert Klinke)
Date: Sun, 3 Apr 2022 20:00:31 +0200
Subject: [R] binom.test & p-value
Message-ID: <bd4b57e5-2f91-9b11-ce04-50cadc8293d8@wiwi.hu-berlin.de>

Hi,

for the specific example binom.test(x=6, n=26, p=0.1) I get as p-value 
0.03986. The default approach to decide whether I can reject the null or 
or not is to compare the p-value with the given significance level. 
Using a significance level of 0.05 this will lead to reject the null 
hypothesis.

However, computing things by hand it turned out that the critical values 
are 0 and 6. Since the test statistic is also 6 I can not reject the 
null hypothesis.

I found the discussion under 
https://stat.ethz.ch/pipermail/r-help/2009-February/380341.html and I 
understand that a p-value is not well defined if we have a asymmmetric 
(discrete) distribution under the null.

At least I would have expected some hint in the documentation for 
binom.test.

Sigbert

-- 
https://hu.berlin/sk
https://www.stat.de/faqs
https://hu.berlin/mmstat
https://hu.berlin/mmstat-int
https://hu.berlin/mmstat-ar


From ru|pb@rr@d@@ @end|ng |rom @@po@pt  Sun Apr  3 20:19:15 2022
From: ru|pb@rr@d@@ @end|ng |rom @@po@pt (Rui Barradas)
Date: Sun, 3 Apr 2022 19:19:15 +0100
Subject: [R] binom.test & p-value
In-Reply-To: <bd4b57e5-2f91-9b11-ce04-50cadc8293d8@wiwi.hu-berlin.de>
References: <bd4b57e5-2f91-9b11-ce04-50cadc8293d8@wiwi.hu-berlin.de>
Message-ID: <093a432a-2f04-aa6f-572f-47bc4195fd45@sapo.pt>

Hello,

Can you post your computations? Assuming a two-sided test, mine are


x <- 6
n <- 26
p <- 0.1

cmb <- sapply(x:n, \(i) choose(n, i))
sum(cmb * p^(x:n) * (1 - p)^(n - (x:n)))
#[1] 0.03985931

binom.test(x=6, n=26, p=0.1)$p.value
#[1] 0.03985931


The result are equal to one another.

?s 19:00 de 03/04/2022, Sigbert Klinke escreveu:
> Hi,
> 
> for the specific example binom.test(x=6, n=26, p=0.1) I get as p-value 
> 0.03986. The default approach to decide whether I can reject the null or 
> or not is to compare the p-value with the given significance level. 
> Using a significance level of 0.05 this will lead to reject the null 
> hypothesis.
> 
> However, computing things by hand it turned out that the critical values 
> are 0 and 6. Since the test statistic is also 6 I can not reject the 
> null hypothesis.
> 
> I found the discussion under 
> https://stat.ethz.ch/pipermail/r-help/2009-February/380341.html and I 
> understand that a p-value is not well defined if we have a asymmmetric 
> (discrete) distribution under the null.
> 
> At least I would have expected some hint in the documentation for 
> binom.test.
> 
> Sigbert
>


From ru|pb@rr@d@@ @end|ng |rom @@po@pt  Sun Apr  3 20:21:15 2022
From: ru|pb@rr@d@@ @end|ng |rom @@po@pt (Rui Barradas)
Date: Sun, 3 Apr 2022 19:21:15 +0100
Subject: [R] binom.test & p-value
In-Reply-To: <093a432a-2f04-aa6f-572f-47bc4195fd45@sapo.pt>
References: <bd4b57e5-2f91-9b11-ce04-50cadc8293d8@wiwi.hu-berlin.de>
 <093a432a-2f04-aa6f-572f-47bc4195fd45@sapo.pt>
Message-ID: <3ee68f28-b6e2-ec08-7306-5d8834d772bc@sapo.pt>

Sorry, forgot to sign the previous e-mail.

Rui Barradas

?s 19:19 de 03/04/2022, Rui Barradas escreveu:
> Hello,
> 
> Can you post your computations? Assuming a two-sided test, mine are
> 
> 
> x <- 6
> n <- 26
> p <- 0.1
> 
> cmb <- sapply(x:n, \(i) choose(n, i))
> sum(cmb * p^(x:n) * (1 - p)^(n - (x:n)))
> #[1] 0.03985931
> 
> binom.test(x=6, n=26, p=0.1)$p.value
> #[1] 0.03985931
> 
> 
> The result are equal to one another.
> 
> ?s 19:00 de 03/04/2022, Sigbert Klinke escreveu:
>> Hi,
>>
>> for the specific example binom.test(x=6, n=26, p=0.1) I get as p-value 
>> 0.03986. The default approach to decide whether I can reject the null 
>> or or not is to compare the p-value with the given significance level. 
>> Using a significance level of 0.05 this will lead to reject the null 
>> hypothesis.
>>
>> However, computing things by hand it turned out that the critical 
>> values are 0 and 6. Since the test statistic is also 6 I can not 
>> reject the null hypothesis.
>>
>> I found the discussion under 
>> https://stat.ethz.ch/pipermail/r-help/2009-February/380341.html and I 
>> understand that a p-value is not well defined if we have a asymmmetric 
>> (discrete) distribution under the null.
>>
>> At least I would have expected some hint in the documentation for 
>> binom.test.
>>
>> Sigbert
>>
> 
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide 
> http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.


From drj|m|emon @end|ng |rom gm@||@com  Sun Apr  3 23:54:51 2022
From: drj|m|emon @end|ng |rom gm@||@com (Jim Lemon)
Date: Mon, 4 Apr 2022 07:54:51 +1000
Subject: [R] Plotting proportions
In-Reply-To: <CABxY9BNwhhWgN6zBt5kPNyv69eHWGN5DRdBKTBfMGxzaFRKhUw@mail.gmail.com>
References: <CABxY9BNwhhWgN6zBt5kPNyv69eHWGN5DRdBKTBfMGxzaFRKhUw@mail.gmail.com>
Message-ID: <CA+8X3fXMGRsn46jZeSYv0C_gXD0qOdvrZAH0vFT_Qpj1mLYYrQ@mail.gmail.com>

Hi Nick,
If you can bear using R base graphics, the plotrix package has a
function named "getYmult" that allows you to adjust for the aspect
ratio of any plot area.

Jim

On Sun, Apr 3, 2022 at 11:14 PM Nick Wray <nickmwray at gmail.com> wrote:
>
> Hello  If you plot a square in the default R studio window you see a
> rectangle.  Does anyone know what the proportions of the sides of this
> rectangle are?  Thanks Nick Wray
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.


From w||||@mwdun|@p @end|ng |rom gm@||@com  Mon Apr  4 03:06:55 2022
From: w||||@mwdun|@p @end|ng |rom gm@||@com (Bill Dunlap)
Date: Sun, 3 Apr 2022 18:06:55 -0700
Subject: [R] Plotting proportions
In-Reply-To: <CA+8X3fXMGRsn46jZeSYv0C_gXD0qOdvrZAH0vFT_Qpj1mLYYrQ@mail.gmail.com>
References: <CABxY9BNwhhWgN6zBt5kPNyv69eHWGN5DRdBKTBfMGxzaFRKhUw@mail.gmail.com>
 <CA+8X3fXMGRsn46jZeSYv0C_gXD0qOdvrZAH0vFT_Qpj1mLYYrQ@mail.gmail.com>
Message-ID: <CAHqSRuTv5FwHWCqa2=X-YmyOKo2eyOFekbeHO7G9tO1+EzUCfw@mail.gmail.com>

plot.window() (hence the default plot()) has an 'asp' argument that sets
the ratio of the y and x scales.
E.g.,
   par(mfrow=c(3,1))
   plot( 1i ^ (0:4), type="l")
   plot( 1i ^ (0:4), type="l", asp=1)
   plot( 1i ^ (0:4), type="l", asp=0.5)

-Bill

On Sun, Apr 3, 2022 at 2:55 PM Jim Lemon <drjimlemon at gmail.com> wrote:

> Hi Nick,
> If you can bear using R base graphics, the plotrix package has a
> function named "getYmult" that allows you to adjust for the aspect
> ratio of any plot area.
>
> Jim
>
> On Sun, Apr 3, 2022 at 11:14 PM Nick Wray <nickmwray at gmail.com> wrote:
> >
> > Hello  If you plot a square in the default R studio window you see a
> > rectangle.  Does anyone know what the proportions of the sides of this
> > rectangle are?  Thanks Nick Wray
> >
> >         [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> > https://stat.ethz.ch/mailman/listinfo/r-help
> > PLEASE do read the posting guide
> http://www.R-project.org/posting-guide.html
> > and provide commented, minimal, self-contained, reproducible code.
>
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide
> http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>

	[[alternative HTML version deleted]]


