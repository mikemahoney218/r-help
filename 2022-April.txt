From v@r|n@@ch@ @end|ng |rom y@hoo@|r  Fri Apr  1 00:08:35 2022
From: v@r|n@@ch@ @end|ng |rom y@hoo@|r (varin sacha)
Date: Thu, 31 Mar 2022 22:08:35 +0000 (UTC)
Subject: [R] pcalg library : estimated DAG graph
References: <2065726392.779530.1648764515413.ref@mail.yahoo.com>
Message-ID: <2065726392.779530.1648764515413@mail.yahoo.com>

Dear R-experts,

Here below my R code working but I don't know how I can get the graph (estimated DAG). 
If you could help me to get the graph, many thanks.


###################
library(pcalg)

x1<-c(508,413,426,500,568,372,484,512,529,322,544,586,480,561,567,488,450,548,526,561,435,567,537,521,516,407,531,374,406,595,460,420,453,562,530)

x2<-c(531,491,353,522,341,493,431,565,530,441,403,498,552,513,513,403,445,424,529,486,519,492,397,579,479,511,535,504,465,520,517,528,542,483,499) 

x3<-c(541,451,510,649,329,464,511,609,643,530,568,366,371,442,611,437,445,589,605,456,437,179,540,580,587,540,505,310,542,488,525,483,200,517,513)

x4<-c(488,473,449,564,447,593,420,685,597,534,608,389,557,385,564,449,530,615,502,510,412,321,509,480,469,594,506,431,555,567,491,414,359,418,468) 

x5<-c(487,430,419,583,469,369,540,637,563,328,498,448,356,552,521,417,513,570,530,594,372,537,469,454,554,518,550,384,533,594,467,471,590,552,556)

x6<-c(511,452,432,563,431,458,477,601,572,431,524,458,463,491,555,439,477,549,539,521,435,419,490,523,521,514,525,401,500,553,492,463,429,506,513) 

X=cbind(x1,x2,x3,x4,x5,x6)

res1=lingam(X,verbose=TRUE)
cat("estimated DAG:/n")
as(res1,"amat")
res1
###################

?


From bgunter@4567 @end|ng |rom gm@||@com  Fri Apr  1 00:28:44 2022
From: bgunter@4567 @end|ng |rom gm@||@com (Bert Gunter)
Date: Thu, 31 Mar 2022 15:28:44 -0700
Subject: [R] pcalg library : estimated DAG graph
In-Reply-To: <2065726392.779530.1648764515413@mail.yahoo.com>
References: <2065726392.779530.1648764515413.ref@mail.yahoo.com>
 <2065726392.779530.1648764515413@mail.yahoo.com>
Message-ID: <CAGxFJbTAb7PL=Z8LnUj9Zwjy8VOP47tczGu1oVA_WENXwCxjTA@mail.gmail.com>

Getting help here on non-standard packages -- there are tens of thousands
-- is technically off topic (see the Posting Guide linked below) and hence
you should not be surprised if you do not get a useful reply, though you
may, of course.

You might have better luck posting on r-sig-networks,
https://stat.ethz.ch/mailman/listinfo/r-sig-networks, as it says on its
homepage that this SIG is specifically for those interested in "graph-
related software" within R.

Bert Gunter

"The trouble with having an open mind is that people keep coming along and
sticking things into it."
-- Opus (aka Berkeley Breathed in his "Bloom County" comic strip )


On Thu, Mar 31, 2022 at 3:06 PM varin sacha via R-help <r-help at r-project.org>
wrote:

> Dear R-experts,
>
> Here below my R code working but I don't know how I can get the graph
> (estimated DAG).
> If you could help me to get the graph, many thanks.
>
>
> ###################
> library(pcalg)
>
>
> x1<-c(508,413,426,500,568,372,484,512,529,322,544,586,480,561,567,488,450,548,526,561,435,567,537,521,516,407,531,374,406,595,460,420,453,562,530)
>
> x2<-c(531,491,353,522,341,493,431,565,530,441,403,498,552,513,513,403,445,424,529,486,519,492,397,579,479,511,535,504,465,520,517,528,542,483,499)
>
>
>
> x3<-c(541,451,510,649,329,464,511,609,643,530,568,366,371,442,611,437,445,589,605,456,437,179,540,580,587,540,505,310,542,488,525,483,200,517,513)
>
> x4<-c(488,473,449,564,447,593,420,685,597,534,608,389,557,385,564,449,530,615,502,510,412,321,509,480,469,594,506,431,555,567,491,414,359,418,468)
>
>
>
> x5<-c(487,430,419,583,469,369,540,637,563,328,498,448,356,552,521,417,513,570,530,594,372,537,469,454,554,518,550,384,533,594,467,471,590,552,556)
>
> x6<-c(511,452,432,563,431,458,477,601,572,431,524,458,463,491,555,439,477,549,539,521,435,419,490,523,521,514,525,401,500,553,492,463,429,506,513)
>
>
> X=cbind(x1,x2,x3,x4,x5,x6)
>
> res1=lingam(X,verbose=TRUE)
> cat("estimated DAG:/n")
> as(res1,"amat")
> res1
> ###################
>
>
>
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide
> http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>

	[[alternative HTML version deleted]]


From petr@p|k@| @end|ng |rom prechez@@cz  Fri Apr  1 07:24:58 2022
From: petr@p|k@| @end|ng |rom prechez@@cz (PIKAL Petr)
Date: Fri, 1 Apr 2022 05:24:58 +0000
Subject: [R] pcalg library : estimated DAG graph
In-Reply-To: <2065726392.779530.1648764515413@mail.yahoo.com>
References: <2065726392.779530.1648764515413.ref@mail.yahoo.com>
 <2065726392.779530.1648764515413@mail.yahoo.com>
Message-ID: <4bb323d6da7b4af086fae5bb995586c1@SRVEXCHCM1302.precheza.cz>

Hallo

It is not obvious what is your problem. You maybe should go through some 
articles about functions in the package.
https://pdfs.semanticscholar.org/aee5/cca63aad422c96ee637b5561bb051724d76c.pdf?_ga=2.241710466.1872226166.1648790330-1600227915.1617009045

or maybe you do not have Rgraphviz package installed as required by plotting 
functions of the package.

R> stopifnot(require(Rgraphviz))# needed for all our graph plots

Cheers
Petr

> -----Original Message-----
> From: R-help <r-help-bounces at r-project.org> On Behalf Of varin sacha via
> R-help
> Sent: Friday, April 1, 2022 12:09 AM
> To: r-help at r-project.org
> Subject: [R] pcalg library : estimated DAG graph
>
> Dear R-experts,
>
> Here below my R code working but I don't know how I can get the graph
> (estimated DAG).
> If you could help me to get the graph, many thanks.
>
>
> ###################
> library(pcalg)
>
> x1<-
> c(508,413,426,500,568,372,484,512,529,322,544,586,480,561,567,488,450,
> 548,526,561,435,567,537,521,516,407,531,374,406,595,460,420,453,562,53
> 0)
>
> x2<-
> c(531,491,353,522,341,493,431,565,530,441,403,498,552,513,513,403,445,
> 424,529,486,519,492,397,579,479,511,535,504,465,520,517,528,542,483,49
> 9)
>
> x3<-
> c(541,451,510,649,329,464,511,609,643,530,568,366,371,442,611,437,445,
> 589,605,456,437,179,540,580,587,540,505,310,542,488,525,483,200,517,51
> 3)
>
> x4<-
> c(488,473,449,564,447,593,420,685,597,534,608,389,557,385,564,449,530,
> 615,502,510,412,321,509,480,469,594,506,431,555,567,491,414,359,418,46
> 8)
>
> x5<-
> c(487,430,419,583,469,369,540,637,563,328,498,448,356,552,521,417,513,
> 570,530,594,372,537,469,454,554,518,550,384,533,594,467,471,590,552,55
> 6)
>
> x6<-
> c(511,452,432,563,431,458,477,601,572,431,524,458,463,491,555,439,477,
> 549,539,521,435,419,490,523,521,514,525,401,500,553,492,463,429,506,51
> 3)
>
> X=cbind(x1,x2,x3,x4,x5,x6)
>
> res1=lingam(X,verbose=TRUE)
> cat("estimated DAG:/n")
> as(res1,"amat")
> res1
> ###################
>
>
>
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-
> guide.html
> and provide commented, minimal, self-contained, reproducible code.

From p@tr|ck@g|r@udoux @end|ng |rom un|v-|comte@|r  Fri Apr  1 08:12:28 2022
From: p@tr|ck@g|r@udoux @end|ng |rom un|v-|comte@|r (Patrick Giraudoux)
Date: Fri, 1 Apr 2022 08:12:28 +0200
Subject: [R] readxl, read_excel: how colon (:) is read ?
Message-ID: <04b39c28-a42e-1a91-c446-82d53eb873b8@univ-fcomte.fr>

I have a unexpected behaviour reading times with colon from an Excel 
file, using the package readxl.

In an Excel sheet, I have a column with times in hours:minutes, e.g:

Arrival_time
13:39
13:51

When read from R with readxl::read_excel, this gives a tibble column 
with full date by defaut being the last day of 1899. OK. Why not, I know 
that POSIX variables are starting in 1900 after R doc (however I wonder 
why here the defaut is one day before January 1, 1900

> tmp$Arrival_time  [1] "1899-12-31 13:39:00 UTC" "1899-12-31 13:51:00 UTC"

Well, this is not exactly what I want to. I do not care about the year 
and the day... Therefore I decided to import this column as "text" 
explicitely (in order to manage it within R then). And this is what I 
get now:

> read_excel("saisie_data_durban_rapaces_LPO.xlsx",sheet=2,col_types="text")  > tmp$Arrival_time [1] "0.56875000000000009" "0.57708333333333328"

Can someone tell me what happens ?

I would really appreciate to understand the trick...


	[[alternative HTML version deleted]]


From @kw@|mmo @end|ng |rom gm@||@com  Fri Apr  1 08:26:33 2022
From: @kw@|mmo @end|ng |rom gm@||@com (Andrew Simmons)
Date: Fri, 1 Apr 2022 02:26:33 -0400
Subject: [R] readxl, read_excel: how colon (:) is read ?
In-Reply-To: <04b39c28-a42e-1a91-c446-82d53eb873b8@univ-fcomte.fr>
References: <04b39c28-a42e-1a91-c446-82d53eb873b8@univ-fcomte.fr>
Message-ID: <CAPcHnpTpPt90Y-T6HZSTNhoq=RFf=RLjn__PV-Xusc_ATdN0LA@mail.gmail.com>

Probably (but not entirely sure), Excel is storing your text as a number of
days, so 13:38 is a little more than half a day. Open your spreadsheet in
excel and save those columns as text instead of times, that (should) fix
your issue.

On Fri, Apr 1, 2022, 02:12 Patrick Giraudoux <
patrick.giraudoux at univ-fcomte.fr> wrote:

> I have a unexpected behaviour reading times with colon from an Excel
> file, using the package readxl.
>
> In an Excel sheet, I have a column with times in hours:minutes, e.g:
>
> Arrival_time
> 13:39
> 13:51
>
> When read from R with readxl::read_excel, this gives a tibble column
> with full date by defaut being the last day of 1899. OK. Why not, I know
> that POSIX variables are starting in 1900 after R doc (however I wonder
> why here the defaut is one day before January 1, 1900
>
> > tmp$Arrival_time  [1] "1899-12-31 13:39:00 UTC" "1899-12-31 13:51:00 UTC"
>
> Well, this is not exactly what I want to. I do not care about the year
> and the day... Therefore I decided to import this column as "text"
> explicitely (in order to manage it within R then). And this is what I
> get now:
>
> >
> read_excel("saisie_data_durban_rapaces_LPO.xlsx",sheet=2,col_types="text")
> > tmp$Arrival_time [1] "0.56875000000000009" "0.57708333333333328"
>
> Can someone tell me what happens ?
>
> I would really appreciate to understand the trick...
>
>
>         [[alternative HTML version deleted]]
>
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide
> http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>

	[[alternative HTML version deleted]]


From p@tr|ck@g|r@udoux @end|ng |rom un|v-|comte@|r  Fri Apr  1 08:34:12 2022
From: p@tr|ck@g|r@udoux @end|ng |rom un|v-|comte@|r (Patrick Giraudoux)
Date: Fri, 1 Apr 2022 08:34:12 +0200
Subject: [R] readxl, read_excel: how colon (:) is read ?
In-Reply-To: <CAPcHnpTpPt90Y-T6HZSTNhoq=RFf=RLjn__PV-Xusc_ATdN0LA@mail.gmail.com>
References: <04b39c28-a42e-1a91-c446-82d53eb873b8@univ-fcomte.fr>
 <CAPcHnpTpPt90Y-T6HZSTNhoq=RFf=RLjn__PV-Xusc_ATdN0LA@mail.gmail.com>
Message-ID: <203cebec-5609-e41e-c4f9-1b5882058734@univ-fcomte.fr>

Absolutely correct ! I checked in Excel and when I change the format to 
"text", then I get in Excel the same fractional numbers as those 
obtained importing text from R... Hence the issue comes from Excel 
itself. Will find a way to change this format to text in Excel without 
avoiding such conversion...
Thanks Andrew !

Le 01/04/2022 ? 08:26, Andrew Simmons a ?crit?:
> Probably (but not entirely sure), Excel is storing your text as a 
> number of days, so 13:38 is a little more than half a day. Open your 
> spreadsheet in excel and save those columns as text instead of times, 
> that (should) fix your issue.
>
> On Fri, Apr 1, 2022, 02:12 Patrick Giraudoux 
> <patrick.giraudoux at univ-fcomte.fr> wrote:
>
>     I have a unexpected behaviour reading times with colon from an Excel
>     file, using the package readxl.
>
>     In an Excel sheet, I have a column with times in hours:minutes, e.g:
>
>     Arrival_time
>     13:39
>     13:51
>
>     When read from R with readxl::read_excel, this gives a tibble column
>     with full date by defaut being the last day of 1899. OK. Why not,
>     I know
>     that POSIX variables are starting in 1900 after R doc (however I
>     wonder
>     why here the defaut is one day before January 1, 1900
>
>     > tmp$Arrival_time? [1] "1899-12-31 13:39:00 UTC" "1899-12-31
>     13:51:00 UTC"
>
>     Well, this is not exactly what I want to. I do not care about the
>     year
>     and the day... Therefore I decided to import this column as "text"
>     explicitely (in order to manage it within R then). And this is what I
>     get now:
>
>     >
>     read_excel("saisie_data_durban_rapaces_LPO.xlsx",sheet=2,col_types="text")
>     > tmp$Arrival_time [1] "0.56875000000000009" "0.57708333333333328"
>
>     Can someone tell me what happens ?
>
>     I would really appreciate to understand the trick...
>
>
>     ? ? ? ? [[alternative HTML version deleted]]
>
>     ______________________________________________
>     R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>     https://stat.ethz.ch/mailman/listinfo/r-help
>     PLEASE do read the posting guide
>     http://www.R-project.org/posting-guide.html
>     <http://www.R-project.org/posting-guide.html>
>     and provide commented, minimal, self-contained, reproducible code.
>

	[[alternative HTML version deleted]]


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Fri Apr  1 08:40:48 2022
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Thu, 31 Mar 2022 23:40:48 -0700
Subject: [R] readxl, read_excel: how colon (:) is read ?
In-Reply-To: <04b39c28-a42e-1a91-c446-82d53eb873b8@univ-fcomte.fr>
References: <04b39c28-a42e-1a91-c446-82d53eb873b8@univ-fcomte.fr>
Message-ID: <DA8615A6-D08B-425C-9DBD-D5B118A75F2B@dcn.davis.ca.us>

Both R and Excel assume a date is associated with every time object. In Excel, when you show a date it is an integer number of days since 1899-12-31 (due to a mistake made early in programming it). Whenever you show a time, it it merely displaying the time portion (fraction of a day) of a date/time. The date part of that value may or may not be 1899-12-31.

With this in mind, you are tilting at windmills hoping to import a "pure time" because no such thing exists in either program. You can choose to render a `POSIXct` as showing only the time portion when you convert it to character if you so choose.

On March 31, 2022 11:12:28 PM PDT, Patrick Giraudoux <patrick.giraudoux at univ-fcomte.fr> wrote:
>I have a unexpected behaviour reading times with colon from an Excel 
>file, using the package readxl.
>
>In an Excel sheet, I have a column with times in hours:minutes, e.g:
>
>Arrival_time
>13:39
>13:51
>
>When read from R with readxl::read_excel, this gives a tibble column 
>with full date by defaut being the last day of 1899. OK. Why not, I know 
>that POSIX variables are starting in 1900 after R doc (however I wonder 
>why here the defaut is one day before January 1, 1900
>
>> tmp$Arrival_time  [1] "1899-12-31 13:39:00 UTC" "1899-12-31 13:51:00 UTC"
>
>Well, this is not exactly what I want to. I do not care about the year 
>and the day... Therefore I decided to import this column as "text" 
>explicitely (in order to manage it within R then). And this is what I 
>get now:
>
>> read_excel("saisie_data_durban_rapaces_LPO.xlsx",sheet=2,col_types="text")  > tmp$Arrival_time [1] "0.56875000000000009" "0.57708333333333328"
>
>Can someone tell me what happens ?
>
>I would really appreciate to understand the trick...
>
>
>	[[alternative HTML version deleted]]
>
>______________________________________________
>R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>https://stat.ethz.ch/mailman/listinfo/r-help
>PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
>and provide commented, minimal, self-contained, reproducible code.

-- 
Sent from my phone. Please excuse my brevity.


From p@tr|ck@g|r@udoux @end|ng |rom un|v-|comte@|r  Fri Apr  1 08:41:42 2022
From: p@tr|ck@g|r@udoux @end|ng |rom un|v-|comte@|r (Patrick Giraudoux)
Date: Fri, 1 Apr 2022 08:41:42 +0200
Subject: [R] readxl, read_excel: how colon (:) is read ?
In-Reply-To: <203cebec-5609-e41e-c4f9-1b5882058734@univ-fcomte.fr>
References: <04b39c28-a42e-1a91-c446-82d53eb873b8@univ-fcomte.fr>
 <CAPcHnpTpPt90Y-T6HZSTNhoq=RFf=RLjn__PV-Xusc_ATdN0LA@mail.gmail.com>
 <203cebec-5609-e41e-c4f9-1b5882058734@univ-fcomte.fr>
Message-ID: <54a0a66a-91a3-b245-8dd6-c2601824837b@univ-fcomte.fr>

This can be made using the TEXT (TEXTE in the French version) function 
of Excel, hence:

TEXT(M2;"HH:MM")

Changes the time into text, and it can be imported from R as wanted.



Le 01/04/2022 ? 08:34, Patrick Giraudoux a ?crit?:
> Absolutely correct ! I checked in Excel and when I change the format 
> to "text", then I get in Excel the same fractional numbers as those 
> obtained importing text from R... Hence the issue comes from Excel 
> itself. Will find a way to change this format to text in Excel without 
> avoiding such conversion...
> Thanks Andrew !
>
> Le 01/04/2022 ? 08:26, Andrew Simmons a ?crit?:
>> Probably (but not entirely sure), Excel is storing your text as a 
>> number of days, so 13:38 is a little more than half a day. Open your 
>> spreadsheet in excel and save those columns as text instead of times, 
>> that (should) fix your issue.
>>
>> On Fri, Apr 1, 2022, 02:12 Patrick Giraudoux 
>> <patrick.giraudoux at univ-fcomte.fr> wrote:
>>
>>     I have a unexpected behaviour reading times with colon from an Excel
>>     file, using the package readxl.
>>
>>     In an Excel sheet, I have a column with times in hours:minutes, e.g:
>>
>>     Arrival_time
>>     13:39
>>     13:51
>>
>>     When read from R with readxl::read_excel, this gives a tibble column
>>     with full date by defaut being the last day of 1899. OK. Why not,
>>     I know
>>     that POSIX variables are starting in 1900 after R doc (however I
>>     wonder
>>     why here the defaut is one day before January 1, 1900
>>
>>     > tmp$Arrival_time? [1] "1899-12-31 13:39:00 UTC" "1899-12-31
>>     13:51:00 UTC"
>>
>>     Well, this is not exactly what I want to. I do not care about the
>>     year
>>     and the day... Therefore I decided to import this column as "text"
>>     explicitely (in order to manage it within R then). And this is
>>     what I
>>     get now:
>>
>>     >
>>     read_excel("saisie_data_durban_rapaces_LPO.xlsx",sheet=2,col_types="text")
>>     > tmp$Arrival_time [1] "0.56875000000000009" "0.57708333333333328"
>>
>>     Can someone tell me what happens ?
>>
>>     I would really appreciate to understand the trick...
>>
>>
>>     ? ? ? ? [[alternative HTML version deleted]]
>>
>>     ______________________________________________
>>     R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>>     https://stat.ethz.ch/mailman/listinfo/r-help
>>     PLEASE do read the posting guide
>>     http://www.R-project.org/posting-guide.html
>>     <http://www.R-project.org/posting-guide.html>
>>     and provide commented, minimal, self-contained, reproducible code.
>>
>

	[[alternative HTML version deleted]]


From p@tr|ck@g|r@udoux @end|ng |rom un|v-|comte@|r  Fri Apr  1 08:46:05 2022
From: p@tr|ck@g|r@udoux @end|ng |rom un|v-|comte@|r (Patrick Giraudoux)
Date: Fri, 1 Apr 2022 08:46:05 +0200
Subject: [R] readxl, read_excel: how colon (:) is read ?
In-Reply-To: <DA8615A6-D08B-425C-9DBD-D5B118A75F2B@dcn.davis.ca.us>
References: <04b39c28-a42e-1a91-c446-82d53eb873b8@univ-fcomte.fr>
 <DA8615A6-D08B-425C-9DBD-D5B118A75F2B@dcn.davis.ca.us>
Message-ID: <a833a236-2ce3-9dfe-9aeb-ad29bfb152c6@univ-fcomte.fr>

Le 01/04/2022 ? 08:40, Jeff Newmiller a ?crit?:
> Both R and Excel assume a date is associated with every time object. In Excel, when you show a date it is an integer number of days since 1899-12-31 (due to a mistake made early in programming it). Whenever you show a time, it it merely displaying the time portion (fraction of a day) of a date/time. The date part of that value may or may not be 1899-12-31.
>
> With this in mind, you are tilting at windmills hoping to import a "pure time" because no such thing exists in either program. You can choose to render a `POSIXct` as showing only the time portion when you convert it to character if you so choose.

Thanks for the infos. Yes, this is exactly what? I did yesterday with 
POSIXct > POSIXlt to go ahead. However I wanted to understand fully what 
happened, hence the call to the list. Jeff and Andrew, now eveything is 
clear to me thanks to you...


	[[alternative HTML version deleted]]


From ru|pb@rr@d@@ @end|ng |rom @@po@pt  Fri Apr  1 09:09:02 2022
From: ru|pb@rr@d@@ @end|ng |rom @@po@pt (Rui Barradas)
Date: Fri, 1 Apr 2022 08:09:02 +0100
Subject: [R] readxl, read_excel: how colon (:) is read ?
In-Reply-To: <04b39c28-a42e-1a91-c446-82d53eb873b8@univ-fcomte.fr>
References: <04b39c28-a42e-1a91-c446-82d53eb873b8@univ-fcomte.fr>
Message-ID: <cbea4019-7fb0-8eb6-115e-0b3671677a8a@sapo.pt>

Hello,

The following function is probably not very solid, to work with dates 
and times is not trivial, but it converts those Excel numbers correctly.

I don't know with what numbers it fails.


xl_fracday_to_time <- function(x, digits = 0L) {
   old_opts <- options(digits = 20)
   on.exit(options(old_opts))
   if(is.character(x)) {
     x <- as.numeric(x)
   }
   y <- x * 24
   hours <- floor(y + .Machine$double.eps^0.5)
   y <- (y - hours) * 60
   mins <- floor(y + .Machine$double.eps^0.5)
   y <- (y - mins) * 60
   secs <- round(y, digits = digits)
   sprintf("%02d:%02d:%02d", hours, mins, secs)
}

x <- c("0.56875000000000009", "0.57708333333333328")
xl_fracday_to_time(x)
#[1] "13:39:00" "13:51:00"


Hope this helps,

Rui Barradas

?s 07:12 de 01/04/2022, Patrick Giraudoux escreveu:
> I have a unexpected behaviour reading times with colon from an Excel
> file, using the package readxl.
> 
> In an Excel sheet, I have a column with times in hours:minutes, e.g:
> 
> Arrival_time
> 13:39
> 13:51
> 
> When read from R with readxl::read_excel, this gives a tibble column
> with full date by defaut being the last day of 1899. OK. Why not, I know
> that POSIX variables are starting in 1900 after R doc (however I wonder
> why here the defaut is one day before January 1, 1900
> 
>> tmp$Arrival_time  [1] "1899-12-31 13:39:00 UTC" "1899-12-31 13:51:00 UTC"
> 
> Well, this is not exactly what I want to. I do not care about the year
> and the day... Therefore I decided to import this column as "text"
> explicitely (in order to manage it within R then). And this is what I
> get now:
> 
>> read_excel("saisie_data_durban_rapaces_LPO.xlsx",sheet=2,col_types="text")  > tmp$Arrival_time [1] "0.56875000000000009" "0.57708333333333328"
> 
> Can someone tell me what happens ?
> 
> I would really appreciate to understand the trick...
> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.


From p@tr|ck@g|r@udoux @end|ng |rom un|v-|comte@|r  Fri Apr  1 09:50:05 2022
From: p@tr|ck@g|r@udoux @end|ng |rom un|v-|comte@|r (Patrick Giraudoux)
Date: Fri, 1 Apr 2022 09:50:05 +0200
Subject: [R] readxl, read_excel: how colon (:) is read ?
In-Reply-To: <cbea4019-7fb0-8eb6-115e-0b3671677a8a@sapo.pt>
References: <04b39c28-a42e-1a91-c446-82d53eb873b8@univ-fcomte.fr>
 <cbea4019-7fb0-8eb6-115e-0b3671677a8a@sapo.pt>
Message-ID: <4aa35965-37e0-8883-2447-a7dd57d4d9f0@univ-fcomte.fr>

Thanks ! An option is also to import from excel as a text, hence getting 
a fractional number of day as character. With as.numeric, it can be 
converted to numeric. The conversion into any unit of a day (hour, 
minutes, etc.) is then easy...
 ?eg. 0.5*24 = 12 hours


Le 01/04/2022 ? 09:09, Rui Barradas a ?crit?:
> Hello,
>
> The following function is probably not very solid, to work with dates 
> and times is not trivial, but it converts those Excel numbers correctly.
>
> I don't know with what numbers it fails.
>
>
> xl_fracday_to_time <- function(x, digits = 0L) {
> ? old_opts <- options(digits = 20)
> ? on.exit(options(old_opts))
> ? if(is.character(x)) {
> ??? x <- as.numeric(x)
> ? }
> ? y <- x * 24
> ? hours <- floor(y + .Machine$double.eps^0.5)
> ? y <- (y - hours) * 60
> ? mins <- floor(y + .Machine$double.eps^0.5)
> ? y <- (y - mins) * 60
> ? secs <- round(y, digits = digits)
> ? sprintf("%02d:%02d:%02d", hours, mins, secs)
> }
>
> x <- c("0.56875000000000009", "0.57708333333333328")
> xl_fracday_to_time(x)
> #[1] "13:39:00" "13:51:00"
>
>
> Hope this helps,
>
> Rui Barradas
>
> ?s 07:12 de 01/04/2022, Patrick Giraudoux escreveu:
>> I have a unexpected behaviour reading times with colon from an Excel
>> file, using the package readxl.
>>
>> In an Excel sheet, I have a column with times in hours:minutes, e.g:
>>
>> Arrival_time
>> 13:39
>> 13:51
>>
>> When read from R with readxl::read_excel, this gives a tibble column
>> with full date by defaut being the last day of 1899. OK. Why not, I know
>> that POSIX variables are starting in 1900 after R doc (however I wonder
>> why here the defaut is one day before January 1, 1900
>>
>>> tmp$Arrival_time? [1] "1899-12-31 13:39:00 UTC" "1899-12-31 13:51:00 
>>> UTC"
>>
>> Well, this is not exactly what I want to. I do not care about the year
>> and the day... Therefore I decided to import this column as "text"
>> explicitely (in order to manage it within R then). And this is what I
>> get now:
>>
>>> read_excel("saisie_data_durban_rapaces_LPO.xlsx",sheet=2,col_types="text") 
>>> > tmp$Arrival_time [1] "0.56875000000000009" "0.57708333333333328"
>>
>> Can someone tell me what happens ?
>>
>> I would really appreciate to understand the trick...
>>
>>
>> ????[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>> https://stat.ethz.ch/mailman/listinfo/r-help
>> PLEASE do read the posting guide 
>> http://www.R-project.org/posting-guide.html
>> and provide commented, minimal, self-contained, reproducible code.


	[[alternative HTML version deleted]]


From jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@  Fri Apr  1 09:53:01 2022
From: jdnewm|| @end|ng |rom dcn@d@v|@@c@@u@ (Jeff Newmiller)
Date: Fri, 01 Apr 2022 00:53:01 -0700
Subject: [R] readxl, read_excel: how colon (:) is read ?
In-Reply-To: <cbea4019-7fb0-8eb6-115e-0b3671677a8a@sapo.pt>
References: <04b39c28-a42e-1a91-c446-82d53eb873b8@univ-fcomte.fr>
 <cbea4019-7fb0-8eb6-115e-0b3671677a8a@sapo.pt>
Message-ID: <23804918-C4AA-47B6-B498-BD128F5CE689@dcn.davis.ca.us>

Why not simply let readxl read the timestamp as it will naturally and use

    dta$Arrival_time_c <- as.character( dta$Arrival_time, format = "%H:%M" )

... though time data in such a form is remarkably useless for data analysis.

On April 1, 2022 12:09:02 AM PDT, Rui Barradas <ruipbarradas at sapo.pt> wrote:
>Hello,
>
>The following function is probably not very solid, to work with dates 
>and times is not trivial, but it converts those Excel numbers correctly.
>
>I don't know with what numbers it fails.
>
>
>xl_fracday_to_time <- function(x, digits = 0L) {
>   old_opts <- options(digits = 20)
>   on.exit(options(old_opts))
>   if(is.character(x)) {
>     x <- as.numeric(x)
>   }
>   y <- x * 24
>   hours <- floor(y + .Machine$double.eps^0.5)
>   y <- (y - hours) * 60
>   mins <- floor(y + .Machine$double.eps^0.5)
>   y <- (y - mins) * 60
>   secs <- round(y, digits = digits)
>   sprintf("%02d:%02d:%02d", hours, mins, secs)
>}
>
>x <- c("0.56875000000000009", "0.57708333333333328")
>xl_fracday_to_time(x)
>#[1] "13:39:00" "13:51:00"
>
>
>Hope this helps,
>
>Rui Barradas
>
>?s 07:12 de 01/04/2022, Patrick Giraudoux escreveu:
>> I have a unexpected behaviour reading times with colon from an Excel
>> file, using the package readxl.
>> 
>> In an Excel sheet, I have a column with times in hours:minutes, e.g:
>> 
>> Arrival_time
>> 13:39
>> 13:51
>> 
>> When read from R with readxl::read_excel, this gives a tibble column
>> with full date by defaut being the last day of 1899. OK. Why not, I know
>> that POSIX variables are starting in 1900 after R doc (however I wonder
>> why here the defaut is one day before January 1, 1900
>> 
>>> tmp$Arrival_time  [1] "1899-12-31 13:39:00 UTC" "1899-12-31 13:51:00 UTC"
>> 
>> Well, this is not exactly what I want to. I do not care about the year
>> and the day... Therefore I decided to import this column as "text"
>> explicitely (in order to manage it within R then). And this is what I
>> get now:
>> 
>>> read_excel("saisie_data_durban_rapaces_LPO.xlsx",sheet=2,col_types="text")  > tmp$Arrival_time [1] "0.56875000000000009" "0.57708333333333328"
>> 
>> Can someone tell me what happens ?
>> 
>> I would really appreciate to understand the trick...
>> 
>> 
>> 	[[alternative HTML version deleted]]
>> 
>> ______________________________________________
>> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>> https://stat.ethz.ch/mailman/listinfo/r-help
>> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
>> and provide commented, minimal, self-contained, reproducible code.
>
>______________________________________________
>R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
>https://stat.ethz.ch/mailman/listinfo/r-help
>PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
>and provide commented, minimal, self-contained, reproducible code.

-- 
Sent from my phone. Please excuse my brevity.


From pj@|nh@07 @end|ng |rom gm@||@com  Fri Apr  1 01:00:20 2022
From: pj@|nh@07 @end|ng |rom gm@||@com (pooja sinha)
Date: Thu, 31 Mar 2022 19:00:20 -0400
Subject: [R] Violin plots in R
Message-ID: <CAGjf1cOgGf_hnfyG5msuAFERJOc1wo3f9vTXNYHaP_JH08XBXQ@mail.gmail.com>

Hi All,

I need your help in making the violin plot in R using the data which is
attached herewith. I am new to R and having issues in tidying my data for
R. I am trying the code but I am not able to tidy my data for violin plot
in ggplot.

Any help will be highly appreciated.

Thanks,
Puja

From er|cjberger @end|ng |rom gm@||@com  Fri Apr  1 11:32:41 2022
From: er|cjberger @end|ng |rom gm@||@com (Eric Berger)
Date: Fri, 1 Apr 2022 12:32:41 +0300
Subject: [R] Violin plots in R
In-Reply-To: <CAGjf1cOgGf_hnfyG5msuAFERJOc1wo3f9vTXNYHaP_JH08XBXQ@mail.gmail.com>
References: <CAGjf1cOgGf_hnfyG5msuAFERJOc1wo3f9vTXNYHaP_JH08XBXQ@mail.gmail.com>
Message-ID: <CAGgJW76PFX9=cmvNNuCh94eRmdEoqHPyQJnpVvBKTk0rTFZ3zg@mail.gmail.com>

1. Your data was not attached.
2. You should show the code that you tried so that people can find the
problem(s).
3. have you tried searching the web for examples that work? A quick search
gave this site which looked relevant

http://www.sthda.com/english/wiki/ggplot2-violin-plot-quick-start-guide-r-software-and-data-visualization


On Fri, Apr 1, 2022 at 12:12 PM pooja sinha <pjsinha07 at gmail.com> wrote:

> Hi All,
>
> I need your help in making the violin plot in R using the data which is
> attached herewith. I am new to R and having issues in tidying my data for
> R. I am trying the code but I am not able to tidy my data for violin plot
> in ggplot.
>
> Any help will be highly appreciated.
>
> Thanks,
> Puja
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide
> http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.
>

	[[alternative HTML version deleted]]


From tebert @end|ng |rom u||@edu  Fri Apr  1 11:34:53 2022
From: tebert @end|ng |rom u||@edu (Ebert,Timothy Aaron)
Date: Fri, 1 Apr 2022 09:34:53 +0000
Subject: [R] Violin plots in R
In-Reply-To: <CAGjf1cOgGf_hnfyG5msuAFERJOc1wo3f9vTXNYHaP_JH08XBXQ@mail.gmail.com>
References: <CAGjf1cOgGf_hnfyG5msuAFERJOc1wo3f9vTXNYHaP_JH08XBXQ@mail.gmail.com>
Message-ID: <BN6PR2201MB1553646A54C40A35565E49FACFE09@BN6PR2201MB1553.namprd22.prod.outlook.com>

No data. Attachments are removed. Send only text. Include program. Did you look at geom_violin() ? try http://www.sthda.com/english/wiki/ggplot2-violin-plot-quick-start-guide-r-software-and-data-visualization

If geom_point() is working then geom_violin() should also work. If neither work then the problem is earlier in the program. Possibly in the ggplot() statement, or earlier.
Tim

-----Original Message-----
From: R-help <r-help-bounces at r-project.org> On Behalf Of pooja sinha
Sent: Thursday, March 31, 2022 7:00 PM
To: r-help mailing list <r-help at r-project.org>
Subject: [R] Violin plots in R

[External Email]

Hi All,

I need your help in making the violin plot in R using the data which is attached herewith. I am new to R and having issues in tidying my data for R. I am trying the code but I am not able to tidy my data for violin plot in ggplot.

Any help will be highly appreciated.

Thanks,
Puja
______________________________________________
R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see https://urldefense.proofpoint.com/v2/url?u=https-3A__stat.ethz.ch_mailman_listinfo_r-2Dhelp&d=DwICAg&c=sJ6xIWYx-zLMB3EPkvcnVg&r=9PEhQh2kVeAsRzsn7AkP-g&m=ewsSBA7yD-EGNgEo5uwx8ypGde2s8cN0NqRJcjUeat_oxJOzxc4u1RoS4APbTp-G&s=5RT-EbmPWAiqxd-tCyTCK3tUPOmNomYvRoE-pgEKXMk&e=
PLEASE do read the posting guide https://urldefense.proofpoint.com/v2/url?u=http-3A__www.R-2Dproject.org_posting-2Dguide.html&d=DwICAg&c=sJ6xIWYx-zLMB3EPkvcnVg&r=9PEhQh2kVeAsRzsn7AkP-g&m=ewsSBA7yD-EGNgEo5uwx8ypGde2s8cN0NqRJcjUeat_oxJOzxc4u1RoS4APbTp-G&s=FhxhDOcldxc5mIg1wiE5kq4D_sxIm1Ho0PbejAHl8xY&e=
and provide commented, minimal, self-contained, reproducible code.


From petr@p|k@| @end|ng |rom prechez@@cz  Fri Apr  1 14:58:55 2022
From: petr@p|k@| @end|ng |rom prechez@@cz (PIKAL Petr)
Date: Fri, 1 Apr 2022 12:58:55 +0000
Subject: [R] Violin plots in R
In-Reply-To: <BN6PR2201MB1553646A54C40A35565E49FACFE09@BN6PR2201MB1553.namprd22.prod.outlook.com>
References: <CAGjf1cOgGf_hnfyG5msuAFERJOc1wo3f9vTXNYHaP_JH08XBXQ@mail.gmail.com>
 <BN6PR2201MB1553646A54C40A35565E49FACFE09@BN6PR2201MB1553.namprd22.prod.outlook.com>
Message-ID: <fc563a5b5c6a4aeba1353ba31d4980ae@SRVEXCHCM1302.precheza.cz>

Hi.

Beside advice of others, at least 

str(yourdata)
and the ggplot code is minimum for us to be able to offer some advice.

Preferable way how to send your data is output from

dput(yourdata) or dput(head(yourdata))

Just copy paste to your email.

Cheers
Petr

> -----Original Message-----
> From: R-help <r-help-bounces at r-project.org> On Behalf Of Ebert,Timothy
> Aaron
> Sent: Friday, April 1, 2022 11:35 AM
> To: pooja sinha <pjsinha07 at gmail.com>; r-help mailing list <r-help at r-
> project.org>
> Subject: Re: [R] Violin plots in R
> 
> No data. Attachments are removed. Send only text. Include program. Did you
> look at geom_violin() ? try http://www.sthda.com/english/wiki/ggplot2-
> violin-plot-quick-start-guide-r-software-and-data-visualization
> 
> If geom_point() is working then geom_violin() should also work. If neither
> work then the problem is earlier in the program. Possibly in the ggplot()
> statement, or earlier.
> Tim
> 
> -----Original Message-----
> From: R-help <r-help-bounces at r-project.org> On Behalf Of pooja sinha
> Sent: Thursday, March 31, 2022 7:00 PM
> To: r-help mailing list <r-help at r-project.org>
> Subject: [R] Violin plots in R
> 
> [External Email]
> 
> Hi All,
> 
> I need your help in making the violin plot in R using the data which is
> attached herewith. I am new to R and having issues in tidying my data for
R. I
> am trying the code but I am not able to tidy my data for violin plot in
ggplot.
> 
> Any help will be highly appreciated.
> 
> Thanks,
> Puja
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://urldefense.proofpoint.com/v2/url?u=https-
> 3A__stat.ethz.ch_mailman_listinfo_r-2Dhelp&d=DwICAg&c=sJ6xIWYx-
> zLMB3EPkvcnVg&r=9PEhQh2kVeAsRzsn7AkP-g&m=ewsSBA7yD-
> EGNgEo5uwx8ypGde2s8cN0NqRJcjUeat_oxJOzxc4u1RoS4APbTp-G&s=5RT-
> EbmPWAiqxd-tCyTCK3tUPOmNomYvRoE-pgEKXMk&e=
> PLEASE do read the posting guide
> https://urldefense.proofpoint.com/v2/url?u=http-3A__www.R-
> 2Dproject.org_posting-2Dguide.html&d=DwICAg&c=sJ6xIWYx-
> zLMB3EPkvcnVg&r=9PEhQh2kVeAsRzsn7AkP-g&m=ewsSBA7yD-
> EGNgEo5uwx8ypGde2s8cN0NqRJcjUeat_oxJOzxc4u1RoS4APbTp-
> G&s=FhxhDOcldxc5mIg1wiE5kq4D_sxIm1Ho0PbejAHl8xY&e=
> and provide commented, minimal, self-contained, reproducible code.
> 
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-
> guide.html
> and provide commented, minimal, self-contained, reproducible code.

From pj@|nh@07 @end|ng |rom gm@||@com  Fri Apr  1 15:22:02 2022
From: pj@|nh@07 @end|ng |rom gm@||@com (pooja sinha)
Date: Fri, 1 Apr 2022 09:22:02 -0400
Subject: [R] Violin plots in R
In-Reply-To: <fc563a5b5c6a4aeba1353ba31d4980ae@SRVEXCHCM1302.precheza.cz>
References: <CAGjf1cOgGf_hnfyG5msuAFERJOc1wo3f9vTXNYHaP_JH08XBXQ@mail.gmail.com>
 <BN6PR2201MB1553646A54C40A35565E49FACFE09@BN6PR2201MB1553.namprd22.prod.outlook.com>
 <fc563a5b5c6a4aeba1353ba31d4980ae@SRVEXCHCM1302.precheza.cz>
Message-ID: <CAGjf1cNDL3Hwga9hXTNyWzD-P7P8UqBqD8JPG2j5xS8dWwe6TA@mail.gmail.com>

Thanks, I will do that.


Puja

On Fri, Apr 1, 2022 at 8:58 AM PIKAL Petr <petr.pikal at precheza.cz> wrote:

> Hi.
>
> Beside advice of others, at least
>
> str(yourdata)
> and the ggplot code is minimum for us to be able to offer some advice.
>
> Preferable way how to send your data is output from
>
> dput(yourdata) or dput(head(yourdata))
>
> Just copy paste to your email.
>
> Cheers
> Petr
>
> > -----Original Message-----
> > From: R-help <r-help-bounces at r-project.org> On Behalf Of Ebert,Timothy
> > Aaron
> > Sent: Friday, April 1, 2022 11:35 AM
> > To: pooja sinha <pjsinha07 at gmail.com>; r-help mailing list <r-help at r-
> > project.org>
> > Subject: Re: [R] Violin plots in R
> >
> > No data. Attachments are removed. Send only text. Include program. Did
> you
> > look at geom_violin() ? try http://www.sthda.com/english/wiki/ggplot2-
> > violin-plot-quick-start-guide-r-software-and-data-visualization
> >
> > If geom_point() is working then geom_violin() should also work. If
> neither
> > work then the problem is earlier in the program. Possibly in the ggplot()
> > statement, or earlier.
> > Tim
> >
> > -----Original Message-----
> > From: R-help <r-help-bounces at r-project.org> On Behalf Of pooja sinha
> > Sent: Thursday, March 31, 2022 7:00 PM
> > To: r-help mailing list <r-help at r-project.org>
> > Subject: [R] Violin plots in R
> >
> > [External Email]
> >
> > Hi All,
> >
> > I need your help in making the violin plot in R using the data which is
> > attached herewith. I am new to R and having issues in tidying my data for
> R. I
> > am trying the code but I am not able to tidy my data for violin plot in
> ggplot.
> >
> > Any help will be highly appreciated.
> >
> > Thanks,
> > Puja
> > ______________________________________________
> > R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> > https://urldefense.proofpoint.com/v2/url?u=https-
> > 3A__stat.ethz.ch_mailman_listinfo_r-2Dhelp&d=DwICAg&c=sJ6xIWYx-
> > zLMB3EPkvcnVg&r=9PEhQh2kVeAsRzsn7AkP-g&m=ewsSBA7yD-
> > EGNgEo5uwx8ypGde2s8cN0NqRJcjUeat_oxJOzxc4u1RoS4APbTp-G&s=5RT-
> > EbmPWAiqxd-tCyTCK3tUPOmNomYvRoE-pgEKXMk&e=
> > PLEASE do read the posting guide
> > https://urldefense.proofpoint.com/v2/url?u=http-3A__www.R-
> > 2Dproject.org_posting-2Dguide.html&d=DwICAg&c=sJ6xIWYx-
> > zLMB3EPkvcnVg&r=9PEhQh2kVeAsRzsn7AkP-g&m=ewsSBA7yD-
> > EGNgEo5uwx8ypGde2s8cN0NqRJcjUeat_oxJOzxc4u1RoS4APbTp-
> > G&s=FhxhDOcldxc5mIg1wiE5kq4D_sxIm1Ho0PbejAHl8xY&e=
> > and provide commented, minimal, self-contained, reproducible code.
> >
> > ______________________________________________
> > R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> > https://stat.ethz.ch/mailman/listinfo/r-help
> > PLEASE do read the posting guide http://www.R-project.org/posting-
> > guide.html
> > and provide commented, minimal, self-contained, reproducible code.
>

	[[alternative HTML version deleted]]


From j|ox @end|ng |rom mcm@@ter@c@  Fri Apr  1 17:16:18 2022
From: j|ox @end|ng |rom mcm@@ter@c@ (John Fox)
Date: Fri, 1 Apr 2022 11:16:18 -0400
Subject: [R] 25th anniversary of R-help & new rules for the list
Message-ID: <21bf137e-afc8-11a1-65c3-195f6d674944@mcmaster.ca>

Dear R-help list members,

The first message to the R-help email list was posted by Ross Ihaka 25 
years ago, on April 1, 1997!

On this 25th anniversary of R-help, the official description of the list 
and the rules for posting to it have been modified. The general object 
of these changes is to broaden the topics that are legitimately 
discussed on the R-help list, partly to reflect how the list actually is 
used.

The description of the list at <https://www.r-project.org/mail.html> now 
reads:

------------ snip --------------

The ?main? R mailing list, for discussion about problems and solutions 
encountered using R, including using R packages in the standard R 
distribution and on CRAN; announcements (not covered by R-announce or 
R-packages); the availability of new functionality for R and 
documentation of R; and for posting nice examples and benchmarks.

This is quite an active list with many messages per day. An alternative 
is to subscribe and choose daily digests (in plain or MIME format). Use 
the web interface for information, subscription, archives, etc.

Please read the posting guide before sending a message to the list. In 
particular, if asking for help with a problem, it is important to be 
clear and concrete, and it is almost always advisable to send a minimal 
reproducible example of the problem.

There are many more specific R email lists (see below under ?Special 
Interest Groups?). If a problem is appropriate for one of the more 
specific lists, you are usually more likely to get help by posting to 
the more specific list. For example, a problem specific to R under macOS 
should normally be posted to the R-SIG-Mac list, and a problem 
concerning R software for mixed-effects models should normally be posted 
to the R-SIG-mixed-models list.

R-help is not intended for help with homework or basic-statistics questions.

Bugs in contributed CRAN packages should normally be reported directly 
to the package maintainer (enter the command 
maintainer("package-name")). You may also be able to obtain help with a 
problem from the package maintainer.

Help with R problems is available from a number of sources beyond the R 
email lists. See under ?Help? at the R home page.

------------ snip --------------

We have also modified the brief description of the R-help list in the 
posting guide at <https://www.r-project.org/posting-guide.html> and 
(eventually) in the R FAQ.

Best,
John Fox

For the R Foundation
-- 
John Fox, Professor Emeritus
McMaster University
Hamilton, Ontarion, Canada
web: https://socialsciences.mcmaster.ca/jfox/


From @erv|ce @end|ng |rom @hd@w@on@com  Fri Apr  1 17:23:20 2022
From: @erv|ce @end|ng |rom @hd@w@on@com (Stephen H. Dawson, DSL)
Date: Fri, 1 Apr 2022 11:23:20 -0400
Subject: [R] Recommended Statistics Papers and Packages
Message-ID: <f33867b3-5087-0c5e-cf5d-34c79e5f97d4@shdawson.com>

Good Morning,


I have been doing some further reading on the topic of statistics 
lately. I enjoyed reading the following material. I am writing to share 
the material with the list as recommended reading on the respective topics.


Estimating the number of clusters in a data set via the gap statistic
https://hastie.su.domains/Papers/gap.pdf



Package ?FNN?
https://cran.r-project.org/web/packages/FNN/FNN.pdf



The Relationship Between Precision-Recall and ROC Curves
https://www.biostat.wisc.edu/~page/rocpr.pdf


Enjoy!


Kindest Regards
-- 
*Stephen Dawson, DSL*
/Executive Strategy Consultant/
Business & Technology
+1 (865) 804-3454
http://www.shdawson.com


From g@@mo||n@k|1 @end|ng |rom gm@||@com  Fri Apr  1 21:50:01 2022
From: g@@mo||n@k|1 @end|ng |rom gm@||@com (=?UTF-8?Q?Grzegorz_Smoli=C5=84ski?=)
Date: Fri, 1 Apr 2022 21:50:01 +0200
Subject: [R] Modificatio of function body within a function
Message-ID: <CABxpnnnkEvQceozk4yHaDJruTobUuno5Prhs8n5xmnFkpKdyDg@mail.gmail.com>

Hi,

I'm working on a presentation regarding the modification of the
function body on-the-fly and just discovered something I don't
understand. I would like to modify a body of the function within a
function, but I see that it is possible only when explicitly referring
to the environment where the function is defined:

fun1 <- function() {
  1
  body(fun1)[[2]] <- "one"
}
fun1()
body(fun1)
#> {
#>     1
#>     body(fun1)[[2]] <- "one"
#> }

fun2 <- function() {
  2
  env <- environment(fun2)
  body(env$fun2)[[2]] <- "two"
}
fun2()
body(fun2)
#> {
#>     "two"
#>     env <- environment(fun2)
#>     body(env$fun2)[[2]] <- "two"
#> }

Can I get some explanation or some links / articles about this,
please? I thought it won't be a difference and I should be able to
modify a function body also in the first case, because I'm changing
something in the parent environment being in the child environment.

Best regards,

Grzegorz


From bgunter@4567 @end|ng |rom gm@||@com  Fri Apr  1 23:12:28 2022
From: bgunter@4567 @end|ng |rom gm@||@com (Bert Gunter)
Date: Fri, 1 Apr 2022 14:12:28 -0700
Subject: [R] Modificatio of function body within a function
In-Reply-To: <CABxpnnnkEvQceozk4yHaDJruTobUuno5Prhs8n5xmnFkpKdyDg@mail.gmail.com>
References: <CABxpnnnkEvQceozk4yHaDJruTobUuno5Prhs8n5xmnFkpKdyDg@mail.gmail.com>
Message-ID: <CAGxFJbSOOLbPB7ETcSkSO44j-TyH02BdjCBhLvjJ_GkroQW0pg@mail.gmail.com>

Heh ... These self-referential constructs are certainly puzzles...

Does this help:

fun1 <- function() {
   1
   body(fun1)[[2]] <<- 'one'
   'hi'
}

> fun1
function() {
   1
   body(fun1)[[2]] <<- 'one' ## note the double '<<" assigning to the parent env
   'hi'
}

> fun1()
[1] "hi"

> fun1
function ()
{
    "one" ## the change was made
    body(fun1)[[2]] <<- "one"
    "hi"
}

The point is that assignments within a function occur *within* the
function environment unless otherwise specified (either by <<- or the
use of the 'environment' argument in 'body<-'()  ). This is, of
course, central to the functional programming paradigm of no side
effects (unless explicitly invoked).

NOTE: Correction to this requested if this is wrong in any way!!

Cheers,
Bert




Bert Gunter

"The trouble with having an open mind is that people keep coming along
and sticking things into it."
-- Opus (aka Berkeley Breathed in his "Bloom County" comic strip )

Bert Gunter

"The trouble with having an open mind is that people keep coming along
and sticking things into it."
-- Opus (aka Berkeley Breathed in his "Bloom County" comic strip )


On Fri, Apr 1, 2022 at 12:50 PM Grzegorz Smoli?ski
<g.smolinski1 at gmail.com> wrote:
>
> Hi,
>
> I'm working on a presentation regarding the modification of the
> function body on-the-fly and just discovered something I don't
> understand. I would like to modify a body of the function within a
> function, but I see that it is possible only when explicitly referring
> to the environment where the function is defined:
>
> fun1 <- function() {
>   1
>   body(fun1)[[2]] <- "one"
> }
> fun1()
> body(fun1)
> #> {
> #>     1
> #>     body(fun1)[[2]] <- "one"
> #> }
>
> fun2 <- function() {
>   2
>   env <- environment(fun2)
>   body(env$fun2)[[2]] <- "two"
> }
> fun2()
> body(fun2)
> #> {
> #>     "two"
> #>     env <- environment(fun2)
> #>     body(env$fun2)[[2]] <- "two"
> #> }
>
> Can I get some explanation or some links / articles about this,
> please? I thought it won't be a difference and I should be able to
> modify a function body also in the first case, because I'm changing
> something in the parent environment being in the child environment.
>
> Best regards,
>
> Grzegorz
>
> ______________________________________________
> R-help at r-project.org mailing list -- To UNSUBSCRIBE and more, see
> https://stat.ethz.ch/mailman/listinfo/r-help
> PLEASE do read the posting guide http://www.R-project.org/posting-guide.html
> and provide commented, minimal, self-contained, reproducible code.


